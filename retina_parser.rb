#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "linea #{@token.lin}, columna #{@token.col}: token inesperado: #{@token.class}: #{@token.t}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 174)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    29,   135,   123,     6,    27,   151,     3,    77,    38,   120,
    39,    28,    21,   106,   103,   152,   101,   121,     4,   134,
   122,     4,    22,    23,   102,    14,   102,    29,   112,    12,
   126,    27,    13,    15,    22,    23,   113,    16,    28,   100,
    25,    26,    18,    19,    20,    21,    24,   165,   102,    22,
    23,    79,    14,   113,    29,   139,    12,    84,    27,    13,
    15,   141,    22,    23,    16,    28,    82,    25,    26,    18,
    19,    20,    21,    24,   162,   142,    22,    23,   143,    14,
   144,   153,    83,    12,    22,    23,    13,    15,    22,    23,
    75,    16,    22,    23,    25,    26,    18,    19,    20,    21,
    24,    29,    21,    54,   132,    27,    56,    57,    60,    61,
    58,    59,    28,    22,    23,    74,    75,   149,    29,    22,
    23,   111,    27,    22,    23,   108,    14,    72,    29,    28,
    12,   154,    27,    13,    15,    22,    23,   155,    16,    28,
    70,    25,    26,    18,    19,    20,    21,    24,   157,    21,
    22,    23,   159,    14,   160,   171,    45,    12,    25,    26,
    13,    15,    44,    21,    24,    16,   117,   164,    25,    26,
    18,    19,    20,    21,    24,    29,    21,    21,   167,    27,
    79,     4,    31,    29,    21,     5,    28,    27,   -59,   -59,
   -59,   -59,   -59,   -59,    28,    29,   173,    22,    23,    27,
    14,   174,   130,   175,    12,   176,    28,    13,    15,   177,
   nil,   nil,    16,   nil,   nil,    25,    26,    18,    19,    20,
    21,    24,    29,    25,    26,   nil,    27,   nil,    21,    24,
   nil,   nil,   nil,    28,   nil,    25,    26,   nil,   nil,    29,
    21,    24,   nil,    27,    22,    23,   nil,    14,   nil,    29,
    28,    12,   nil,    27,    13,    15,   nil,   nil,   nil,    16,
    28,   nil,    25,    26,    18,    19,    20,    21,    24,   nil,
   nil,    22,    23,   nil,    14,   nil,    33,   nil,    12,    25,
    26,    13,    15,   nil,    21,    24,    16,   nil,   nil,    25,
    26,    18,    19,    20,    21,    24,    29,   nil,    52,    53,
    27,    51,   nil,    49,    50,   nil,    54,    28,    55,    56,
    57,    60,    61,    58,    59,   nil,   nil,   nil,    22,    23,
   nil,    14,   nil,    29,   nil,    12,   nil,    27,    13,    15,
   nil,   nil,   nil,    16,    28,   nil,    25,    26,    18,    19,
    20,    21,    24,   nil,   nil,    22,    23,   nil,    14,   nil,
   128,   nil,    12,   nil,   129,    13,    15,   nil,   nil,   nil,
    16,   nil,   nil,    25,    26,    18,    19,    20,    21,    24,
    29,   nil,   nil,   nil,    27,   nil,   nil,   nil,   nil,    29,
   nil,    28,   nil,    27,   -59,   -59,   -59,   -59,   -59,   -59,
    28,   nil,    22,    23,   nil,    14,   nil,   163,   nil,    12,
    65,   nil,    13,    15,   nil,   nil,   nil,    16,   nil,   nil,
    25,    26,    18,    19,    20,    21,    24,    29,   nil,    25,
    26,    27,   nil,   nil,    21,    24,   nil,    54,    28,    55,
    56,    57,    60,    61,    58,    59,   nil,   nil,   nil,    22,
    23,   nil,    14,   nil,    29,   nil,    12,   nil,    27,    13,
    15,   nil,   nil,   nil,    16,    28,   nil,    25,    26,    18,
    19,    20,    21,    24,   nil,   nil,    22,    23,   nil,    14,
   nil,    29,   nil,    12,   nil,    27,    13,    15,   nil,   nil,
   nil,    16,    28,   nil,    25,    26,    18,    19,    20,    21,
    24,   nil,   nil,    22,    23,   nil,    14,   nil,    29,   nil,
    12,   nil,    27,    13,    15,   nil,   nil,   nil,    16,    28,
   nil,    25,    26,    18,    19,    20,    21,    24,    29,    65,
    29,   nil,    27,   nil,    27,   nil,   nil,   nil,   nil,    28,
   nil,    28,   nil,   nil,   nil,   nil,    29,   nil,    25,    26,
    27,    65,   nil,    21,    24,    29,   nil,    28,   nil,    27,
   -59,   -59,   -59,   -59,   -59,   -59,    28,   nil,    25,    26,
    25,    26,   nil,    21,    24,    21,    24,    54,   nil,    55,
    56,    57,    60,    61,    58,    59,    25,    26,   nil,   nil,
   nil,    21,    24,    29,   nil,    25,    26,    27,   nil,   nil,
    21,    24,   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,
    29,   nil,   nil,   nil,    27,    22,    23,   nil,    14,   nil,
    29,    28,    12,   nil,    27,    13,    15,   nil,   nil,   nil,
    16,    28,   nil,    25,    26,    18,    19,    20,    21,    24,
   nil,   nil,    22,    23,   nil,    14,   nil,    71,   nil,    12,
    25,    26,    13,    15,   nil,    21,    24,    16,   nil,   nil,
    25,    26,    18,    19,    20,    21,    24,    29,   nil,    52,
    53,    27,    51,   nil,    49,    50,   nil,    54,    28,    55,
    56,    57,    60,    61,    58,    59,   nil,   nil,   nil,    22,
    23,   nil,    14,   nil,    29,   nil,    12,   nil,    27,    13,
    15,   nil,   nil,   nil,    16,    28,   nil,    25,    26,    18,
    19,    20,    21,    24,   nil,   nil,    22,    23,   nil,    14,
   nil,    29,   nil,    12,   nil,    27,    13,    15,   nil,   nil,
   nil,    16,    28,   nil,    25,    26,    18,    19,    20,    21,
    24,   nil,   nil,    22,    23,   nil,    14,   nil,    29,   nil,
    12,   nil,    27,    13,    15,   nil,   nil,   nil,    16,    28,
   nil,    25,    26,    18,    19,    20,    21,    24,    29,   nil,
    22,    23,    27,    14,   nil,   150,   nil,    12,   nil,    28,
    13,    15,   nil,   nil,   nil,    16,   nil,   nil,    25,    26,
    18,    19,    20,    21,    24,    29,   nil,   nil,   nil,    27,
   -59,   -59,   -59,   -59,   -59,   -59,    28,   nil,    25,    26,
   nil,   nil,   nil,    21,    24,    29,   nil,    22,    23,    27,
    14,   nil,   148,   nil,    12,   nil,    28,    13,    15,   nil,
   nil,   nil,    16,   nil,   nil,    25,    26,    18,    19,    20,
    21,    24,    29,   nil,   nil,   nil,    27,   -59,   -59,   -59,
   -59,   -59,   -59,    28,   nil,    25,    26,   nil,   nil,    29,
    21,    24,   nil,    27,    22,    23,   nil,    14,   nil,    29,
    28,    12,   nil,    27,    13,    15,   nil,   nil,   nil,    16,
    28,   nil,    25,    26,    18,    19,    20,    21,    24,   nil,
   nil,    22,    23,   nil,    14,   nil,   131,   nil,    12,    25,
    26,    13,    15,   nil,    21,    24,    16,   nil,   nil,    25,
    26,    18,    19,    20,    21,    24,    29,   nil,   nil,   nil,
    27,   nil,   nil,   nil,    29,   nil,   nil,    28,    27,    56,
    57,    60,    61,    58,    59,    28,    29,   nil,    22,    23,
    27,    14,   nil,   133,   nil,    12,   nil,    28,    13,    15,
   nil,   nil,   nil,    16,   nil,   nil,    25,    26,    18,    19,
    20,    21,    24,    29,    25,    26,   nil,    27,   nil,    21,
    24,   nil,   nil,   nil,    28,   nil,    25,    26,   nil,   nil,
    29,    21,    24,   nil,    27,    22,    23,   nil,    14,   nil,
    29,    28,    12,   nil,    27,    13,    15,   nil,   nil,   nil,
    16,    28,   nil,    25,    26,    18,    19,    20,    21,    24,
   nil,   nil,    22,    23,   nil,    14,   nil,   nil,   nil,    12,
    25,    26,    13,    15,   nil,    21,    24,    16,   nil,   nil,
    25,    26,    18,    19,    20,    21,    24,    29,   nil,    29,
   nil,    27,   nil,    27,   nil,   nil,   nil,    29,    28,    29,
    28,    27,   nil,    27,   nil,   nil,   nil,    29,    28,    29,
    28,    27,   nil,    27,   nil,   nil,   nil,   nil,    28,   nil,
    28,   -59,   -59,   -59,   -59,   -59,   -59,    25,    26,    25,
    26,   nil,    21,    24,    21,    24,   nil,    25,    26,    25,
    26,   nil,    21,    24,    21,    24,   nil,    25,    26,    25,
    26,   nil,    21,    24,    21,    24,    29,   nil,    29,   nil,
    27,   nil,    27,   nil,   nil,   nil,    29,    28,    29,    28,
    27,   nil,    27,   nil,   nil,   nil,   nil,    28,    54,    28,
    55,    56,    57,    60,    61,    58,    59,    54,   nil,    55,
    56,    57,    60,    61,    58,    59,    25,    26,    25,    26,
   nil,    21,    24,    21,    24,   nil,    25,    26,    25,    26,
   nil,    21,    24,    21,    24,    29,   nil,   nil,   nil,    27,
   nil,   nil,   nil,   nil,   nil,    54,    28,    55,    56,    57,
    60,    61,    58,    59,   nil,   nil,   nil,    22,    23,   nil,
    14,   nil,   nil,   nil,    12,   nil,   nil,    13,    15,   nil,
   nil,   nil,    16,   nil,   nil,    25,    26,    18,    19,    20,
    21,    24,    52,    53,    48,    51,    47,    49,    50,   nil,
    54,   nil,    55,    56,    57,    60,    61,    58,    59,   nil,
   nil,    52,    53,    48,    51,    47,    49,    50,   nil,    54,
    80,    55,    56,    57,    60,    61,    58,    59,   nil,   nil,
   nil,   nil,   nil,   110,   nil,    81,    52,    53,    48,    51,
    47,    49,    50,   nil,    54,   nil,    55,    56,    57,    60,
    61,    58,    59,    46,   nil,   nil,    52,    53,    48,    51,
    47,    49,    50,   nil,    54,   nil,    55,    56,    57,    60,
    61,    58,    59,   170,   nil,   nil,    52,    53,    48,    51,
    47,    49,    50,   nil,    54,   nil,    55,    56,    57,    60,
    61,    58,    59,   125,   nil,   nil,    52,    53,    48,    51,
    47,    49,    50,   nil,    54,   nil,    55,    56,    57,    60,
    61,    58,    59,   172,   nil,   nil,    52,    53,    48,    51,
    47,    49,    50,   nil,    54,   nil,    55,    56,    57,    60,
    61,    58,    59,   104,    52,    53,    48,    51,    47,    49,
    50,   nil,    54,   nil,    55,    56,    57,    60,    61,    58,
    59,    52,    53,    48,    51,    47,    49,    50,   nil,    54,
   nil,    55,    56,    57,    60,    61,    58,    59,    52,    53,
    48,    51,    47,    49,    50,   nil,    54,   nil,    55,    56,
    57,    60,    61,    58,    59 ]

racc_action_check = [
   161,   120,   106,     2,   161,   143,     0,    39,    11,   105,
    11,   161,    35,    70,    66,   143,    63,   105,     2,   120,
   106,     0,   161,   161,    66,   161,    63,   156,    78,   161,
   112,   156,   161,   161,    70,    70,    78,   161,   156,    62,
   161,   161,   161,   161,   161,   161,   161,   161,   119,   156,
   156,    39,   156,   127,   145,   128,   156,    45,   145,   156,
   156,   130,    43,    43,   156,   145,    43,   156,   156,   156,
   156,   156,   156,   156,   156,   131,   145,   145,   132,   145,
   133,   145,    44,   145,    36,    36,   145,   145,   121,   121,
    73,   145,    14,    14,   145,   145,   145,   145,   145,   145,
   145,     3,   136,    93,   117,     3,    93,    93,    93,    93,
    93,    93,     3,     9,     9,    37,    37,   138,   165,   135,
   135,    77,   165,     3,     3,    71,     3,    33,   168,   165,
     3,   146,   168,     3,     3,   123,   123,   148,     3,   168,
    30,     3,     3,     3,     3,     3,     3,     3,   150,    18,
   168,   168,   152,   168,   153,   168,    16,   168,   165,   165,
   168,   168,    15,   165,   165,   168,    83,   159,   168,   168,
   168,   168,   168,   168,   168,   115,   107,    10,   163,   115,
   113,     7,     5,   162,     4,     1,   115,   162,    96,    96,
    96,    96,    96,    96,   162,    12,   170,   115,   115,    12,
   115,   171,   115,   172,   115,   173,    12,   115,   115,   175,
   nil,   nil,   115,   nil,   nil,   115,   115,   115,   115,   115,
   115,   115,     6,   162,   162,   nil,     6,   nil,   162,   162,
   nil,   nil,   nil,     6,   nil,    12,    12,   nil,   nil,    13,
    12,    12,   nil,    13,     6,     6,   nil,     6,   nil,     8,
    13,     6,   nil,     8,     6,     6,   nil,   nil,   nil,     6,
     8,   nil,     6,     6,     6,     6,     6,     6,     6,   nil,
   nil,     8,     8,   nil,     8,   nil,     8,   nil,     8,    13,
    13,     8,     8,   nil,    13,    13,     8,   nil,   nil,     8,
     8,     8,     8,     8,     8,     8,   164,   nil,    86,    86,
   164,    86,   nil,    86,    86,   nil,    86,   164,    86,    86,
    86,    86,    86,    86,    86,   nil,   nil,   nil,   164,   164,
   nil,   164,   nil,   114,   nil,   164,   nil,   114,   164,   164,
   nil,   nil,   nil,   164,   114,   nil,   164,   164,   164,   164,
   164,   164,   164,   nil,   nil,   114,   114,   nil,   114,   nil,
   114,   nil,   114,   nil,   114,   114,   114,   nil,   nil,   nil,
   114,   nil,   nil,   114,   114,   114,   114,   114,   114,   114,
   158,   nil,   nil,   nil,   158,   nil,   nil,   nil,   nil,   102,
   nil,   158,   nil,   102,    98,    98,    98,    98,    98,    98,
   102,   nil,   158,   158,   nil,   158,   nil,   158,   nil,   158,
   102,   nil,   158,   158,   nil,   nil,   nil,   158,   nil,   nil,
   158,   158,   158,   158,   158,   158,   158,   154,   nil,   102,
   102,   154,   nil,   nil,   102,   102,   nil,    89,   154,    89,
    89,    89,    89,    89,    89,    89,   nil,   nil,   nil,   154,
   154,   nil,   154,   nil,    82,   nil,   154,   nil,    82,   154,
   154,   nil,   nil,   nil,   154,    82,   nil,   154,   154,   154,
   154,   154,   154,   154,   nil,   nil,    82,    82,   nil,    82,
   nil,   151,   nil,    82,   nil,   151,    82,    82,   nil,   nil,
   nil,    82,   151,   nil,    82,    82,    82,    82,    82,    82,
    82,   nil,   nil,   151,   151,   nil,   151,   nil,    19,   nil,
   151,   nil,    19,   151,   151,   nil,   nil,   nil,   151,    19,
   nil,   151,   151,   151,   151,   151,   151,   151,    27,    19,
    20,   nil,    27,   nil,    20,   nil,   nil,   nil,   nil,    27,
   nil,    20,   nil,   nil,   nil,   nil,    28,   nil,    19,    19,
    28,    20,   nil,    19,    19,    29,   nil,    28,   nil,    29,
    99,    99,    99,    99,    99,    99,    29,   nil,    27,    27,
    20,    20,   nil,    27,    27,    20,    20,    90,   nil,    90,
    90,    90,    90,    90,    90,    90,    28,    28,   nil,   nil,
   nil,    28,    28,   149,   nil,    29,    29,   149,   nil,   nil,
    29,    29,   nil,   nil,   149,   nil,   nil,   nil,   nil,   nil,
    38,   nil,   nil,   nil,    38,   149,   149,   nil,   149,   nil,
    32,    38,   149,   nil,    32,   149,   149,   nil,   nil,   nil,
   149,    32,   nil,   149,   149,   149,   149,   149,   149,   149,
   nil,   nil,    32,    32,   nil,    32,   nil,    32,   nil,    32,
    38,    38,    32,    32,   nil,    38,    38,    32,   nil,   nil,
    32,    32,    32,    32,    32,    32,    32,    84,   nil,    85,
    85,    84,    85,   nil,    85,    85,   nil,    85,    84,    85,
    85,    85,    85,    85,    85,    85,   nil,   nil,   nil,    84,
    84,   nil,    84,   nil,    34,   nil,    84,   nil,    34,    84,
    84,   nil,   nil,   nil,    84,    34,   nil,    84,    84,    84,
    84,    84,    84,    84,   nil,   nil,    34,    34,   nil,    34,
   nil,   122,   nil,    34,   nil,   122,    34,    34,   nil,   nil,
   nil,    34,   122,   nil,    34,    34,    34,    34,    34,    34,
    34,   nil,   nil,   122,   122,   nil,   122,   nil,   140,   nil,
   122,   nil,   140,   122,   122,   nil,   nil,   nil,   122,   140,
   nil,   122,   122,   122,   122,   122,   122,   122,    74,   nil,
   140,   140,    74,   140,   nil,   140,   nil,   140,   nil,    74,
   140,   140,   nil,   nil,   nil,   140,   nil,   nil,   140,   140,
   140,   140,   140,   140,   140,   137,   nil,   nil,   nil,   137,
    97,    97,    97,    97,    97,    97,   137,   nil,    74,    74,
   nil,   nil,   nil,    74,    74,    47,   nil,   137,   137,    47,
   137,   nil,   137,   nil,   137,   nil,    47,   137,   137,   nil,
   nil,   nil,   137,   nil,   nil,   137,   137,   137,   137,   137,
   137,   137,    80,   nil,   nil,   nil,    80,    94,    94,    94,
    94,    94,    94,    80,   nil,    47,    47,   nil,   nil,    48,
    47,    47,   nil,    48,    80,    80,   nil,    80,   nil,   116,
    48,    80,   nil,   116,    80,    80,   nil,   nil,   nil,    80,
   116,   nil,    80,    80,    80,    80,    80,    80,    80,   nil,
   nil,   116,   116,   nil,   116,   nil,   116,   nil,   116,    48,
    48,   116,   116,   nil,    48,    48,   116,   nil,   nil,   116,
   116,   116,   116,   116,   116,   116,   118,   nil,   nil,   nil,
   118,   nil,   nil,   nil,    49,   nil,   nil,   118,    49,    92,
    92,    92,    92,    92,    92,    49,    50,   nil,   118,   118,
    50,   118,   nil,   118,   nil,   118,   nil,    50,   118,   118,
   nil,   nil,   nil,   118,   nil,   nil,   118,   118,   118,   118,
   118,   118,   118,   134,    49,    49,   nil,   134,   nil,    49,
    49,   nil,   nil,   nil,   134,   nil,    50,    50,   nil,   nil,
    51,    50,    50,   nil,    51,   134,   134,   nil,   134,   nil,
   129,    51,   134,   nil,   129,   134,   134,   nil,   nil,   nil,
   134,   129,   nil,   134,   134,   134,   134,   134,   134,   134,
   nil,   nil,   129,   129,   nil,   129,   nil,   nil,   nil,   129,
    51,    51,   129,   129,   nil,    51,    51,   129,   nil,   nil,
   129,   129,   129,   129,   129,   129,   129,    52,   nil,    53,
   nil,    52,   nil,    53,   nil,   nil,   nil,    54,    52,    55,
    53,    54,   nil,    55,   nil,   nil,   nil,    56,    54,    57,
    55,    56,   nil,    57,   nil,   nil,   nil,   nil,    56,   nil,
    57,    95,    95,    95,    95,    95,    95,    52,    52,    53,
    53,   nil,    52,    52,    53,    53,   nil,    54,    54,    55,
    55,   nil,    54,    54,    55,    55,   nil,    56,    56,    57,
    57,   nil,    56,    56,    57,    57,    58,   nil,    59,   nil,
    58,   nil,    59,   nil,   nil,   nil,    60,    58,    61,    59,
    60,   nil,    61,   nil,   nil,   nil,   nil,    60,    91,    61,
    91,    91,    91,    91,    91,    91,    91,    87,   nil,    87,
    87,    87,    87,    87,    87,    87,    58,    58,    59,    59,
   nil,    58,    58,    59,    59,   nil,    60,    60,    61,    61,
   nil,    60,    60,    61,    61,    81,   nil,   nil,   nil,    81,
   nil,   nil,   nil,   nil,   nil,    88,    81,    88,    88,    88,
    88,    88,    88,    88,   nil,   nil,   nil,    81,    81,   nil,
    81,   nil,   nil,   nil,    81,   nil,   nil,    81,    81,   nil,
   nil,   nil,    81,   nil,   nil,    81,    81,    81,    81,    81,
    81,    81,    40,    40,    40,    40,    40,    40,    40,   nil,
    40,   nil,    40,    40,    40,    40,    40,    40,    40,   nil,
   nil,    42,    42,    42,    42,    42,    42,    42,   nil,    42,
    40,    42,    42,    42,    42,    42,    42,    42,   nil,   nil,
   nil,   nil,   nil,    76,   nil,    42,    76,    76,    76,    76,
    76,    76,    76,   nil,    76,   nil,    76,    76,    76,    76,
    76,    76,    76,    17,   nil,   nil,    17,    17,    17,    17,
    17,    17,    17,   nil,    17,   nil,    17,    17,    17,    17,
    17,    17,    17,   166,   nil,   nil,   166,   166,   166,   166,
   166,   166,   166,   nil,   166,   nil,   166,   166,   166,   166,
   166,   166,   166,   109,   nil,   nil,   109,   109,   109,   109,
   109,   109,   109,   nil,   109,   nil,   109,   109,   109,   109,
   109,   109,   109,   169,   nil,   nil,   169,   169,   169,   169,
   169,   169,   169,   nil,   169,   nil,   169,   169,   169,   169,
   169,   169,   169,    69,    69,    69,    69,    69,    69,    69,
    69,   nil,    69,   nil,    69,    69,    69,    69,    69,    69,
    69,    67,    67,    67,    67,    67,    67,    67,   nil,    67,
   nil,    67,    67,    67,    67,    67,    67,    67,    64,    64,
    64,    64,    64,    64,    64,   nil,    64,   nil,    64,    64,
    64,    64,    64,    64,    64 ]

racc_action_pointer = [
   -22,   185,   -25,    97,   135,   182,   218,   138,   245,    87,
   128,     6,   191,   235,    66,   113,   106,  1260,   100,   494,
   516,   nil,   nil,   nil,   nil,   nil,   nil,   514,   532,   541,
   136,   nil,   606,   124,   680,   -37,    58,   113,   596,     2,
  1196,   nil,  1215,    36,    44,    25,   nil,   801,   845,   910,
   922,   966,  1023,  1025,  1033,  1035,  1043,  1045,  1092,  1094,
  1102,  1104,    36,    13,  1372,   nil,    11,  1355,   nil,  1338,
     8,   122,   nil,    87,   754,   nil,  1240,   118,    23,   nil,
   828,  1151,   440,   116,   653,   653,   292,  1113,  1151,   413,
   553,  1104,   902,    89,   820,  1044,   171,   773,   367,   533,
   nil,   nil,   375,   nil,   nil,     4,   -22,   127,   nil,  1300,
   nil,   nil,    27,   131,   319,   171,   855,    65,   902,    35,
   -23,    62,   707,   109,   nil,   nil,   nil,    40,    52,   976,
    58,    72,    28,    77,   949,    93,    53,   781,    75,   nil,
   734,   nil,   nil,   -25,   nil,    50,    89,   nil,   134,   579,
   145,   467,   102,   151,   413,   nil,    23,   nil,   366,   137,
   nil,    -4,   179,   175,   292,   114,  1280,   nil,   124,  1320,
   165,   198,   172,   202,   nil,   206,   nil,   nil ]

racc_action_default = [
   -59,   -59,   -59,   -59,   -59,   -59,   -59,    -3,   -59,   -10,
   -59,   -38,   -59,   -59,   -59,   -59,   -59,   -59,   -59,   -59,
   -59,   -32,   -35,   -36,   -37,   -39,   -40,   -59,   -59,   -59,
   -59,   178,   -59,   -59,   -26,   -59,   -34,   -59,   -59,   -59,
   -59,   -38,   -59,   -59,   -59,   -59,   -22,   -59,   -59,   -59,
   -59,   -59,   -59,   -59,   -59,   -59,   -59,   -59,   -59,   -59,
   -59,   -59,   -59,   -59,   -27,   -28,   -59,   -41,   -49,   -59,
   -59,   -59,    -2,   -59,   -59,   -33,   -59,   -59,   -59,   -30,
   -59,   -59,   -59,   -59,   -59,   -42,   -43,   -44,   -45,   -46,
   -47,   -48,   -50,   -51,   -52,   -53,   -54,   -55,   -56,   -57,
   -23,   -24,   -59,   -25,   -58,   -59,   -59,   -59,    -1,   -59,
   -12,   -20,   -59,   -59,   -59,   -59,   -59,   -59,   -59,   -29,
   -59,   -59,   -59,   -59,    -8,   -11,   -21,   -31,   -59,   -59,
   -59,   -59,   -59,   -59,   -59,   -59,   -59,   -59,   -59,   -13,
   -59,   -15,   -16,   -59,   -19,   -59,   -59,    -9,   -59,   -59,
   -59,   -59,   -59,   -59,   -59,    -5,   -59,   -14,   -59,   -59,
    -4,   -59,   -59,   -59,   -59,   -59,   -59,   -17,   -59,   -59,
   -59,   -59,   -59,   -59,   -18,   -59,    -7,    -6 ]

racc_goto_table = [
    30,    78,     8,    63,    66,    32,    37,   105,    41,    41,
     2,     1,   nil,   nil,    62,    41,    41,   nil,   nil,   nil,
   nil,   nil,   nil,    41,    41,    41,   nil,   nil,   nil,   nil,
   nil,    73,    36,   nil,    41,   nil,   nil,    43,   nil,   nil,
   nil,   nil,   nil,    41,    41,    41,    41,    41,    41,    41,
    41,    41,    41,    41,    41,    41,    41,    41,   nil,    36,
   nil,   nil,   nil,   nil,   nil,   nil,    36,   nil,   nil,   nil,
    41,   nil,   nil,    35,   nil,   127,   nil,   nil,    35,   114,
   115,   116,   nil,   118,   nil,   nil,   119,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,
    35,   nil,   nil,   124,   nil,   nil,   nil,    35,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   137,   nil,   nil,   nil,   nil,   nil,   nil,   140,    40,
    42,   nil,   147,   145,   107,   nil,    64,    64,   nil,   nil,
   nil,   nil,   nil,   nil,    67,    68,    69,   nil,   156,   nil,
   158,   nil,   nil,   161,   nil,    76,   nil,   nil,    41,   nil,
   nil,    41,   nil,   168,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   nil,
   nil,   nil,   nil,   nil,   nil,   136,   nil,   138,   nil,   nil,
   nil,   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   146,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    64,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   166,
   nil,   nil,   169 ]

racc_goto_check = [
     4,     9,     3,    10,    10,     3,     4,     5,     4,     4,
     2,     1,   nil,   nil,     4,     4,     4,   nil,   nil,   nil,
   nil,   nil,   nil,     4,     4,     4,   nil,   nil,   nil,   nil,
   nil,     4,     8,   nil,     4,   nil,   nil,     8,   nil,   nil,
   nil,   nil,   nil,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,   nil,     8,
   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,   nil,   nil,
     4,   nil,   nil,     6,   nil,     9,   nil,   nil,     6,     3,
     3,     3,   nil,     3,   nil,   nil,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
     6,   nil,   nil,     4,   nil,   nil,   nil,     6,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,     3,     7,
     7,   nil,     4,     3,     6,   nil,     7,     7,   nil,   nil,
   nil,   nil,   nil,   nil,     7,     7,     7,   nil,     3,   nil,
     3,   nil,   nil,     3,   nil,     7,   nil,   nil,     4,   nil,
   nil,     4,   nil,     3,     7,     7,     7,     7,     7,     7,
     7,     7,     7,     7,     7,     7,     7,     7,     7,   nil,
   nil,   nil,   nil,   nil,   nil,     6,   nil,     6,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,
   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,    11,    10,    -1,    -4,   -63,    64,   117,    23,   -38,
   -16 ]

racc_goto_default = [
   nil,   nil,     7,    34,    11,   nil,    10,    17,     9,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 53, :_reduce_1,
  4, 53, :_reduce_2,
  2, 54, :_reduce_3,
  9, 54, :_reduce_4,
  8, 54, :_reduce_5,
  14, 54, :_reduce_6,
  13, 54, :_reduce_7,
  2, 57, :_reduce_8,
  4, 57, :_reduce_9,
  1, 55, :_reduce_none,
  5, 55, :_reduce_11,
  4, 55, :_reduce_12,
  6, 55, :_reduce_13,
  8, 55, :_reduce_14,
  6, 55, :_reduce_15,
  6, 55, :_reduce_16,
  10, 55, :_reduce_17,
  12, 55, :_reduce_18,
  6, 55, :_reduce_19,
  4, 55, :_reduce_20,
  5, 55, :_reduce_21,
  2, 55, :_reduce_none,
  3, 55, :_reduce_23,
  3, 55, :_reduce_24,
  3, 55, :_reduce_25,
  2, 55, :_reduce_26,
  1, 62, :_reduce_none,
  1, 62, :_reduce_28,
  3, 62, :_reduce_29,
  1, 61, :_reduce_30,
  3, 61, :_reduce_31,
  1, 56, :_reduce_32,
  3, 60, :_reduce_33,
  2, 60, :_reduce_34,
  1, 58, :_reduce_35,
  1, 58, :_reduce_36,
  1, 59, :_reduce_37,
  1, 59, :_reduce_38,
  1, 59, :_reduce_39,
  1, 59, :_reduce_40,
  2, 59, :_reduce_41,
  3, 59, :_reduce_42,
  3, 59, :_reduce_43,
  3, 59, :_reduce_44,
  3, 59, :_reduce_45,
  3, 59, :_reduce_46,
  3, 59, :_reduce_47,
  3, 59, :_reduce_48,
  2, 59, :_reduce_49,
  3, 59, :_reduce_50,
  3, 59, :_reduce_51,
  3, 59, :_reduce_52,
  3, 59, :_reduce_53,
  3, 59, :_reduce_54,
  3, 59, :_reduce_55,
  3, 59, :_reduce_56,
  3, 59, :_reduce_57,
  3, 59, :_reduce_none ]

racc_reduce_n = 59

racc_shift_n = 178

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  Abre_Parentesis => 4,
  Cierra_Parentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  Signo_Coma => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  :UMENOS => 23,
  Flecha => 24,
  Str => 25,
  Pr_Number => 26,
  Pr_Boolean => 27,
  Program => 28,
  Cond_With => 29,
  Cond_Do => 30,
  End => 31,
  Cond_Times => 32,
  Cond_If => 33,
  Cond_Then => 34,
  Cond_Else => 35,
  Cond_While => 36,
  Cond_For => 37,
  Cond_From => 38,
  Cond_To => 39,
  Cond_By => 40,
  Cond_Repeat => 41,
  Pr_Begin => 42,
  Func => 43,
  Bool_True => 44,
  Bool_False => 45,
  Pr_Read => 46,
  Pr_Write => 47,
  Pr_Writeln => 48,
  Idtf => 49,
  Digit => 50,
  Pr_Return => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "UMENOS",
  "\"->\"",
  "\"str\"",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Id",
  "Arg",
  "TipoVar",
  "Exp",
  "Decl",
  "Par",
  "Imp" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 78)
  def _reduce_1(val, _values, result)
     result = Multiple_Prog.new(val[0],Inicio.new(val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 79)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 82)
  def _reduce_3(val, _values, result)
     result = Multiple_Func.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 83)
  def _reduce_4(val, _values, result)
     result = Funcion.new(val[1],val[3],val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 84)
  def _reduce_5(val, _values, result)
     result = Funcion.new(val[1],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_6(val, _values, result)
     result = Funcion.new(val[1],val[3],val[8],val[6],val[10]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[1],nil,val[7],val[5],val[9]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_8(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_9(val, _values, result)
     result = Multiple_Arg.new(val[0],Declaracion.new(val[2],val[3]))
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_11(val, _values, result)
     result = Declaracion.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_12(val, _values, result)
     result = Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_13(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_15(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 99)
  def _reduce_16(val, _values, result)
     result = With.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 100)
  def _reduce_17(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_18(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7],val[11]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_19(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_20(val, _values, result)
     result = Llamada.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_21(val, _values, result)
     result = Llamada.new(val[0],val[2])
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_23(val, _values, result)
     result = Read.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_24(val, _values, result)
     result = Write.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_25(val, _values, result)
     result = Writeln.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_26(val, _values, result)
     result = Bloque_Cod.new(val[0],val[1]) 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_28(val, _values, result)
     result = Cadena.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_29(val, _values, result)
     result = Multiple_Imp.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_30(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_31(val, _values, result)
     result = Multiple_Par.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_32(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_33(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_34(val, _values, result)
     result = Multiple.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_35(val, _values, result)
     result = Number.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_36(val, _values, result)
     result = Boolean.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_37(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_38(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_39(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_40(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_41(val, _values, result)
     result = MenosUnario.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_42(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_43(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_44(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_45(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_46(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_47(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_48(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_49(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_50(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_51(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_52(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_53(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_54(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_55(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_56(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_57(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 58 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
