#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "linea #{@token.lin}, columna #{@token.col}: token inesperado: #{@token.class}: #{@token.t}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 180)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    29,   138,   126,     6,    27,   104,     3,   156,   115,    72,
    38,    28,    39,   109,   106,   105,   116,   157,     4,   137,
   125,     4,    22,    23,   105,    14,   129,    29,   123,    12,
   116,    27,    13,    15,    22,    23,   124,    16,    28,   142,
    25,    26,    18,    19,    20,    21,    24,   170,    87,    22,
    23,   144,    14,   145,    29,   111,    12,   149,    27,    13,
    15,    22,    23,    77,    16,    28,    86,    25,    26,    18,
    19,    20,    21,    24,   167,   105,    22,    23,    21,    14,
    75,   158,   154,    12,    81,    82,    13,    15,   135,    79,
    80,    16,    22,    23,    25,    26,    18,    19,    20,    21,
    24,    29,    81,    82,    21,    27,   103,    79,    80,    22,
    23,   159,    28,    85,    22,    23,    22,    23,    29,    74,
    75,   160,    27,    22,    23,    70,    14,   162,    29,    28,
    12,    21,    27,    13,    15,    22,    23,   164,    16,    28,
   165,    25,    26,    18,    19,    20,    21,    24,   148,   147,
    22,    23,    45,    14,    44,   176,   114,    12,    25,    26,
    13,    15,   169,    21,    24,    16,    22,    23,    25,    26,
    18,    19,    20,    21,    24,    29,   120,    21,   172,    27,
    21,     4,    31,    29,    21,    54,    28,    27,    56,    57,
    60,    61,    58,    59,    28,    29,     5,    22,    23,    27,
    14,   178,   134,   179,    12,   180,    28,    13,    15,   181,
   182,   nil,    16,   nil,   nil,    25,    26,    18,    19,    20,
    21,    24,    29,    25,    26,   nil,    27,   nil,    21,    24,
   nil,   nil,   nil,    28,   nil,    25,    26,   nil,   nil,    29,
    21,    24,   nil,    27,    22,    23,   nil,    14,   nil,    29,
    28,    12,   nil,    27,    13,    15,   nil,   nil,   nil,    16,
    28,   nil,    25,    26,    18,    19,    20,    21,    24,   nil,
   nil,    22,    23,   nil,    14,   nil,    33,   nil,    12,    25,
    26,    13,    15,   nil,    21,    24,    16,   nil,   nil,    25,
    26,    18,    19,    20,    21,    24,    29,   nil,    52,    53,
    27,    51,   nil,    49,    50,   nil,    54,    28,    55,    56,
    57,    60,    61,    58,    59,   nil,   nil,   nil,    22,    23,
   nil,    14,   nil,    29,   nil,    12,   nil,    27,    13,    15,
   nil,   nil,   nil,    16,    28,   nil,    25,    26,    18,    19,
    20,    21,    24,   nil,   nil,    22,    23,   nil,    14,   nil,
    29,   nil,    12,   nil,    27,    13,    15,   nil,   nil,   nil,
    16,    28,   nil,    25,    26,    18,    19,    20,    21,    24,
   nil,   nil,    22,    23,   nil,    14,   nil,   168,   nil,    12,
   nil,   nil,    13,    15,   nil,   nil,   nil,    16,   nil,   nil,
    25,    26,    18,    19,    20,    21,    24,    29,   nil,   nil,
   nil,    27,   nil,   nil,   nil,   nil,    29,   nil,    28,   nil,
    27,   -64,   -64,   -64,   -64,   -64,   -64,    28,   nil,    22,
    23,   nil,    14,   nil,   136,   nil,    12,    65,   nil,    13,
    15,   nil,   nil,   nil,    16,   nil,   nil,    25,    26,    18,
    19,    20,    21,    24,    29,   nil,    25,    26,    27,   nil,
   nil,    21,    24,   nil,    54,    28,    55,    56,    57,    60,
    61,    58,    59,   nil,   nil,   nil,    22,    23,   nil,    14,
   nil,    29,   nil,    12,   nil,    27,    13,    15,   nil,   nil,
   nil,    16,    28,   nil,    25,    26,    18,    19,    20,    21,
    24,   nil,   nil,    22,    23,   nil,    14,   nil,    29,   nil,
    12,   nil,    27,    13,    15,   nil,   nil,   nil,    16,    28,
   nil,    25,    26,    18,    19,    20,    21,    24,   nil,   nil,
    22,    23,    29,    14,   nil,    29,    27,    12,   nil,    27,
    13,    15,   nil,    28,   nil,    16,    28,   nil,    25,    26,
    18,    19,    20,    21,    24,    29,    65,    29,   nil,    27,
   nil,    27,   nil,   nil,   nil,   nil,    28,   nil,    28,   nil,
   nil,   nil,    25,    26,   nil,    25,    26,    21,    24,   nil,
    21,    24,    29,   nil,   nil,   nil,    27,   -64,   -64,   -64,
   -64,   -64,   -64,    28,   nil,    25,    26,    25,    26,   nil,
    21,    24,    21,    24,    22,    23,   nil,    14,   nil,    29,
   nil,    12,   nil,    27,    13,    15,   nil,   nil,   nil,    16,
    28,   nil,    25,    26,    18,    19,    20,    21,    24,   nil,
   nil,    22,    23,   nil,    14,   nil,    71,   nil,    12,   nil,
   nil,    13,    15,   nil,   nil,   nil,    16,   nil,   nil,    25,
    26,    18,    19,    20,    21,    24,    29,   nil,   nil,   nil,
    27,   nil,   nil,   nil,   nil,    29,   nil,    28,   nil,    27,
   -64,   -64,   -64,   -64,   -64,   -64,    28,   nil,    22,    23,
   nil,    14,   nil,   131,   nil,    12,    65,   132,    13,    15,
   nil,   nil,   nil,    16,   nil,   nil,    25,    26,    18,    19,
    20,    21,    24,    29,   nil,    25,    26,    27,   nil,   nil,
    21,    24,   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,
    29,   nil,   nil,   nil,    27,    22,    23,   nil,    14,   nil,
    29,    28,    12,   nil,    27,    13,    15,   nil,   nil,   nil,
    16,    28,   nil,    25,    26,    18,    19,    20,    21,    24,
   nil,   nil,    22,    23,   nil,    14,   nil,   155,   nil,    12,
    25,    26,    13,    15,   nil,    21,    24,    16,   nil,   nil,
    25,    26,    18,    19,    20,    21,    24,    29,   nil,   nil,
   nil,    27,   nil,   nil,   nil,    29,   nil,   nil,    28,    27,
   -64,   -64,   -64,   -64,   -64,   -64,    28,    29,   nil,    22,
    23,    27,    14,   nil,   153,   nil,    12,   nil,    28,    13,
    15,   nil,   nil,   nil,    16,   nil,   nil,    25,    26,    18,
    19,    20,    21,    24,    29,    25,    26,   nil,    27,   nil,
    21,    24,   nil,   nil,   nil,    28,   nil,    25,    26,   nil,
   nil,    29,    21,    24,   nil,    27,    22,    23,   nil,    14,
   nil,    29,    28,    12,   nil,    27,    13,    15,   nil,   nil,
   nil,    16,    28,   nil,    25,    26,    18,    19,    20,    21,
    24,   nil,   nil,    22,    23,   nil,    14,   nil,   133,   nil,
    12,    25,    26,    13,    15,   nil,    21,    24,    16,   nil,
   nil,    25,    26,    18,    19,    20,    21,    24,    29,   nil,
    52,    53,    27,    51,   nil,    49,    50,   nil,    54,    28,
    55,    56,    57,    60,    61,    58,    59,   nil,   nil,   nil,
    22,    23,   nil,    14,   nil,    29,   nil,    12,   nil,    27,
    13,    15,   nil,   nil,   nil,    16,    28,   nil,    25,    26,
    18,    19,    20,    21,    24,   nil,   nil,    22,    23,   nil,
    14,   nil,    29,   nil,    12,   nil,    27,    13,    15,   nil,
   nil,   nil,    16,    28,   nil,    25,    26,    18,    19,    20,
    21,    24,    29,   nil,    22,    23,    27,    14,   nil,   nil,
   nil,    12,   nil,    28,    13,    15,   nil,   nil,   nil,    16,
   nil,   nil,    25,    26,    18,    19,    20,    21,    24,    29,
   nil,   nil,   nil,    27,   -64,   -64,   -64,   -64,   -64,   -64,
    28,    29,    25,    26,   nil,    27,   nil,    21,    24,    29,
   nil,    29,    28,    27,   nil,    27,   nil,   nil,   nil,   nil,
    28,    29,    28,   nil,   nil,    27,   nil,   nil,   nil,    25,
    26,   nil,    28,    29,    21,    24,   nil,    27,   nil,   nil,
   nil,    25,    26,   nil,    28,   nil,    21,    24,   nil,    25,
    26,    25,    26,   nil,    21,    24,    21,    24,   nil,    29,
   nil,    25,    26,    27,   nil,   nil,    21,    24,   nil,   nil,
    28,   nil,    29,    25,    26,   nil,    27,   nil,    21,    24,
   nil,    22,    23,    28,    14,   nil,    29,   nil,    12,   nil,
    27,    13,    15,   nil,   nil,   nil,    16,    28,   nil,    25,
    26,    18,    19,    20,    21,    24,   nil,   nil,   nil,   nil,
    29,   nil,    25,    26,    27,   nil,   nil,    21,    24,    29,
   nil,    28,   nil,    27,   nil,   nil,    25,    26,   nil,    29,
    28,    21,    24,    27,   nil,   nil,   nil,    29,   nil,   nil,
    28,    27,    56,    57,    60,    61,    58,    59,    28,   nil,
    25,    26,   nil,   nil,   nil,    21,    24,   nil,   nil,    25,
    26,   nil,   nil,   nil,    21,    24,   nil,   nil,   nil,    25,
    26,   nil,   nil,   nil,    21,    24,   nil,    25,    26,   nil,
   nil,   nil,    21,    24,    52,    53,    48,    51,    47,    49,
    50,   nil,    54,   nil,    55,    56,    57,    60,    61,    58,
    59,   nil,   nil,    52,    53,    48,    51,    47,    49,    50,
   nil,    54,    83,    55,    56,    57,    60,    61,    58,    59,
   nil,   nil,   nil,   nil,   nil,   175,   nil,    84,    52,    53,
    48,    51,    47,    49,    50,   nil,    54,   nil,    55,    56,
    57,    60,    61,    58,    59,    46,   nil,   nil,    52,    53,
    48,    51,    47,    49,    50,   nil,    54,   nil,    55,    56,
    57,    60,    61,    58,    59,   113,   nil,   nil,    52,    53,
    48,    51,    47,    49,    50,   nil,    54,   nil,    55,    56,
    57,    60,    61,    58,    59,   177,   nil,   nil,    52,    53,
    48,    51,    47,    49,    50,   nil,    54,   nil,    55,    56,
    57,    60,    61,    58,    59,   128,   nil,   nil,    52,    53,
    48,    51,    47,    49,    50,   nil,    54,   nil,    55,    56,
    57,    60,    61,    58,    59,   107,    52,    53,    48,    51,
    47,    49,    50,   nil,    54,   nil,    55,    56,    57,    60,
    61,    58,    59,    52,    53,    48,    51,    47,    49,    50,
   nil,    54,   nil,    55,    56,    57,    60,    61,    58,    59,
    52,    53,    48,    51,    47,    49,    50,   nil,    54,   nil,
    55,    56,    57,    60,    61,    58,    59,    54,   nil,    55,
    56,    57,    60,    61,    58,    59,    54,   nil,    55,    56,
    57,    60,    61,    58,    59,    54,   nil,    55,    56,    57,
    60,    61,    58,    59,    54,   nil,    55,    56,    57,    60,
    61,    58,    59,   -64,   -64,   -64,   -64,   -64,   -64 ]

racc_action_check = [
   166,   123,   109,     2,   166,    63,     0,   146,    78,    33,
    11,   166,    11,    70,    66,    63,    78,   146,     2,   123,
   109,     0,   166,   166,    66,   166,   115,   161,   108,   166,
   130,   161,   166,   166,    70,    70,   108,   166,   161,   131,
   166,   166,   166,   166,   166,   166,   166,   166,    45,   161,
   161,   133,   161,   134,   150,    71,   161,   136,   150,   161,
   161,    36,    36,    39,   161,   150,    44,   161,   161,   161,
   161,   161,   161,   161,   161,   122,   150,   150,   139,   150,
    73,   150,   141,   150,   116,   116,   150,   150,   120,   116,
   116,   150,   124,   124,   150,   150,   150,   150,   150,   150,
   150,     3,    39,    39,    35,     3,    62,    39,    39,    43,
    43,   151,     3,    43,    14,    14,     9,     9,   170,    37,
    37,   153,   170,     3,     3,    30,     3,   155,   173,   170,
     3,    18,   173,     3,     3,   138,   138,   157,     3,   173,
   158,     3,     3,     3,     3,     3,     3,     3,   135,   135,
   173,   173,    16,   173,    15,   173,    77,   173,   170,   170,
   173,   173,   164,   170,   170,   173,   126,   126,   173,   173,
   173,   173,   173,   173,   173,   119,    86,    10,   168,   119,
   110,     7,     5,   167,     4,    96,   119,   167,    96,    96,
    96,    96,    96,    96,   167,    12,     1,   119,   119,    12,
   119,   175,   119,   176,   119,   177,    12,   119,   119,   178,
   180,   nil,   119,   nil,   nil,   119,   119,   119,   119,   119,
   119,   119,     6,   167,   167,   nil,     6,   nil,   167,   167,
   nil,   nil,   nil,     6,   nil,    12,    12,   nil,   nil,    13,
    12,    12,   nil,    13,     6,     6,   nil,     6,   nil,     8,
    13,     6,   nil,     8,     6,     6,   nil,   nil,   nil,     6,
     8,   nil,     6,     6,     6,     6,     6,     6,     6,   nil,
   nil,     8,     8,   nil,     8,   nil,     8,   nil,     8,    13,
    13,     8,     8,   nil,    13,    13,     8,   nil,   nil,     8,
     8,     8,     8,     8,     8,     8,   169,   nil,    89,    89,
   169,    89,   nil,    89,    89,   nil,    89,   169,    89,    89,
    89,    89,    89,    89,    89,   nil,   nil,   nil,   169,   169,
   nil,   169,   nil,    84,   nil,   169,   nil,    84,   169,   169,
   nil,   nil,   nil,   169,    84,   nil,   169,   169,   169,   169,
   169,   169,   169,   nil,   nil,    84,    84,   nil,    84,   nil,
   163,   nil,    84,   nil,   163,    84,    84,   nil,   nil,   nil,
    84,   163,   nil,    84,    84,    84,    84,    84,    84,    84,
   nil,   nil,   163,   163,   nil,   163,   nil,   163,   nil,   163,
   nil,   nil,   163,   163,   nil,   nil,   nil,   163,   nil,   nil,
   163,   163,   163,   163,   163,   163,   163,   121,   nil,   nil,
   nil,   121,   nil,   nil,   nil,   nil,    19,   nil,   121,   nil,
    19,   101,   101,   101,   101,   101,   101,    19,   nil,   121,
   121,   nil,   121,   nil,   121,   nil,   121,    19,   nil,   121,
   121,   nil,   nil,   nil,   121,   nil,   nil,   121,   121,   121,
   121,   121,   121,   121,   159,   nil,    19,    19,   159,   nil,
   nil,    19,    19,   nil,    94,   159,    94,    94,    94,    94,
    94,    94,    94,   nil,   nil,   nil,   159,   159,   nil,   159,
   nil,    83,   nil,   159,   nil,    83,   159,   159,   nil,   nil,
   nil,   159,    83,   nil,   159,   159,   159,   159,   159,   159,
   159,   nil,   nil,    83,    83,   nil,    83,   nil,   156,   nil,
    83,   nil,   156,    83,    83,   nil,   nil,   nil,    83,   156,
   nil,    83,    83,    83,    83,    83,    83,    83,   nil,   nil,
   156,   156,    27,   156,   nil,    20,    27,   156,   nil,    20,
   156,   156,   nil,    27,   nil,   156,    20,   nil,   156,   156,
   156,   156,   156,   156,   156,    28,    20,    29,   nil,    28,
   nil,    29,   nil,   nil,   nil,   nil,    28,   nil,    29,   nil,
   nil,   nil,    27,    27,   nil,    20,    20,    27,    27,   nil,
    20,    20,   154,   nil,   nil,   nil,   154,   102,   102,   102,
   102,   102,   102,   154,   nil,    28,    28,    29,    29,   nil,
    28,    28,    29,    29,   154,   154,   nil,   154,   nil,    32,
   nil,   154,   nil,    32,   154,   154,   nil,   nil,   nil,   154,
    32,   nil,   154,   154,   154,   154,   154,   154,   154,   nil,
   nil,    32,    32,   nil,    32,   nil,    32,   nil,    32,   nil,
   nil,    32,    32,   nil,   nil,   nil,    32,   nil,   nil,    32,
    32,    32,    32,    32,    32,    32,   117,   nil,   nil,   nil,
   117,   nil,   nil,   nil,   nil,   105,   nil,   117,   nil,   105,
   100,   100,   100,   100,   100,   100,   105,   nil,   117,   117,
   nil,   117,   nil,   117,   nil,   117,   105,   117,   117,   117,
   nil,   nil,   nil,   117,   nil,   nil,   117,   117,   117,   117,
   117,   117,   117,    34,   nil,   105,   105,    34,   nil,   nil,
   105,   105,   nil,   nil,    34,   nil,   nil,   nil,   nil,   nil,
    38,   nil,   nil,   nil,    38,    34,    34,   nil,    34,   nil,
   143,    38,    34,   nil,   143,    34,    34,   nil,   nil,   nil,
    34,   143,   nil,    34,    34,    34,    34,    34,    34,    34,
   nil,   nil,   143,   143,   nil,   143,   nil,   143,   nil,   143,
    38,    38,   143,   143,   nil,    38,    38,   143,   nil,   nil,
   143,   143,   143,   143,   143,   143,   143,   140,   nil,   nil,
   nil,   140,   nil,   nil,   nil,    74,   nil,   nil,   140,    74,
    99,    99,    99,    99,    99,    99,    74,    47,   nil,   140,
   140,    47,   140,   nil,   140,   nil,   140,   nil,    47,   140,
   140,   nil,   nil,   nil,   140,   nil,   nil,   140,   140,   140,
   140,   140,   140,   140,    85,    74,    74,   nil,    85,   nil,
    74,    74,   nil,   nil,   nil,    85,   nil,    47,    47,   nil,
   nil,    48,    47,    47,   nil,    48,    85,    85,   nil,    85,
   nil,   118,    48,    85,   nil,   118,    85,    85,   nil,   nil,
   nil,    85,   118,   nil,    85,    85,    85,    85,    85,    85,
    85,   nil,   nil,   118,   118,   nil,   118,   nil,   118,   nil,
   118,    48,    48,   118,   118,   nil,    48,    48,   118,   nil,
   nil,   118,   118,   118,   118,   118,   118,   118,    87,   nil,
    88,    88,    87,    88,   nil,    88,    88,   nil,    88,    87,
    88,    88,    88,    88,    88,    88,    88,   nil,   nil,   nil,
    87,    87,   nil,    87,   nil,   137,   nil,    87,   nil,   137,
    87,    87,   nil,   nil,   nil,    87,   137,   nil,    87,    87,
    87,    87,    87,    87,    87,   nil,   nil,   137,   137,   nil,
   137,   nil,   132,   nil,   137,   nil,   132,   137,   137,   nil,
   nil,   nil,   137,   132,   nil,   137,   137,   137,   137,   137,
   137,   137,    49,   nil,   132,   132,    49,   132,   nil,   nil,
   nil,   132,   nil,    49,   132,   132,   nil,   nil,   nil,   132,
   nil,   nil,   132,   132,   132,   132,   132,   132,   132,    50,
   nil,   nil,   nil,    50,    97,    97,    97,    97,    97,    97,
    50,    51,    49,    49,   nil,    51,   nil,    49,    49,    52,
   nil,    53,    51,    52,   nil,    53,   nil,   nil,   nil,   nil,
    52,    54,    53,   nil,   nil,    54,   nil,   nil,   nil,    50,
    50,   nil,    54,    56,    50,    50,   nil,    56,   nil,   nil,
   nil,    51,    51,   nil,    56,   nil,    51,    51,   nil,    52,
    52,    53,    53,   nil,    52,    52,    53,    53,   nil,   125,
   nil,    54,    54,   125,   nil,   nil,    54,    54,   nil,   nil,
   125,   nil,    57,    56,    56,   nil,    57,   nil,    56,    56,
   nil,   125,   125,    57,   125,   nil,    58,   nil,   125,   nil,
    58,   125,   125,   nil,   nil,   nil,   125,    58,   nil,   125,
   125,   125,   125,   125,   125,   125,   nil,   nil,   nil,   nil,
    59,   nil,    57,    57,    59,   nil,   nil,    57,    57,    60,
   nil,    59,   nil,    60,   nil,   nil,    58,    58,   nil,    61,
    60,    58,    58,    61,   nil,   nil,   nil,    55,   nil,   nil,
    61,    55,    95,    95,    95,    95,    95,    95,    55,   nil,
    59,    59,   nil,   nil,   nil,    59,    59,   nil,   nil,    60,
    60,   nil,   nil,   nil,    60,    60,   nil,   nil,   nil,    61,
    61,   nil,   nil,   nil,    61,    61,   nil,    55,    55,   nil,
   nil,   nil,    55,    55,    40,    40,    40,    40,    40,    40,
    40,   nil,    40,   nil,    40,    40,    40,    40,    40,    40,
    40,   nil,   nil,    42,    42,    42,    42,    42,    42,    42,
   nil,    42,    40,    42,    42,    42,    42,    42,    42,    42,
   nil,   nil,   nil,   nil,   nil,   171,   nil,    42,   171,   171,
   171,   171,   171,   171,   171,   nil,   171,   nil,   171,   171,
   171,   171,   171,   171,   171,    17,   nil,   nil,    17,    17,
    17,    17,    17,    17,    17,   nil,    17,   nil,    17,    17,
    17,    17,    17,    17,    17,    76,   nil,   nil,    76,    76,
    76,    76,    76,    76,    76,   nil,    76,   nil,    76,    76,
    76,    76,    76,    76,    76,   174,   nil,   nil,   174,   174,
   174,   174,   174,   174,   174,   nil,   174,   nil,   174,   174,
   174,   174,   174,   174,   174,   112,   nil,   nil,   112,   112,
   112,   112,   112,   112,   112,   nil,   112,   nil,   112,   112,
   112,   112,   112,   112,   112,    69,    69,    69,    69,    69,
    69,    69,    69,   nil,    69,   nil,    69,    69,    69,    69,
    69,    69,    69,    67,    67,    67,    67,    67,    67,    67,
   nil,    67,   nil,    67,    67,    67,    67,    67,    67,    67,
    64,    64,    64,    64,    64,    64,    64,   nil,    64,   nil,
    64,    64,    64,    64,    64,    64,    64,    93,   nil,    93,
    93,    93,    93,    93,    93,    93,    92,   nil,    92,    92,
    92,    92,    92,    92,    92,    91,   nil,    91,    91,    91,
    91,    91,    91,    91,    90,   nil,    90,    90,    90,    90,
    90,    90,    90,    98,    98,    98,    98,    98,    98 ]

racc_action_pointer = [
   -22,   196,   -25,    97,   135,   182,   218,   138,   245,    90,
   128,     8,   191,   235,    88,   105,   102,  1242,    82,   402,
   521,   nil,   nil,   nil,   nil,   nil,   nil,   518,   541,   543,
   121,   nil,   595,     6,   689,    55,    35,   117,   706,    58,
  1178,   nil,  1197,    83,    28,    16,   nil,   783,   827,   958,
   985,   997,  1005,  1007,  1017,  1133,  1029,  1068,  1082,  1106,
  1115,  1125,   103,     2,  1354,   nil,    11,  1337,   nil,  1320,
     8,    52,   nil,    77,   771,   nil,  1262,   153,     3,   nil,
   nil,   nil,   nil,   467,   319,   810,   126,   884,   884,   292,
  1390,  1381,  1372,  1363,   440,  1125,   171,   977,  1396,   763,
   643,   394,   560,   nil,   nil,   651,   nil,   nil,    23,   -22,
   131,   nil,  1302,   nil,   nil,    23,    40,   642,   837,   171,
    49,   393,    62,   -23,    66,  1055,   140,   nil,   nil,   nil,
    17,    36,   938,    48,    50,    99,    54,   911,   109,    29,
   763,    40,   nil,   716,   nil,   nil,   -23,   nil,   nil,   nil,
    50,    69,   nil,   118,   568,   124,   494,    87,   137,   440,
   nil,    23,   nil,   346,   132,   nil,    -4,   179,   175,   292,
   114,  1222,   nil,   124,  1282,   170,   200,   174,   206,   nil,
   207,   nil,   nil ]

racc_action_default = [
   -64,   -64,   -64,   -64,   -64,   -64,   -64,    -3,   -64,   -10,
   -64,   -43,   -64,   -64,   -64,   -64,   -64,   -64,   -64,   -64,
   -64,   -37,   -40,   -41,   -42,   -44,   -45,   -64,   -64,   -64,
   -64,   183,   -64,   -64,   -26,   -64,   -39,   -64,   -64,   -64,
   -64,   -43,   -64,   -64,   -64,   -64,   -22,   -64,   -64,   -64,
   -64,   -64,   -64,   -64,   -64,   -64,   -64,   -64,   -64,   -64,
   -64,   -64,   -64,   -64,   -29,   -30,   -64,   -46,   -54,   -64,
   -64,   -64,    -2,   -64,   -64,   -38,   -64,   -64,   -64,   -32,
   -33,   -34,   -35,   -64,   -64,   -64,   -64,   -64,   -47,   -48,
   -49,   -50,   -51,   -52,   -53,   -55,   -56,   -57,   -58,   -59,
   -60,   -61,   -62,   -23,   -24,   -64,   -25,   -63,   -64,   -64,
   -64,    -1,   -64,   -12,   -20,   -64,   -64,   -64,   -64,   -64,
   -64,   -64,   -31,   -64,   -64,   -64,   -64,    -8,   -11,   -21,
   -36,   -64,   -64,   -64,   -64,   -64,   -64,   -64,   -64,   -64,
   -64,   -64,   -13,   -64,   -15,   -16,   -64,   -27,   -28,   -19,
   -64,   -64,    -9,   -64,   -64,   -64,   -64,   -64,   -64,   -64,
    -5,   -64,   -14,   -64,   -64,    -4,   -64,   -64,   -64,   -64,
   -64,   -64,   -17,   -64,   -64,   -64,   -64,   -64,   -64,   -18,
   -64,    -7,    -6 ]

racc_goto_table = [
    30,    78,     8,   146,   108,    32,    37,     2,    41,    41,
    63,    66,     1,   nil,    62,    41,    41,   nil,   nil,   nil,
   nil,   nil,   nil,    41,    41,    41,   nil,   nil,   nil,   nil,
   nil,    73,    35,    36,    41,   nil,   nil,    35,    43,   nil,
   nil,   nil,   nil,    41,    41,    41,    41,    41,    41,    41,
    41,    41,    41,    41,    41,    41,    41,    41,   nil,    35,
    36,   nil,   nil,   nil,   nil,   nil,    35,    36,   nil,   nil,
    41,   nil,    40,    42,   nil,   nil,   nil,   nil,   130,    64,
    64,   nil,   117,   118,   119,   nil,   121,    67,    68,    69,
   nil,   nil,   nil,   110,   nil,   nil,   122,   nil,    76,   nil,
   nil,    41,   nil,   nil,   nil,   nil,   127,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,   102,   nil,   nil,   140,   nil,   nil,   nil,   nil,   nil,
   nil,   143,   nil,   nil,   112,   152,   150,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   139,   nil,   141,
   nil,   nil,   nil,   161,   nil,   163,   nil,   nil,   166,   nil,
   nil,   151,   nil,    41,   nil,    64,    41,   nil,   173,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   171,   nil,   nil,
   174 ]

racc_goto_check = [
     4,    10,     3,     9,     5,     3,     4,     2,     4,     4,
    11,    11,     1,   nil,     4,     4,     4,   nil,   nil,   nil,
   nil,   nil,   nil,     4,     4,     4,   nil,   nil,   nil,   nil,
   nil,     4,     6,     8,     4,   nil,   nil,     6,     8,   nil,
   nil,   nil,   nil,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,   nil,     6,
     8,   nil,   nil,   nil,   nil,   nil,     6,     8,   nil,   nil,
     4,   nil,     7,     7,   nil,   nil,   nil,   nil,    10,     7,
     7,   nil,     3,     3,     3,   nil,     3,     7,     7,     7,
   nil,   nil,   nil,     6,   nil,   nil,    11,   nil,     7,   nil,
   nil,     4,   nil,   nil,   nil,   nil,     4,     7,     7,     7,
     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     7,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   nil,   nil,     7,     4,     3,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,   nil,     6,
   nil,   nil,   nil,     3,   nil,     3,   nil,   nil,     3,   nil,
   nil,     6,   nil,     4,   nil,     7,     4,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,
     7 ]

racc_goto_pointer = [
   nil,    12,     7,    -1,    -4,   -66,    23,    60,    24,  -132,
   -38,    -9 ]

racc_goto_default = [
   nil,   nil,     7,    34,    11,   nil,    10,    17,     9,   nil,
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 53, :_reduce_1,
  4, 53, :_reduce_2,
  2, 54, :_reduce_3,
  9, 54, :_reduce_4,
  8, 54, :_reduce_5,
  14, 54, :_reduce_6,
  13, 54, :_reduce_7,
  2, 57, :_reduce_8,
  4, 57, :_reduce_9,
  1, 55, :_reduce_none,
  5, 55, :_reduce_11,
  4, 55, :_reduce_12,
  6, 55, :_reduce_13,
  8, 55, :_reduce_14,
  6, 55, :_reduce_15,
  6, 55, :_reduce_16,
  10, 55, :_reduce_17,
  12, 55, :_reduce_18,
  6, 55, :_reduce_19,
  4, 55, :_reduce_20,
  5, 55, :_reduce_21,
  2, 55, :_reduce_none,
  3, 55, :_reduce_23,
  3, 55, :_reduce_24,
  3, 55, :_reduce_25,
  2, 55, :_reduce_26,
  1, 61, :_reduce_27,
  1, 61, :_reduce_28,
  1, 63, :_reduce_none,
  1, 63, :_reduce_30,
  3, 63, :_reduce_31,
  1, 62, :_reduce_32,
  1, 62, :_reduce_33,
  1, 62, :_reduce_34,
  1, 62, :_reduce_35,
  3, 62, :_reduce_36,
  1, 56, :_reduce_37,
  3, 60, :_reduce_38,
  2, 60, :_reduce_39,
  1, 58, :_reduce_40,
  1, 58, :_reduce_41,
  1, 59, :_reduce_42,
  1, 59, :_reduce_43,
  1, 59, :_reduce_44,
  1, 59, :_reduce_45,
  2, 59, :_reduce_46,
  3, 59, :_reduce_47,
  3, 59, :_reduce_48,
  3, 59, :_reduce_49,
  3, 59, :_reduce_50,
  3, 59, :_reduce_51,
  3, 59, :_reduce_52,
  3, 59, :_reduce_53,
  2, 59, :_reduce_54,
  3, 59, :_reduce_55,
  3, 59, :_reduce_56,
  3, 59, :_reduce_57,
  3, 59, :_reduce_58,
  3, 59, :_reduce_59,
  3, 59, :_reduce_60,
  3, 59, :_reduce_61,
  3, 59, :_reduce_62,
  3, 59, :_reduce_none ]

racc_reduce_n = 64

racc_shift_n = 183

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  Abre_Parentesis => 4,
  Cierra_Parentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  Signo_Coma => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  :UMENOS => 23,
  Flecha => 24,
  Str => 25,
  Pr_Number => 26,
  Pr_Boolean => 27,
  Program => 28,
  Cond_With => 29,
  Cond_Do => 30,
  End => 31,
  Cond_Times => 32,
  Cond_If => 33,
  Cond_Then => 34,
  Cond_Else => 35,
  Cond_While => 36,
  Cond_For => 37,
  Cond_From => 38,
  Cond_To => 39,
  Cond_By => 40,
  Cond_Repeat => 41,
  Pr_Begin => 42,
  Func => 43,
  Bool_True => 44,
  Bool_False => 45,
  Pr_Read => 46,
  Pr_Write => 47,
  Pr_Writeln => 48,
  Idtf => 49,
  Digit => 50,
  Pr_Return => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "UMENOS",
  "\"->\"",
  "\"str\"",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Id",
  "Arg",
  "TipoVar",
  "Exp",
  "Decl",
  "Limite",
  "Par",
  "Imp" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 78)
  def _reduce_1(val, _values, result)
     result = Multiple_Prog.new(val[0],Inicio.new(val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 79)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 82)
  def _reduce_3(val, _values, result)
     result = Multiple_Func.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 83)
  def _reduce_4(val, _values, result)
     result = Funcion.new(val[1],val[3],val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 84)
  def _reduce_5(val, _values, result)
     result = Funcion.new(val[1],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_6(val, _values, result)
     result = Funcion.new(val[1],val[3],val[8],val[6],val[10]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[1],nil,val[7],val[5],val[9]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_8(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_9(val, _values, result)
     result = Multiple.new(val[0],Declaracion.new(val[2],val[3]))
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_11(val, _values, result)
     result = Declaracion.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_12(val, _values, result)
     result = Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_13(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_15(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 99)
  def _reduce_16(val, _values, result)
     result = With.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 100)
  def _reduce_17(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_18(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7],val[11]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_19(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_20(val, _values, result)
     result = Llamada.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_21(val, _values, result)
     result = Llamada.new(val[0],val[2])
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_23(val, _values, result)
     result = Read.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_24(val, _values, result)
     result = Write.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_25(val, _values, result)
     result = Writeln.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_26(val, _values, result)
     result = Bloque_Cod.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_27(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_28(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'retina_parser.y', 116)
  def _reduce_30(val, _values, result)
     result = Cadena.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_31(val, _values, result)
     result = Multiple.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_32(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_33(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_34(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_35(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_36(val, _values, result)
     result = Multiple_Par.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_37(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_38(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_39(val, _values, result)
     result = Multiple.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_40(val, _values, result)
     result = Number.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_41(val, _values, result)
     result = Boolean.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_42(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_43(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_44(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_45(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_46(val, _values, result)
     result = MenosUnario.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_47(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_48(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_49(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_50(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_51(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_52(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_53(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_54(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_55(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_56(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 153)
  def _reduce_57(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 154)
  def _reduce_58(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 155)
  def _reduce_59(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_60(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_61(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 158)
  def _reduce_62(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 63 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
