#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Error de sintaxis en: #{@token}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 160)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    82,   114,    24,   127,     3,     6,    22,    95,   102,   -29,
    63,    18,    19,    23,   111,   145,   103,   -29,     4,     4,
    64,    77,   112,    24,   115,    18,    19,    22,    32,    76,
    33,   113,   117,   126,    23,    75,    65,    98,    20,    21,
    37,    36,    18,    19,    24,    14,   123,   124,    22,    12,
    62,    60,    13,    15,    41,    23,    16,   101,   129,    20,
    21,    10,    11,    18,    19,    24,    14,   130,   131,    22,
    12,    64,    64,    13,    15,    24,    23,    16,   132,    22,
    20,    21,    10,    11,    18,    19,    23,    14,   -54,   -54,
   -54,    12,   -54,   -54,    13,    15,    24,    40,    16,   134,
    22,    20,    21,    10,    11,    39,   136,    23,   137,   138,
   139,    20,    21,    37,    36,    18,    19,    24,    14,   140,
   154,    22,    12,   141,   142,    13,    15,    24,    23,    16,
    34,    22,    20,    21,    10,    11,    18,    19,    23,    14,
    52,    53,    56,    12,    54,    55,    13,    15,    24,   108,
    16,    97,    22,    20,    21,    10,    11,   146,   147,    23,
   148,   149,   150,    20,    21,    37,    36,    18,    19,    24,
    14,    31,    28,    22,    12,   152,     4,    13,    15,    26,
    23,    16,    25,   107,    20,    21,    10,    11,    18,    19,
    24,    14,   157,     5,    22,    12,   159,   160,    13,    15,
   161,    23,    16,   162,   nil,    20,    21,    10,    11,    18,
    19,    24,    14,   nil,   144,    22,    12,   nil,   nil,    13,
    15,    24,    23,    16,   nil,    22,    20,    21,    10,    11,
    18,    19,    23,    14,    24,   143,   nil,    12,    22,   nil,
    13,    15,    24,   nil,    16,    23,    22,    20,    21,    10,
    11,   nil,   nil,    23,   nil,   nil,   nil,    20,    21,    37,
    36,    50,   nil,    24,    52,    53,    56,    22,    54,    55,
    20,    21,    37,    36,    23,   nil,   nil,   nil,    20,    21,
    37,    36,    18,    19,    24,    14,   nil,   nil,    22,    12,
   nil,   nil,    13,    15,    24,    23,    16,   nil,    22,    20,
    21,    10,    11,    18,    19,    23,    14,    24,   nil,   nil,
    12,    22,   nil,    13,    15,    24,   nil,    16,    23,    22,
    20,    21,    10,    11,    24,   nil,    23,   nil,    22,   nil,
    20,    21,    37,    36,   nil,    23,    24,   -54,   -54,   -54,
    22,   -54,   -54,    20,    21,    37,    36,    23,   nil,   nil,
   nil,    20,    21,    37,    36,   nil,   nil,   nil,   nil,   nil,
    20,    21,    37,    36,   nil,    24,   -54,   -54,   -54,    22,
   -54,   -54,    20,    21,    37,    36,    23,   -54,   -54,   -54,
   nil,   -54,   -54,   nil,    18,    19,    24,    14,   nil,    61,
    22,    12,   nil,   nil,    13,    15,   nil,    23,    16,   nil,
   nil,    20,    21,    10,    11,    18,    19,    24,    14,   nil,
   125,    22,    12,   nil,   nil,    13,    15,   nil,    23,    16,
   nil,   nil,    20,    21,    10,    11,    18,    19,    24,    14,
   nil,   nil,    22,    12,   nil,   nil,    13,    15,   nil,    23,
    16,   nil,   nil,    20,    21,    10,    11,    18,    19,    24,
    14,   nil,   122,    22,    12,   nil,   nil,    13,    15,    24,
    23,    16,   nil,    22,    20,    21,    10,    11,    18,    19,
    23,    14,    24,   120,   nil,    12,    22,   121,    13,    15,
    24,    67,    16,    23,    22,    20,    21,    10,    11,    24,
   nil,    23,   nil,    22,   nil,    20,    21,    37,    36,   nil,
    23,    24,   -54,   -54,   -54,    22,   -54,   -54,    20,    21,
    37,    36,    23,   nil,   nil,   nil,    20,    21,    71,    36,
    24,   nil,   nil,   nil,    22,    20,    21,    37,    36,   nil,
    24,    23,   nil,   nil,    22,   nil,   nil,    20,    21,    37,
    36,    23,    24,   nil,   nil,   nil,    22,   nil,   nil,   nil,
    24,   nil,   nil,    23,    22,   nil,    20,    21,    71,    36,
    24,    23,   nil,   nil,    22,   nil,    20,    21,    37,    36,
   nil,    23,    24,   nil,   nil,   nil,    22,   nil,    20,    21,
    37,    36,   nil,    23,   nil,   nil,    20,    21,    37,    36,
   nil,   nil,   nil,   nil,   nil,   nil,    20,    21,    37,    36,
   nil,    24,   nil,   nil,   nil,    22,   nil,   nil,    20,    21,
    37,    36,    23,    24,   nil,   nil,   nil,    22,    24,   nil,
    18,    19,    22,    14,    23,   nil,   nil,    12,   nil,    23,
    13,    15,    24,   nil,    16,   nil,    22,    20,    21,    10,
    11,   nil,    24,    23,   nil,   nil,    22,   nil,   nil,    20,
    21,    37,    36,    23,    20,    21,    37,    36,   nil,   nil,
   nil,    24,   nil,   nil,   nil,    22,   nil,   nil,    20,    21,
    37,    36,    23,   nil,   nil,   nil,   nil,   nil,    20,    21,
    37,    36,    50,   nil,    51,    52,    53,    56,   nil,    54,
    55,   nil,   nil,   nil,   nil,   nil,   nil,    20,    21,    37,
    36,    48,    49,    44,    47,    43,    45,    46,   nil,    50,
   nil,    51,    52,    53,    56,   nil,    54,    55,   nil,    48,
    49,    44,    47,    43,    45,    46,    73,    50,   nil,    51,
    52,    53,    56,   nil,    54,    55,   nil,   nil,   156,   nil,
    74,    48,    49,    44,    47,    43,    45,    46,   nil,    50,
   nil,    51,    52,    53,    56,   116,    54,    55,    48,    49,
    44,    47,    43,    45,    46,   nil,    50,   nil,    51,    52,
    53,    56,    42,    54,    55,    48,    49,    44,    47,    43,
    45,    46,   nil,    50,   nil,    51,    52,    53,    56,   158,
    54,    55,    48,    49,    44,    47,    43,    45,    46,   nil,
    50,   nil,    51,    52,    53,    56,   100,    54,    55,    48,
    49,    44,    47,    43,    45,    46,   nil,    50,   nil,    51,
    52,    53,    56,   104,    54,    55,    48,    49,    44,    47,
    43,    45,    46,   nil,    50,   nil,    51,    52,    53,    56,
   nil,    54,    55,    93,    48,    49,    44,    47,    43,    45,
    46,   nil,    50,   nil,    51,    52,    53,    56,   nil,    54,
    55,    48,    49,    44,    47,    43,    45,    46,   nil,    50,
   nil,    51,    52,    53,    56,   nil,    54,    55,    48,    49,
   nil,    47,   nil,    45,    46,   nil,    50,   nil,    51,    52,
    53,    56,   nil,    54,    55,    48,    49,   nil,    47,   nil,
    45,    46,   nil,    50,   nil,    51,    52,    53,    56,   nil,
    54,    55,    48,    49,   nil,    47,   nil,    45,    46,   nil,
    50,   nil,    51,    52,    53,    56,   nil,    54,    55,    48,
    49,    44,    47,    43,    45,    46,   nil,    50,   nil,    51,
    52,    53,    56,   nil,    54,    55,    48,    49,    44,    47,
    43,    45,    46,   nil,    50,   nil,    51,    52,    53,    56,
   nil,    54,    55,    50,   nil,    51,    52,    53,    56,   nil,
    54,    55,    50,   nil,    51,    52,    53,    56,   nil,    54,
    55,    50,   nil,    51,    52,    53,    56,   nil,    54,    55,
    50,   nil,    51,    52,    53,    56,   nil,    54,    55 ]

racc_action_check = [
    46,    95,    46,   111,     0,     2,    46,    60,    68,    71,
    30,   112,   112,    46,    94,   136,    68,    71,     0,     2,
    30,    41,    94,    73,    96,    60,    60,    73,    10,    40,
    10,    95,   102,   111,    73,    39,    31,    64,    46,    46,
    46,    46,    73,    73,    77,    73,   107,   108,    77,    73,
    28,    25,    73,    73,    16,    77,    73,    67,   113,    73,
    73,    73,    73,    77,    77,     3,    77,   114,   115,     3,
    77,    70,   119,    77,    77,   152,     3,    77,   120,   152,
    77,    77,    77,    77,     3,     3,   152,     3,    92,    92,
    92,     3,    92,    92,     3,     3,   151,    15,     3,   122,
   151,     3,     3,     3,     3,    14,   124,   151,   125,   126,
   127,   152,   152,   152,   152,   151,   151,     6,   151,   128,
   151,     6,   151,   129,   130,   151,   151,   148,     6,   151,
    11,   148,   151,   151,   151,   151,     6,     6,   148,     6,
    86,    86,    86,     6,    86,    86,     6,     6,     8,    76,
     6,    61,     8,     6,     6,     6,     6,   138,   139,     8,
   142,   143,   144,   148,   148,   148,   148,     8,     8,   145,
     8,     9,     8,   145,     8,   147,     7,     8,     8,     5,
   145,     8,     4,    75,     8,     8,     8,     8,   145,   145,
   135,   145,   154,     1,   135,   145,   156,   158,   145,   145,
   159,   135,   145,   160,   nil,   145,   145,   145,   145,   135,
   135,   133,   135,   nil,   135,   133,   135,   nil,   nil,   135,
   135,    12,   133,   135,   nil,    12,   135,   135,   135,   135,
   133,   133,    12,   133,    13,   133,   nil,   133,    13,   nil,
   133,   133,    65,   nil,   133,    13,    65,   133,   133,   133,
   133,   nil,   nil,    65,   nil,   nil,   nil,    12,    12,    12,
    12,    87,   nil,   123,    87,    87,    87,   123,    87,    87,
    13,    13,    13,    13,   123,   nil,   nil,   nil,    65,    65,
    65,    65,   123,   123,    74,   123,   nil,   nil,    74,   123,
   nil,   nil,   123,   123,    56,    74,   123,   nil,    56,   123,
   123,   123,   123,    74,    74,    56,    74,    22,   nil,   nil,
    74,    22,   nil,    74,    74,    23,   nil,    74,    22,    23,
    74,    74,    74,    74,    24,   nil,    23,   nil,    24,   nil,
    56,    56,    56,    56,   nil,    24,    82,    91,    91,    91,
    82,    91,    91,    22,    22,    22,    22,    82,   nil,   nil,
   nil,    23,    23,    23,    23,   nil,   nil,   nil,   nil,   nil,
    24,    24,    24,    24,   nil,    27,    88,    88,    88,    27,
    88,    88,    82,    82,    82,    82,    27,    90,    90,    90,
   nil,    90,    90,   nil,    27,    27,   109,    27,   nil,    27,
   109,    27,   nil,   nil,    27,    27,   nil,   109,    27,   nil,
   nil,    27,    27,    27,    27,   109,   109,    29,   109,   nil,
   109,    29,   109,   nil,   nil,   109,   109,   nil,    29,   109,
   nil,   nil,   109,   109,   109,   109,    29,    29,   106,    29,
   nil,   nil,   106,    29,   nil,   nil,    29,    29,   nil,   106,
    29,   nil,   nil,    29,    29,    29,    29,   106,   106,   105,
   106,   nil,   106,   105,   106,   nil,   nil,   106,   106,    51,
   105,   106,   nil,    51,   106,   106,   106,   106,   105,   105,
    51,   105,    34,   105,   nil,   105,    34,   105,   105,   105,
    33,    33,   105,    34,    33,   105,   105,   105,   105,    55,
   nil,    33,   nil,    55,   nil,    51,    51,    51,    51,   nil,
    55,    54,    89,    89,    89,    54,    89,    89,    34,    34,
    34,    34,    54,   nil,   nil,   nil,    33,    33,    33,    33,
   103,   nil,   nil,   nil,   103,    55,    55,    55,    55,   nil,
    53,   103,   nil,   nil,    53,   nil,   nil,    54,    54,    54,
    54,    53,    52,   nil,   nil,   nil,    52,   nil,   nil,   nil,
    43,   nil,   nil,    52,    43,   nil,   103,   103,   103,   103,
    44,    43,   nil,   nil,    44,   nil,    53,    53,    53,    53,
   nil,    44,    45,   nil,   nil,   nil,    45,   nil,    52,    52,
    52,    52,   nil,    45,   nil,   nil,    43,    43,    43,    43,
   nil,   nil,   nil,   nil,   nil,   nil,    44,    44,    44,    44,
   nil,   121,   nil,   nil,   nil,   121,   nil,   nil,    45,    45,
    45,    45,   121,    47,   nil,   nil,   nil,    47,    48,   nil,
   121,   121,    48,   121,    47,   nil,   nil,   121,   nil,    48,
   121,   121,    49,   nil,   121,   nil,    49,   121,   121,   121,
   121,   nil,    50,    49,   nil,   nil,    50,   nil,   nil,    47,
    47,    47,    47,    50,    48,    48,    48,    48,   nil,   nil,
   nil,    32,   nil,   nil,   nil,    32,   nil,   nil,    49,    49,
    49,    49,    32,   nil,   nil,   nil,   nil,   nil,    50,    50,
    50,    50,    85,   nil,    85,    85,    85,    85,   nil,    85,
    85,   nil,   nil,   nil,   nil,   nil,   nil,    32,    32,    32,
    32,    35,    35,    35,    35,    35,    35,    35,   nil,    35,
   nil,    35,    35,    35,    35,   nil,    35,    35,   nil,    38,
    38,    38,    38,    38,    38,    38,    35,    38,   nil,    38,
    38,    38,    38,   nil,    38,    38,   nil,   nil,   153,   nil,
    38,   153,   153,   153,   153,   153,   153,   153,   nil,   153,
   nil,   153,   153,   153,   153,    99,   153,   153,    99,    99,
    99,    99,    99,    99,    99,   nil,    99,   nil,    99,    99,
    99,    99,    17,    99,    99,    17,    17,    17,    17,    17,
    17,    17,   nil,    17,   nil,    17,    17,    17,    17,   155,
    17,    17,   155,   155,   155,   155,   155,   155,   155,   nil,
   155,   nil,   155,   155,   155,   155,    66,   155,   155,    66,
    66,    66,    66,    66,    66,    66,   nil,    66,   nil,    66,
    66,    66,    66,    72,    66,    66,    72,    72,    72,    72,
    72,    72,    72,   nil,    72,   nil,    72,    72,    72,    72,
   nil,    72,    72,    59,    59,    59,    59,    59,    59,    59,
    59,   nil,    59,   nil,    59,    59,    59,    59,   nil,    59,
    59,    69,    69,    69,    69,    69,    69,    69,   nil,    69,
   nil,    69,    69,    69,    69,   nil,    69,    69,    79,    79,
   nil,    79,   nil,    79,    79,   nil,    79,   nil,    79,    79,
    79,    79,   nil,    79,    79,    78,    78,   nil,    78,   nil,
    78,    78,   nil,    78,   nil,    78,    78,    78,    78,   nil,
    78,    78,    57,    57,   nil,    57,   nil,    57,    57,   nil,
    57,   nil,    57,    57,    57,    57,   nil,    57,    57,   110,
   110,   110,   110,   110,   110,   110,   nil,   110,   nil,   110,
   110,   110,   110,   nil,   110,   110,   118,   118,   118,   118,
   118,   118,   118,   nil,   118,   nil,   118,   118,   118,   118,
   nil,   118,   118,    80,   nil,    80,    80,    80,    80,   nil,
    80,    80,    81,   nil,    81,    81,    81,    81,   nil,    81,
    81,    84,   nil,    84,    84,    84,    84,   nil,    84,    84,
    83,   nil,    83,    83,    83,    83,   nil,    83,    83 ]

racc_action_pointer = [
   -21,   193,   -20,    61,   140,   179,   113,   137,   144,   129,
    26,   128,   217,   230,    82,    55,    11,   769,   nil,   nil,
   nil,   nil,   303,   311,   320,    47,   nil,   361,    47,   403,
     7,    34,   657,   476,   468,   695,   nil,   nil,   713,    -7,
    -6,    -8,   nil,   546,   556,   568,    -2,   609,   614,   628,
   638,   455,   538,   526,   497,   485,   290,   906,   nil,   838,
     2,   148,   nil,   nil,    -5,   238,   803,    54,     3,   855,
    58,     4,   820,    19,   280,   180,   106,    40,   889,   872,
   949,   958,   332,   976,   967,   668,   123,   247,   349,   485,
   360,   320,    71,   nil,     9,    -7,    11,   nil,   nil,   752,
   nil,   nil,    29,   516,   nil,   445,   424,    19,    11,   382,
   923,    -5,   -12,    30,    50,    26,   nil,   nil,   940,    59,
    75,   597,    96,   259,    63,   105,    81,    93,    77,   120,
    86,   nil,   nil,   207,   nil,   186,   -12,   nil,   154,   120,
   nil,   nil,   116,   158,   159,   165,   nil,   131,   123,   nil,
   nil,    92,    71,   735,   189,   786,   168,   nil,   169,   197,
   200,   nil,   nil ]

racc_action_default = [
   -54,   -54,   -54,   -54,   -54,   -54,   -54,    -3,   -54,   -54,
   -33,   -32,   -54,   -54,   -54,   -54,   -54,   -54,   -30,   -31,
   -34,   -35,   -54,   -54,   -54,   -54,   163,   -54,   -54,   -23,
   -54,   -29,   -54,   -54,   -54,   -54,   -32,   -33,   -54,   -54,
   -54,   -54,   -22,   -54,   -54,   -54,   -54,   -54,   -54,   -54,
   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -36,   -44,   -54,
   -54,   -54,    -2,   -10,   -54,   -54,   -54,   -54,   -54,   -24,
   -25,   -33,   -54,   -54,   -54,   -54,   -54,   -54,   -37,   -38,
   -39,   -40,   -54,   -41,   -42,   -43,   -45,   -46,   -47,   -48,
   -49,   -50,   -51,   -53,   -54,   -54,   -54,    -1,   -28,   -54,
   -12,   -20,   -54,   -54,   -13,   -54,   -54,   -54,   -54,   -54,
   -52,   -54,   -54,   -54,   -54,   -54,   -11,   -21,   -26,   -27,
   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,
   -54,    -8,   -14,   -54,   -16,   -54,   -54,   -19,   -54,   -54,
    -9,    -5,   -54,   -54,   -54,   -54,    -4,   -54,   -54,   -15,
   -17,   -54,   -54,   -54,   -54,   -54,   -54,   -18,   -54,   -54,
   -54,    -7,    -6 ]

racc_goto_table = [
     8,    96,     1,    27,    30,    35,    38,    94,     2,    68,
   nil,   nil,   nil,   nil,   nil,    57,    58,    59,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    66,    69,    72,    70,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    78,    79,    80,    81,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
   nil,   nil,   nil,   128,   nil,   nil,   nil,   nil,    99,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   105,   106,   nil,   nil,   109,   110,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   118,   nil,   119,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   133,   nil,
   135,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   153,   151,   nil,   nil,   155 ]

racc_goto_check = [
     3,     6,     1,     3,     7,     5,     5,     4,     2,     8,
   nil,   nil,   nil,   nil,   nil,     5,     5,     5,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     5,     5,     5,     7,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,     5,     5,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,     5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,     3,   nil,   nil,     3,     5,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,     7,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     5,     3,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,     2,     8,    -3,   -53,    -7,   -59,    -5,   -24 ]

racc_goto_default = [
   nil,   nil,     7,    29,   nil,    17,     9,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 46, :_reduce_none,
  4, 46, :_reduce_2,
  2, 47, :_reduce_none,
  8, 47, :_reduce_none,
  7, 47, :_reduce_none,
  13, 47, :_reduce_none,
  12, 47, :_reduce_none,
  3, 49, :_reduce_none,
  4, 49, :_reduce_none,
  3, 48, :_reduce_10,
  5, 48, :_reduce_11,
  4, 48, :_reduce_12,
  4, 48, :_reduce_none,
  6, 48, :_reduce_14,
  8, 48, :_reduce_15,
  6, 48, :_reduce_16,
  8, 48, :_reduce_none,
  10, 48, :_reduce_none,
  6, 48, :_reduce_none,
  4, 48, :_reduce_none,
  5, 48, :_reduce_none,
  2, 48, :_reduce_none,
  2, 48, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  3, 53, :_reduce_none,
  3, 53, :_reduce_none,
  3, 52, :_reduce_28,
  1, 52, :_reduce_29,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  1, 50, :_reduce_32,
  1, 50, :_reduce_33,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  2, 50, :_reduce_none,
  3, 50, :_reduce_37,
  3, 50, :_reduce_38,
  3, 50, :_reduce_39,
  3, 50, :_reduce_40,
  3, 50, :_reduce_41,
  3, 50, :_reduce_42,
  3, 50, :_reduce_43,
  2, 50, :_reduce_44,
  3, 50, :_reduce_45,
  3, 50, :_reduce_46,
  3, 50, :_reduce_47,
  3, 50, :_reduce_48,
  3, 50, :_reduce_49,
  3, 50, :_reduce_50,
  3, 50, :_reduce_51,
  4, 50, :_reduce_52,
  3, 50, :_reduce_none ]

racc_reduce_n = 54

racc_shift_n = 163

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  TkAbreParentesis => 4,
  TkCierraParentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  TkComa => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  Pr_Number => 23,
  Pr_Boolean => 24,
  Program => 25,
  TkWith => 26,
  Cond_Do => 27,
  End => 28,
  TkTimes => 29,
  Cond_If => 30,
  Cond_Then => 31,
  Cond_Else => 32,
  Cond_While => 33,
  TkFor => 34,
  TkFrom => 35,
  TkTo => 36,
  TkRepeat => 37,
  TkBegin => 38,
  TkFunc => 39,
  TkFunc => 40,
  TkFalse => 41,
  ID => 42,
  Digit => 43,
  "return" => 44 }

racc_nt_base = 45

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Arg",
  "Exp",
  "TipoVar",
  "Id",
  "Attr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'retina_parser.y', 74)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'retina_parser.y', 88)
  def _reduce_10(val, _values, result)
     result = Tipo.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_11(val, _values, result)
     result = Tipo.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_12(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 93)
  def _reduce_15(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_16(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'retina_parser.y', 110)
  def _reduce_28(val, _values, result)
     result = Identificador.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_29(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_32(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_33(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_37(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_38(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_39(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_40(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_41(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_42(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_43(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_44(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_45(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_46(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_47(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_48(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_49(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_50(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_51(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_52(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 53 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
