#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Error de sintaxis en: #{@token}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 164)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    81,    94,    26,   111,   124,   141,    24,    26,     6,     3,
    35,    24,    36,    25,   -25,   142,   129,   100,    25,   -27,
    19,    20,   -25,     4,     4,   101,   108,   -27,    19,    20,
    65,    66,    74,    26,   109,   110,   123,    24,    19,    20,
    22,    23,    18,    21,    25,    22,    23,    18,    21,    19,
    20,    19,    20,    19,    20,    26,    14,   121,   117,    24,
    12,   112,   118,    13,    15,   105,    25,    99,    16,    19,
    20,    22,    23,    18,    21,    19,    20,    26,    14,    66,
   126,    24,    12,   127,    18,    13,    15,    96,    25,    76,
    16,   114,    75,    22,    23,    18,    21,   131,   132,    26,
   133,   134,   135,    24,    51,   136,    52,    53,    54,    57,
    25,    55,    56,    18,   138,    22,    23,    18,    21,    19,
    20,    26,    14,   139,    18,    24,    12,    63,   143,    13,
    15,   144,    25,   145,    16,   146,    61,    22,    23,    18,
    21,    19,    20,    26,    14,   148,   149,    24,    12,    42,
    41,    13,    15,   152,    25,    18,    16,     4,   155,    22,
    23,    18,    21,    19,    20,    26,    14,    28,   120,    24,
    12,    18,   158,    13,    15,     5,    25,   160,    16,   161,
   162,    22,    23,    18,    21,    19,    20,    26,    14,   163,
    30,    24,    12,   nil,   nil,    13,    15,   nil,    25,   nil,
    16,   nil,   nil,    22,    23,    18,    21,    19,    20,    26,
    14,   nil,   122,    24,    12,   nil,   nil,    13,    15,    26,
    25,   nil,    16,    24,   nil,    22,    23,    18,    21,    26,
    25,   nil,   nil,    24,    26,   nil,   nil,   nil,    24,   nil,
    25,   nil,   nil,   nil,   nil,    25,   nil,    22,    23,    18,
    21,    26,   nil,   nil,   nil,    24,   nil,    22,    23,    18,
    21,   nil,    25,   nil,   nil,   nil,   nil,    22,    23,    18,
    21,   nil,    22,    23,    18,    21,    26,   nil,    51,   nil,
    24,    53,    54,    57,   nil,    55,    56,    25,   nil,    22,
    23,    18,    21,   nil,   nil,   nil,    19,    20,    26,    14,
   nil,   nil,    24,    12,   nil,   nil,    13,    15,   nil,    25,
   nil,    16,   nil,   nil,    22,    23,    18,    21,    19,    20,
    26,    14,   nil,   151,    24,    12,   nil,   nil,    13,    15,
   nil,    25,   nil,    16,   nil,   nil,    22,    23,    18,    21,
    19,    20,    26,    14,   nil,   nil,    24,    12,   nil,   nil,
    13,    15,    26,    25,   nil,    16,    24,   nil,    22,    23,
    18,    21,    26,    25,   nil,   nil,    24,    51,   nil,    52,
    53,    54,    57,    25,    55,    56,   nil,   nil,   nil,   nil,
    22,    23,    18,    21,    26,   nil,   nil,   nil,    24,   nil,
    22,    23,    18,    21,   nil,    25,   nil,   nil,   nil,   nil,
    22,    23,    18,    21,    19,    20,    26,    14,   nil,   nil,
    24,    12,   nil,   nil,    13,    15,   nil,    25,   nil,    16,
   nil,   nil,    22,    23,    18,    21,    19,    20,    26,    14,
   nil,   159,    24,    12,   nil,   nil,    13,    15,   nil,    25,
   nil,    16,   nil,   nil,    22,    23,    18,    21,    19,    20,
    26,    14,   nil,   nil,    24,    12,   nil,   nil,    13,    15,
   nil,    25,   nil,    16,   nil,   nil,    22,    23,    18,    21,
    19,    20,    26,    14,   nil,   nil,    24,    12,   nil,   nil,
    13,    15,   nil,    25,   nil,    16,   nil,   nil,    22,    23,
    18,    21,    19,    20,    26,    14,   nil,   140,    24,    12,
   nil,   nil,    13,    15,   nil,    25,   nil,    16,   nil,   nil,
    22,    23,    18,    21,    19,    20,    26,    14,   nil,   nil,
    24,    12,   nil,   nil,    13,    15,    26,    25,   nil,    16,
    24,   nil,    22,    23,    18,    21,   nil,    25,    26,    68,
   nil,   nil,    24,   nil,   nil,   nil,   nil,    26,   nil,    25,
   nil,    24,   nil,   nil,    22,    23,    18,    21,    25,    26,
   nil,   nil,   nil,    24,    22,    23,    18,    21,   nil,    26,
    25,   nil,   nil,    24,   nil,   nil,    22,    23,    18,    21,
    25,   nil,   nil,   nil,   nil,    22,    23,    18,    21,   nil,
   nil,    26,   nil,   nil,   nil,    24,   nil,    22,    23,    18,
    21,   nil,    25,   nil,   nil,   nil,   nil,    22,    23,    18,
    21,    19,    20,    26,    14,   nil,   nil,    24,    12,   nil,
   nil,    13,    15,    26,    25,   nil,    16,    24,   nil,    22,
    23,    18,    21,    26,    25,   nil,   nil,    24,    26,   nil,
   nil,   nil,    24,   nil,    25,   nil,   nil,   nil,   nil,    25,
   nil,    22,    23,    18,    21,    26,   nil,   nil,   nil,    24,
   nil,    22,    23,    18,    21,   nil,    25,   nil,   nil,   nil,
   nil,    22,    23,    18,    21,   nil,    22,    23,    18,    21,
    26,   nil,   nil,   nil,    24,   nil,    26,   nil,   nil,   nil,
    24,    25,   nil,    22,    23,    18,    21,    25,    26,   nil,
    19,    20,    24,    14,   nil,   119,   nil,    12,   nil,    25,
    13,    15,    26,   nil,   nil,    16,    24,   nil,    22,    23,
    18,    21,   nil,    25,    22,    23,    18,    21,   nil,    26,
   -55,   -55,   -55,    24,   -55,   -55,    22,    23,    18,    21,
    25,    51,   nil,    52,    53,    54,    57,   nil,    55,    56,
    22,    23,    18,    21,    26,    53,    54,    57,    24,    55,
    56,   nil,   nil,   nil,   nil,    25,   nil,    22,    23,    18,
    21,   nil,   nil,   nil,    19,    20,   nil,    14,   nil,    62,
   nil,    12,   nil,   nil,    13,    15,   -55,   -55,   -55,    16,
   -55,   -55,    22,    23,    18,    21,    49,    50,    45,    48,
    44,    46,    47,   nil,    51,   nil,    52,    53,    54,    57,
   nil,    55,    56,    49,    50,    45,    48,    44,    46,    47,
   nil,    51,    72,    52,    53,    54,    57,   nil,    55,    56,
   nil,   nil,   nil,   113,   nil,    73,    49,    50,    45,    48,
    44,    46,    47,   nil,    51,   nil,    52,    53,    54,    57,
    43,    55,    56,    49,    50,    45,    48,    44,    46,    47,
   nil,    51,   nil,    52,    53,    54,    57,    98,    55,    56,
    49,    50,    45,    48,    44,    46,    47,   nil,    51,   nil,
    52,    53,    54,    57,   157,    55,    56,    49,    50,    45,
    48,    44,    46,    47,   nil,    51,   nil,    52,    53,    54,
    57,   154,    55,    56,    49,    50,    45,    48,    44,    46,
    47,   nil,    51,   nil,    52,    53,    54,    57,   nil,    55,
    56,    92,    49,    50,    45,    48,    44,    46,    47,   nil,
    51,   nil,    52,    53,    54,    57,   nil,    55,    56,    49,
    50,    45,    48,    44,    46,    47,   nil,    51,   nil,    52,
    53,    54,    57,   nil,    55,    56,    49,    50,    45,    48,
    44,    46,    47,   nil,    51,   nil,    52,    53,    54,    57,
   nil,    55,    56,    49,    50,    45,    48,    44,    46,    47,
   nil,    51,   nil,    52,    53,    54,    57,   nil,    55,    56,
    49,    50,   nil,    48,   nil,    46,    47,   nil,    51,   nil,
    52,    53,    54,    57,   nil,    55,    56,    49,    50,    45,
    48,    44,    46,    47,   nil,    51,   nil,    52,    53,    54,
    57,   nil,    55,    56,    49,    50,   nil,    48,   nil,    46,
    47,   nil,    51,   nil,    52,    53,    54,    57,   nil,    55,
    56,    51,   nil,    52,    53,    54,    57,   nil,    55,    56,
    51,   nil,    52,    53,    54,    57,   nil,    55,    56,   -55,
   -55,   -55,   nil,   -55,   -55,   -55,   -55,   -55,   nil,   -55,
   -55,   -55,   -55,   -55,   nil,   -55,   -55 ]

racc_action_check = [
    47,    61,    47,    94,   108,   133,    47,    53,     2,     0,
    11,    53,    11,    47,    71,   133,   117,    69,    53,   116,
    61,    61,    71,     2,     0,    69,    93,   116,    40,    40,
    34,    34,    40,   102,    93,    94,   108,   102,    33,    33,
    47,    47,    47,    47,   102,    53,    53,    53,    53,   109,
   109,     9,     9,   102,   102,     3,   102,   105,   102,     3,
   102,    95,   102,   102,   102,    75,     3,    68,   102,    14,
    14,   102,   102,   102,   102,     3,     3,   101,     3,    64,
   110,   101,     3,   111,   112,     3,     3,    62,   101,    42,
     3,   100,    41,     3,     3,     3,     3,   119,   120,   152,
   121,   122,   123,   152,    79,   124,    79,    79,    79,    79,
   152,    79,    79,   125,   126,   101,   101,   101,   101,   152,
   152,     6,   152,   127,    32,     6,   152,    30,   135,   152,
   152,   136,     6,   139,   152,   140,    27,   152,   152,   152,
   152,     6,     6,   104,     6,   142,   144,   104,     6,    16,
    15,     6,     6,   148,   104,    10,     6,     7,   151,     6,
     6,     6,     6,   104,   104,     8,   104,     5,   104,     8,
   104,     4,   154,   104,   104,     1,     8,   157,   104,   158,
   159,   104,   104,   104,   104,     8,     8,   106,     8,   160,
     8,   106,     8,   nil,   nil,     8,     8,   nil,   106,   nil,
     8,   nil,   nil,     8,     8,     8,     8,   106,   106,   149,
   106,   nil,   106,   149,   106,   nil,   nil,   106,   106,    81,
   149,   nil,   106,    81,   nil,   106,   106,   106,   106,    12,
    81,   nil,   nil,    12,    13,   nil,   nil,   nil,    13,   nil,
    12,   nil,   nil,   nil,   nil,    13,   nil,   149,   149,   149,
   149,   145,   nil,   nil,   nil,   145,   nil,    81,    81,    81,
    81,   nil,   145,   nil,   nil,   nil,   nil,    12,    12,    12,
    12,   nil,    13,    13,    13,    13,    76,   nil,    86,   nil,
    76,    86,    86,    86,   nil,    86,    86,    76,   nil,   145,
   145,   145,   145,   nil,   nil,   nil,    76,    76,   147,    76,
   nil,   nil,   147,    76,   nil,   nil,    76,    76,   nil,   147,
   nil,    76,   nil,   nil,    76,    76,    76,    76,   147,   147,
    74,   147,   nil,   147,    74,   147,   nil,   nil,   147,   147,
   nil,    74,   nil,   147,   nil,   nil,   147,   147,   147,   147,
    74,    74,    24,    74,   nil,   nil,    24,    74,   nil,   nil,
    74,    74,    25,    24,   nil,    74,    25,   nil,    74,    74,
    74,    74,    26,    25,   nil,   nil,    26,    80,   nil,    80,
    80,    80,    80,    26,    80,    80,   nil,   nil,   nil,   nil,
    24,    24,    24,    24,   141,   nil,   nil,   nil,   141,   nil,
    25,    25,    25,    25,   nil,   141,   nil,   nil,   nil,   nil,
    26,    26,    26,    26,   141,   141,   156,   141,   nil,   nil,
   156,   141,   nil,   nil,   141,   141,   nil,   156,   nil,   141,
   nil,   nil,   141,   141,   141,   141,   156,   156,    73,   156,
   nil,   156,    73,   156,   nil,   nil,   156,   156,   nil,    73,
   nil,   156,   nil,   nil,   156,   156,   156,   156,    73,    73,
    31,    73,   nil,   nil,    31,    73,   nil,   nil,    73,    73,
   nil,    31,   nil,    73,   nil,   nil,    73,    73,    73,    73,
    31,    31,   130,    31,   nil,   nil,   130,    31,   nil,   nil,
    31,    31,   nil,   130,   nil,    31,   nil,   nil,    31,    31,
    31,    31,   130,   130,    72,   130,   nil,   130,    72,   130,
   nil,   nil,   130,   130,   nil,    72,   nil,   130,   nil,   nil,
   130,   130,   130,   130,    72,    72,    65,    72,   nil,   nil,
    65,    72,   nil,   nil,    72,    72,    35,    65,   nil,    72,
    35,   nil,    72,    72,    72,    72,   nil,    35,    36,    36,
   nil,   nil,    36,   nil,   nil,   nil,   nil,    57,   nil,    36,
   nil,    57,   nil,   nil,    65,    65,    65,    65,    57,    56,
   nil,   nil,   nil,    56,    35,    35,    35,    35,   nil,    55,
    56,   nil,   nil,    55,   nil,   nil,    36,    36,    36,    36,
    55,   nil,   nil,   nil,   nil,    57,    57,    57,    57,   nil,
   nil,   118,   nil,   nil,   nil,   118,   nil,    56,    56,    56,
    56,   nil,   118,   nil,   nil,   nil,   nil,    55,    55,    55,
    55,   118,   118,    54,   118,   nil,   nil,    54,   118,   nil,
   nil,   118,   118,    44,    54,   nil,   118,    44,   nil,   118,
   118,   118,   118,    45,    44,   nil,   nil,    45,    46,   nil,
   nil,   nil,    46,   nil,    45,   nil,   nil,   nil,   nil,    46,
   nil,    54,    54,    54,    54,    48,   nil,   nil,   nil,    48,
   nil,    44,    44,    44,    44,   nil,    48,   nil,   nil,   nil,
   nil,    45,    45,    45,    45,   nil,    46,    46,    46,    46,
   103,   nil,   nil,   nil,   103,   nil,    49,   nil,   nil,   nil,
    49,   103,   nil,    48,    48,    48,    48,    49,    50,   nil,
   103,   103,    50,   103,   nil,   103,   nil,   103,   nil,    50,
   103,   103,    51,   nil,   nil,   103,    51,   nil,   103,   103,
   103,   103,   nil,    51,    49,    49,    49,    49,   nil,    52,
    87,    87,    87,    52,    87,    87,    50,    50,    50,    50,
    52,    82,   nil,    82,    82,    82,    82,   nil,    82,    82,
    51,    51,    51,    51,    29,    85,    85,    85,    29,    85,
    85,   nil,   nil,   nil,   nil,    29,   nil,    52,    52,    52,
    52,   nil,   nil,   nil,    29,    29,   nil,    29,   nil,    29,
   nil,    29,   nil,   nil,    29,    29,    89,    89,    89,    29,
    89,    89,    29,    29,    29,    29,    37,    37,    37,    37,
    37,    37,    37,   nil,    37,   nil,    37,    37,    37,    37,
   nil,    37,    37,    39,    39,    39,    39,    39,    39,    39,
   nil,    39,    37,    39,    39,    39,    39,   nil,    39,    39,
   nil,   nil,   nil,    97,   nil,    39,    97,    97,    97,    97,
    97,    97,    97,   nil,    97,   nil,    97,    97,    97,    97,
    17,    97,    97,    17,    17,    17,    17,    17,    17,    17,
   nil,    17,   nil,    17,    17,    17,    17,    67,    17,    17,
    67,    67,    67,    67,    67,    67,    67,   nil,    67,   nil,
    67,    67,    67,    67,   153,    67,    67,   153,   153,   153,
   153,   153,   153,   153,   nil,   153,   nil,   153,   153,   153,
   153,   150,   153,   153,   150,   150,   150,   150,   150,   150,
   150,   nil,   150,   nil,   150,   150,   150,   150,   nil,   150,
   150,    60,    60,    60,    60,    60,    60,    60,    60,   nil,
    60,   nil,    60,    60,    60,    60,   nil,    60,    60,    70,
    70,    70,    70,    70,    70,    70,   nil,    70,   nil,    70,
    70,    70,    70,   nil,    70,    70,    58,    58,    58,    58,
    58,    58,    58,   nil,    58,   nil,    58,    58,    58,    58,
   nil,    58,    58,   115,   115,   115,   115,   115,   115,   115,
   nil,   115,   nil,   115,   115,   115,   115,   nil,   115,   115,
    77,    77,   nil,    77,   nil,    77,    77,   nil,    77,   nil,
    77,    77,    77,    77,   nil,    77,    77,   107,   107,   107,
   107,   107,   107,   107,   nil,   107,   nil,   107,   107,   107,
   107,   nil,   107,   107,    78,    78,   nil,    78,   nil,    78,
    78,   nil,    78,   nil,    78,    78,    78,    78,   nil,    78,
    78,    83,   nil,    83,    83,    83,    83,   nil,    83,    83,
    84,   nil,    84,    84,    84,    84,   nil,    84,    84,    90,
    90,    90,   nil,    90,    90,    91,    91,    91,   nil,    91,
    91,    88,    88,    88,   nil,    88,    88 ]

racc_action_pointer = [
   -17,   175,   -18,    51,   127,   167,   117,   116,   161,    27,
   111,     8,   225,   230,    45,   106,   104,   847,   nil,   nil,
   nil,   nil,   nil,   nil,   338,   348,   358,   132,   nil,   750,
   124,   446,    80,    14,    28,   522,   534,   790,   nil,   807,
     4,    56,    59,   nil,   619,   629,   634,    -2,   651,   682,
   694,   708,   725,     3,   609,   565,   555,   543,   950,   nil,
   916,    -4,    84,   nil,    76,   512,   nil,   864,    64,    12,
   933,     9,   490,   424,   316,    20,   272,   984,  1018,    90,
   353,   215,   727,  1027,  1036,   738,   264,   713,  1054,   769,
  1042,  1048,   nil,    21,    -5,    48,   nil,   830,   nil,   nil,
    88,    73,    29,   676,   139,    20,   183,  1001,    -4,    25,
    51,    66,    40,   nil,   nil,   967,    14,    13,   587,    94,
    95,    55,    98,    73,    88,    69,   111,    83,   nil,   nil,
   468,   nil,   nil,   -23,   nil,   125,    91,   nil,   nil,    87,
   132,   380,   100,   nil,   100,   247,   nil,   294,   125,   205,
   898,   155,    95,   881,   143,   nil,   402,   148,   176,   177,
   186,   nil,   nil,   nil ]

racc_action_default = [
   -55,   -55,   -55,   -55,   -55,   -55,   -55,    -3,   -55,   -10,
   -55,   -34,   -55,   -55,   -55,   -55,   -55,   -55,   -28,   -31,
   -32,   -33,   -35,   -36,   -55,   -55,   -55,   -55,   164,   -55,
   -55,   -23,   -55,   -30,   -55,   -55,   -55,   -55,   -34,   -55,
   -55,   -55,   -55,   -22,   -55,   -55,   -55,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -37,   -45,
   -55,   -55,   -55,    -2,   -55,   -55,   -29,   -55,   -55,   -55,
   -24,   -34,   -55,   -55,   -55,   -55,   -55,   -38,   -39,   -40,
   -41,   -55,   -42,   -43,   -44,   -46,   -47,   -48,   -49,   -50,
   -51,   -52,   -54,   -55,   -55,   -55,    -1,   -55,   -12,   -20,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -53,   -55,   -55,
   -55,   -55,   -55,   -11,   -21,   -26,   -34,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,    -8,   -13,
   -55,   -15,   -16,   -55,   -19,   -55,   -55,    -9,    -5,   -55,
   -55,   -55,   -55,    -4,   -55,   -55,   -14,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -17,   -55,   -55,   -55,   -55,
   -55,    -7,   -18,    -6 ]

racc_goto_table = [
    11,    27,    93,    11,     1,    11,     2,    34,     8,    69,
   nil,    29,   nil,    33,   nil,   nil,    32,   nil,    40,   nil,
   nil,    32,    37,    39,   nil,   nil,    11,   nil,    11,    64,
   nil,   nil,   nil,    71,    58,    59,    60,    33,   nil,   nil,
    32,   nil,   nil,   nil,    33,    67,    70,    32,   nil,   nil,
   nil,   nil,   nil,   nil,    77,    78,    79,    80,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    95,    11,
    11,    11,   nil,    11,   nil,    97,   nil,   102,   103,   104,
   nil,   106,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   107,   nil,   nil,   nil,   nil,   nil,   nil,   116,    11,
    11,    11,   nil,    11,   nil,   nil,   nil,   nil,   nil,   128,
   nil,   115,   nil,   nil,   nil,    11,   125,   nil,   nil,   nil,
   nil,   nil,   137,   130,   nil,   nil,   nil,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,   nil,
   nil,   nil,   nil,   nil,    11,   nil,   147,   nil,   nil,    11,
   nil,   nil,   nil,    11,   nil,   150,   nil,   156,   nil,   153 ]

racc_goto_check = [
     4,     4,     5,     4,     1,     4,     2,     4,     3,     9,
   nil,     3,   nil,     8,   nil,   nil,     7,   nil,     8,   nil,
   nil,     7,     6,     6,   nil,   nil,     4,   nil,     4,     4,
   nil,   nil,   nil,     4,     6,     6,     6,     8,   nil,   nil,
     7,   nil,   nil,   nil,     8,     6,     6,     7,   nil,   nil,
   nil,   nil,   nil,   nil,     6,     6,     6,     6,     6,     6,
     6,     6,     6,     6,     6,     6,     6,     6,     7,     4,
     4,     4,   nil,     4,   nil,     6,   nil,     3,     3,     3,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,
     4,     4,   nil,     4,   nil,   nil,   nil,   nil,   nil,     4,
   nil,     6,   nil,   nil,   nil,     4,     7,   nil,   nil,   nil,
   nil,   nil,     4,     3,   nil,   nil,   nil,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,   nil,     4,   nil,     3,   nil,   nil,     4,
   nil,   nil,   nil,     4,   nil,     6,   nil,     3,   nil,     6 ]

racc_goto_pointer = [
   nil,     4,     6,     5,    -3,   -59,    10,     7,     4,   -27 ]

racc_goto_default = [
   nil,   nil,     7,    31,    38,   nil,    17,    10,     9,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 48, :_reduce_none,
  4, 48, :_reduce_2,
  2, 49, :_reduce_none,
  8, 49, :_reduce_none,
  7, 49, :_reduce_none,
  13, 49, :_reduce_none,
  12, 49, :_reduce_none,
  3, 52, :_reduce_none,
  4, 52, :_reduce_none,
  1, 50, :_reduce_none,
  5, 50, :_reduce_11,
  4, 50, :_reduce_12,
  6, 50, :_reduce_13,
  8, 50, :_reduce_14,
  6, 50, :_reduce_15,
  6, 50, :_reduce_16,
  10, 50, :_reduce_17,
  12, 50, :_reduce_18,
  6, 50, :_reduce_19,
  4, 50, :_reduce_none,
  5, 50, :_reduce_none,
  2, 50, :_reduce_none,
  2, 50, :_reduce_23,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  3, 56, :_reduce_none,
  3, 56, :_reduce_none,
  1, 51, :_reduce_28,
  3, 55, :_reduce_29,
  2, 55, :_reduce_30,
  1, 54, :_reduce_31,
  1, 54, :_reduce_32,
  1, 53, :_reduce_33,
  1, 53, :_reduce_34,
  1, 53, :_reduce_35,
  1, 53, :_reduce_36,
  2, 53, :_reduce_37,
  3, 53, :_reduce_38,
  3, 53, :_reduce_39,
  3, 53, :_reduce_40,
  3, 53, :_reduce_41,
  3, 53, :_reduce_42,
  3, 53, :_reduce_43,
  3, 53, :_reduce_44,
  2, 53, :_reduce_45,
  3, 53, :_reduce_46,
  3, 53, :_reduce_47,
  3, 53, :_reduce_48,
  3, 53, :_reduce_49,
  3, 53, :_reduce_50,
  3, 53, :_reduce_51,
  3, 53, :_reduce_52,
  4, 53, :_reduce_53,
  3, 53, :_reduce_none ]

racc_reduce_n = 55

racc_shift_n = 164

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  Abre_Parentesis => 4,
  Cierra_Parentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  Signo_Coma => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  :UMENOS => 23,
  Pr_Number => 24,
  Pr_Boolean => 25,
  Program => 26,
  Cond_With => 27,
  Cond_Do => 28,
  End => 29,
  Cond_Times => 30,
  Cond_If => 31,
  Cond_Then => 32,
  Cond_Else => 33,
  Cond_While => 34,
  Cond_For => 35,
  Cond_From => 36,
  Cond_To => 37,
  Cond_By => 38,
  Cond_Repeat => 39,
  TkBegin => 40,
  TkFunc => 41,
  Bool_True => 42,
  Bool_False => 43,
  Idtf => 44,
  Digit => 45,
  "return" => 46 }

racc_nt_base = 47

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "UMENOS",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Id",
  "Arg",
  "Exp",
  "TipoVar",
  "Decl",
  "Attr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_11(val, _values, result)
     result = Declaracion.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_12(val, _values, result)
     result = Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_13(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 93)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_15(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_16(val, _values, result)
     result = With.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_17(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_18(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7],val[11]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_19(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_23(val, _values, result)
     result = Bloque_Cod.new(val[0],val[1]) 
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_28(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_29(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_30(val, _values, result)
     result = Multiple.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_31(val, _values, result)
     result = Number.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_32(val, _values, result)
     result = Boolean.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_33(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_34(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_35(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_36(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_37(val, _values, result)
     result = MenosUnario.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_38(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_39(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_40(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_41(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_42(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_43(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_44(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_45(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_46(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_47(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_48(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_49(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_50(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_51(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_52(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_53(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 54 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
