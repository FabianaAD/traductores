#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Error de sintaxis en: #{@token}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 164)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    81,    94,    26,   111,     3,   140,    24,   132,   124,   -27,
   100,     6,    35,    25,    36,   141,   121,   -27,   101,     4,
   110,    19,    20,   130,    26,   123,     4,   131,    24,    51,
   108,    52,    53,    54,    57,    25,    55,    56,   109,    19,
    20,    22,    23,    18,    21,    19,    20,    26,    14,   -25,
   128,    24,    12,    19,    20,    13,    15,   -25,    25,   133,
    16,    19,    20,    22,    23,    18,    21,   154,    19,    20,
    26,    14,    19,    20,    24,    12,    74,   114,    13,    15,
    18,    25,    18,    16,    19,    20,    22,    23,    18,    21,
   151,    19,    20,    26,    14,   105,   122,    24,    12,    19,
    20,    13,    15,   138,    25,    99,    16,    65,    66,    22,
    23,    18,    21,    66,    19,    20,    26,    14,    96,   160,
    24,    12,    19,    20,    13,    15,   143,    25,   144,    16,
    76,   146,    22,    23,    18,    21,    75,    19,    20,    26,
    14,   148,   149,    24,    12,    18,    63,    13,    15,    61,
    25,   153,    16,    42,    41,    22,    23,    18,    21,   156,
    19,    20,    26,    14,    18,     4,    24,    12,    28,    18,
    13,    15,     5,    25,   162,    16,   163,   164,    22,    23,
    18,    21,    51,   165,    26,    53,    54,    57,    24,    55,
    56,   166,    53,    54,    57,    25,    55,    56,   nil,   nil,
   nil,    22,    23,    18,    21,    19,    20,    26,    14,   nil,
    30,    24,    12,   nil,   nil,    13,    15,   nil,    25,   nil,
    16,   nil,   nil,    22,    23,    18,    21,   nil,    19,    20,
    26,    14,   nil,   nil,    24,    12,   nil,   nil,    13,    15,
   nil,    25,   nil,    16,   nil,   nil,    22,    23,    18,    21,
   nil,    19,    20,    26,    14,   nil,   nil,    24,    12,   nil,
   nil,    13,    15,   nil,    25,   nil,    16,   nil,   nil,    22,
    23,    18,    21,   nil,    19,    20,    26,    14,   nil,   nil,
    24,    12,   nil,   nil,    13,    15,    26,    25,   nil,    16,
    24,   nil,    22,    23,    18,    21,    51,    25,    52,    53,
    54,    57,   nil,    55,    56,   -55,   -55,   -55,    26,   -55,
   -55,   nil,    24,   nil,   nil,    22,    23,    18,    21,    25,
    26,   nil,   nil,   nil,    24,    22,    23,    18,    21,    19,
    20,    25,    14,   nil,    26,   nil,    12,   nil,    24,    13,
    15,   nil,    26,   nil,    16,    25,    24,    22,    23,    18,
    21,   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,    22,
    23,    18,    21,   -55,   -55,   -55,    26,   -55,   -55,   nil,
    24,   nil,   nil,    22,    23,    18,    21,    25,   nil,   nil,
   nil,    22,    23,    18,    21,    26,   nil,    19,    20,    24,
    14,   nil,   nil,   nil,    12,   nil,    25,    13,    15,    26,
   nil,   nil,    16,    24,   nil,    22,    23,    18,    21,    26,
    25,   nil,   nil,    24,    51,   nil,    52,    53,    54,    57,
    25,    55,    56,   nil,    22,    23,    18,    21,   -55,   -55,
   -55,    26,   -55,   -55,   nil,    24,   nil,   nil,    22,    23,
    18,    21,    25,   nil,   nil,   nil,   nil,   nil,    22,    23,
    18,    21,    19,    20,    26,    14,   nil,   152,    24,    12,
   nil,   nil,    13,    15,   nil,    25,   nil,    16,   nil,   nil,
    22,    23,    18,    21,   nil,    19,    20,    26,    14,   nil,
    62,    24,    12,   nil,   nil,    13,    15,   nil,    25,   nil,
    16,   nil,   nil,    22,    23,    18,    21,   nil,    19,    20,
    26,    14,   nil,   137,    24,    12,   nil,   nil,    13,    15,
   nil,    25,   nil,    16,   nil,   nil,    22,    23,    18,    21,
   nil,    19,    20,    26,    14,   nil,   nil,    24,    12,   nil,
   nil,    13,    15,   nil,    25,   nil,    16,   nil,   nil,    22,
    23,    18,    21,   nil,    19,    20,    26,    14,   nil,   nil,
    24,    12,   nil,   nil,    13,    15,   nil,    25,   nil,    16,
   nil,   nil,    22,    23,    18,    21,   nil,    19,    20,    26,
    14,   nil,   nil,    24,    12,   nil,   nil,    13,    15,   nil,
    25,   nil,    16,   nil,   nil,    22,    23,    18,    21,   nil,
    19,    20,   nil,    14,   nil,    26,    68,    12,   nil,    24,
    13,    15,   nil,    26,   nil,    16,    25,    24,    22,    23,
    18,    21,   nil,    51,    25,    52,    53,    54,    57,   nil,
    55,    56,   nil,   nil,   -55,   -55,   -55,    26,   -55,   -55,
   nil,    24,   nil,   nil,    22,    23,    18,    21,    25,   nil,
   nil,   nil,    22,    23,    18,    21,   nil,   nil,    19,    20,
    26,    14,   nil,   139,    24,    12,   nil,   nil,    13,    15,
   nil,    25,   nil,    16,   nil,   nil,    22,    23,    18,    21,
   nil,    19,    20,    26,    14,   nil,   120,    24,    12,   nil,
   nil,    13,    15,   nil,    25,   nil,    16,   nil,   nil,    22,
    23,    18,    21,   nil,    19,    20,    26,    14,   nil,   nil,
    24,    12,   nil,   nil,    13,    15,   nil,    25,   nil,    16,
   nil,   nil,    22,    23,    18,    21,   nil,    19,    20,    26,
    14,   nil,   nil,    24,    12,   nil,   nil,    13,    15,    26,
    25,   nil,    16,    24,   nil,    22,    23,    18,    21,    26,
    25,    49,    50,    24,    48,   nil,    46,    47,   nil,    51,
    25,    52,    53,    54,    57,   nil,    55,    56,    22,    23,
    18,    21,    26,   nil,   nil,   nil,    24,   nil,    22,    23,
    18,    21,   nil,    25,   nil,   nil,   nil,   nil,    22,    23,
    18,    21,   nil,    19,    20,    26,    14,   nil,   nil,    24,
    12,   nil,   nil,    13,    15,    26,    25,   nil,    16,    24,
   nil,    22,    23,    18,    21,    26,    25,   nil,   nil,    24,
    26,   nil,   nil,   nil,    24,   nil,    25,   nil,    26,   nil,
   nil,    25,    24,   nil,    22,    23,    18,    21,    26,    25,
   nil,   nil,    24,   nil,    22,    23,    18,    21,   nil,    25,
   nil,   nil,   nil,   nil,    22,    23,    18,    21,   nil,    22,
    23,    18,    21,   nil,   nil,   nil,   nil,    22,    23,    18,
    21,    26,   nil,   nil,   nil,    24,   nil,    22,    23,    18,
    21,    26,    25,   nil,   nil,    24,    26,   nil,   nil,   nil,
    24,    26,    25,    49,    50,    24,    48,    25,    46,    47,
   nil,    51,    25,    52,    53,    54,    57,   nil,    55,    56,
    22,    23,    18,    21,   -55,   -55,   -55,   nil,   -55,   -55,
    22,    23,    18,    21,   nil,    22,    23,    18,    21,   nil,
    22,    23,    18,    21,    26,   nil,   nil,   nil,    24,    26,
   nil,   nil,   nil,    24,    51,    25,    52,    53,    54,    57,
    25,    55,    56,   nil,   nil,    19,    20,   nil,    14,   nil,
   119,   nil,    12,   nil,   nil,    13,    15,   nil,   nil,   nil,
    16,   nil,   nil,    22,    23,    18,    21,   nil,    22,    23,
    18,    21,    26,   nil,   nil,   nil,    24,   nil,   nil,   nil,
   nil,   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    19,    20,    26,    14,   nil,   117,    24,
    12,   nil,   118,    13,    15,   nil,    25,   nil,    16,   nil,
   nil,    22,    23,    18,    21,   nil,    19,    20,   nil,    14,
   nil,   142,   nil,    12,   nil,   nil,    13,    15,   nil,   nil,
   nil,    16,   nil,   nil,    22,    23,    18,    21,    49,    50,
    45,    48,    44,    46,    47,   nil,    51,   nil,    52,    53,
    54,    57,   nil,    55,    56,   nil,    49,    50,    45,    48,
    44,    46,    47,   nil,    51,    72,    52,    53,    54,    57,
   nil,    55,    56,   nil,   nil,   nil,   nil,    98,   nil,    73,
    49,    50,    45,    48,    44,    46,    47,   nil,    51,   nil,
    52,    53,    54,    57,   161,    55,    56,    49,    50,    45,
    48,    44,    46,    47,   nil,    51,   nil,    52,    53,    54,
    57,   113,    55,    56,    49,    50,    45,    48,    44,    46,
    47,   nil,    51,   nil,    52,    53,    54,    57,    43,    55,
    56,    49,    50,    45,    48,    44,    46,    47,   nil,    51,
   nil,    52,    53,    54,    57,   159,    55,    56,    49,    50,
    45,    48,    44,    46,    47,   nil,    51,   nil,    52,    53,
    54,    57,   nil,    55,    56,    92,    49,    50,    45,    48,
    44,    46,    47,   nil,    51,   nil,    52,    53,    54,    57,
   nil,    55,    56,    49,    50,    45,    48,    44,    46,    47,
   nil,    51,   nil,    52,    53,    54,    57,   nil,    55,    56,
    49,    50,    45,    48,    44,    46,    47,   nil,    51,   nil,
    52,    53,    54,    57,   nil,    55,    56,    49,    50,    45,
    48,    44,    46,    47,   nil,    51,   nil,    52,    53,    54,
    57,   nil,    55,    56,    49,    50,    45,    48,    44,    46,
    47,   nil,    51,   nil,    52,    53,    54,    57,   nil,    55,
    56 ]

racc_action_check = [
    47,    61,    47,    94,     0,   132,    47,   121,   108,   116,
    69,     2,    11,    47,    11,   132,   105,   116,    69,     0,
    94,    61,    61,   119,   150,   108,     2,   120,   150,    82,
    93,    82,    82,    82,    82,   150,    82,    82,    93,    33,
    33,    47,    47,    47,    47,   150,   150,   145,   150,    71,
   117,   145,   150,    14,    14,   150,   150,    71,   145,   122,
   150,   109,   109,   150,   150,   150,   150,   150,   145,   145,
   106,   145,    40,    40,   106,   145,    40,   100,   145,   145,
    95,   106,   125,   145,     9,     9,   145,   145,   145,   145,
   145,   106,   106,   157,   106,    75,   106,   157,   106,   111,
   111,   106,   106,   127,   157,    68,   106,    34,    34,   106,
   106,   106,   106,    64,   157,   157,    74,   157,    62,   157,
    74,   157,   124,   124,   157,   157,   135,    74,   137,   157,
    42,   139,   157,   157,   157,   157,    41,    74,    74,     6,
    74,   141,   142,     6,    74,    32,    30,    74,    74,    27,
     6,   148,    74,    16,    15,    74,    74,    74,    74,   152,
     6,     6,   154,     6,    10,     7,   154,     6,     5,     4,
     6,     6,     1,   154,   159,     6,   160,   161,     6,     6,
     6,     6,    86,   162,     8,    86,    86,    86,     8,    86,
    86,   164,    85,    85,    85,     8,    85,    85,   nil,   nil,
   nil,   154,   154,   154,   154,     8,     8,   110,     8,   nil,
     8,   110,     8,   nil,   nil,     8,     8,   nil,   110,   nil,
     8,   nil,   nil,     8,     8,     8,     8,   nil,   110,   110,
   153,   110,   nil,   nil,   153,   110,   nil,   nil,   110,   110,
   nil,   153,   nil,   110,   nil,   nil,   110,   110,   110,   110,
   nil,   153,   153,    73,   153,   nil,   nil,    73,   153,   nil,
   nil,   153,   153,   nil,    73,   nil,   153,   nil,   nil,   153,
   153,   153,   153,   nil,    73,    73,    12,    73,   nil,   nil,
    12,    73,   nil,   nil,    73,    73,    13,    12,   nil,    73,
    13,   nil,    73,    73,    73,    73,    83,    13,    83,    83,
    83,    83,   nil,    83,    83,    91,    91,    91,    72,    91,
    91,   nil,    72,   nil,   nil,    12,    12,    12,    12,    72,
   151,   nil,   nil,   nil,   151,    13,    13,    13,    13,    72,
    72,   151,    72,   nil,    81,   nil,    72,   nil,    81,    72,
    72,   nil,    24,   nil,    72,    81,    24,    72,    72,    72,
    72,   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,   151,
   151,   151,   151,    90,    90,    90,   123,    90,    90,   nil,
   123,   nil,   nil,    81,    81,    81,    81,   123,   nil,   nil,
   nil,    24,    24,    24,    24,    25,   nil,   123,   123,    25,
   123,   nil,   nil,   nil,   123,   nil,    25,   123,   123,    26,
   nil,   nil,   123,    26,   nil,   123,   123,   123,   123,    35,
    26,   nil,   nil,    35,    84,   nil,    84,    84,    84,    84,
    35,    84,    84,   nil,    25,    25,    25,    25,    89,    89,
    89,   147,    89,    89,   nil,   147,   nil,   nil,    26,    26,
    26,    26,   147,   nil,   nil,   nil,   nil,   nil,    35,    35,
    35,    35,   147,   147,    29,   147,   nil,   147,    29,   147,
   nil,   nil,   147,   147,   nil,    29,   nil,   147,   nil,   nil,
   147,   147,   147,   147,   nil,    29,    29,   126,    29,   nil,
    29,   126,    29,   nil,   nil,    29,    29,   nil,   126,   nil,
    29,   nil,   nil,    29,    29,    29,    29,   nil,   126,   126,
    31,   126,   nil,   126,    31,   126,   nil,   nil,   126,   126,
   nil,    31,   nil,   126,   nil,   nil,   126,   126,   126,   126,
   nil,    31,    31,   143,    31,   nil,   nil,   143,    31,   nil,
   nil,    31,    31,   nil,   143,   nil,    31,   nil,   nil,    31,
    31,    31,    31,   nil,   143,   143,     3,   143,   nil,   nil,
     3,   143,   nil,   nil,   143,   143,   nil,     3,   nil,   143,
   nil,   nil,   143,   143,   143,   143,   nil,     3,     3,   118,
     3,   nil,   nil,   118,     3,   nil,   nil,     3,     3,   nil,
   118,   nil,     3,   nil,   nil,     3,     3,     3,     3,   nil,
   118,   118,   nil,   118,   nil,    36,    36,   118,   nil,    36,
   118,   118,   nil,   101,   nil,   118,    36,   101,   118,   118,
   118,   118,   nil,    79,   101,    79,    79,    79,    79,   nil,
    79,    79,   nil,   nil,    87,    87,    87,   129,    87,    87,
   nil,   129,   nil,   nil,    36,    36,    36,    36,   129,   nil,
   nil,   nil,   101,   101,   101,   101,   nil,   nil,   129,   129,
   104,   129,   nil,   129,   104,   129,   nil,   nil,   129,   129,
   nil,   104,   nil,   129,   nil,   nil,   129,   129,   129,   129,
   nil,   104,   104,   140,   104,   nil,   104,   140,   104,   nil,
   nil,   104,   104,   nil,   140,   nil,   104,   nil,   nil,   104,
   104,   104,   104,   nil,   140,   140,   138,   140,   nil,   nil,
   138,   140,   nil,   nil,   140,   140,   nil,   138,   nil,   140,
   nil,   nil,   140,   140,   140,   140,   nil,   138,   138,    44,
   138,   nil,   nil,    44,   138,   nil,   nil,   138,   138,    45,
    44,   nil,   138,    45,   nil,   138,   138,   138,   138,    46,
    45,    77,    77,    46,    77,   nil,    77,    77,   nil,    77,
    46,    77,    77,    77,    77,   nil,    77,    77,    44,    44,
    44,    44,    76,   nil,   nil,   nil,    76,   nil,    45,    45,
    45,    45,   nil,    76,   nil,   nil,   nil,   nil,    46,    46,
    46,    46,   nil,    76,    76,    48,    76,   nil,   nil,    48,
    76,   nil,   nil,    76,    76,    49,    48,   nil,    76,    49,
   nil,    76,    76,    76,    76,    50,    49,   nil,   nil,    50,
    51,   nil,   nil,   nil,    51,   nil,    50,   nil,    52,   nil,
   nil,    51,    52,   nil,    48,    48,    48,    48,    53,    52,
   nil,   nil,    53,   nil,    49,    49,    49,    49,   nil,    53,
   nil,   nil,   nil,   nil,    50,    50,    50,    50,   nil,    51,
    51,    51,    51,   nil,   nil,   nil,   nil,    52,    52,    52,
    52,    54,   nil,   nil,   nil,    54,   nil,    53,    53,    53,
    53,    55,    54,   nil,   nil,    55,    56,   nil,   nil,   nil,
    56,    57,    55,    78,    78,    57,    78,    56,    78,    78,
   nil,    78,    57,    78,    78,    78,    78,   nil,    78,    78,
    54,    54,    54,    54,    88,    88,    88,   nil,    88,    88,
    55,    55,    55,    55,   nil,    56,    56,    56,    56,   nil,
    57,    57,    57,    57,   103,   nil,   nil,   nil,   103,    65,
   nil,   nil,   nil,    65,    80,   103,    80,    80,    80,    80,
    65,    80,    80,   nil,   nil,   103,   103,   nil,   103,   nil,
   103,   nil,   103,   nil,   nil,   103,   103,   nil,   nil,   nil,
   103,   nil,   nil,   103,   103,   103,   103,   nil,    65,    65,
    65,    65,   102,   nil,   nil,   nil,   102,   nil,   nil,   nil,
   nil,   nil,   nil,   102,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   102,   102,   134,   102,   nil,   102,   134,
   102,   nil,   102,   102,   102,   nil,   134,   nil,   102,   nil,
   nil,   102,   102,   102,   102,   nil,   134,   134,   nil,   134,
   nil,   134,   nil,   134,   nil,   nil,   134,   134,   nil,   nil,
   nil,   134,   nil,   nil,   134,   134,   134,   134,    37,    37,
    37,    37,    37,    37,    37,   nil,    37,   nil,    37,    37,
    37,    37,   nil,    37,    37,   nil,    39,    39,    39,    39,
    39,    39,    39,   nil,    39,    37,    39,    39,    39,    39,
   nil,    39,    39,   nil,   nil,   nil,   nil,    67,   nil,    39,
    67,    67,    67,    67,    67,    67,    67,   nil,    67,   nil,
    67,    67,    67,    67,   158,    67,    67,   158,   158,   158,
   158,   158,   158,   158,   nil,   158,   nil,   158,   158,   158,
   158,    97,   158,   158,    97,    97,    97,    97,    97,    97,
    97,   nil,    97,   nil,    97,    97,    97,    97,    17,    97,
    97,    17,    17,    17,    17,    17,    17,    17,   nil,    17,
   nil,    17,    17,    17,    17,   155,    17,    17,   155,   155,
   155,   155,   155,   155,   155,   nil,   155,   nil,   155,   155,
   155,   155,   nil,   155,   155,    60,    60,    60,    60,    60,
    60,    60,    60,   nil,    60,   nil,    60,    60,    60,    60,
   nil,    60,    60,   115,   115,   115,   115,   115,   115,   115,
   nil,   115,   nil,   115,   115,   115,   115,   nil,   115,   115,
   107,   107,   107,   107,   107,   107,   107,   nil,   107,   nil,
   107,   107,   107,   107,   nil,   107,   107,    70,    70,    70,
    70,    70,    70,    70,   nil,    70,   nil,    70,    70,    70,
    70,   nil,    70,    70,    58,    58,    58,    58,    58,    58,
    58,   nil,    58,   nil,    58,    58,    58,    58,   nil,    58,
    58 ]

racc_action_pointer = [
   -23,   172,   -16,   542,   124,   168,   135,   123,   180,    59,
   119,    10,   272,   282,    28,   109,   107,  1125,   nil,   nil,
   nil,   nil,   nil,   nil,   338,   381,   395,   145,   nil,   450,
   143,   496,   100,    14,   105,   405,   591,  1032,   nil,  1050,
    47,    99,    99,   nil,   715,   725,   735,    -2,   781,   791,
   801,   806,   814,   824,   857,   867,   872,   877,  1228,   nil,
  1160,    -4,   115,   nil,   110,   925,   nil,  1074,   102,     5,
  1211,    44,   304,   249,   112,    49,   758,   735,   877,   599,
   920,   330,    15,   282,   400,   175,   168,   607,   887,   411,
   346,   288,   nil,    25,   -21,    35,   nil,  1108,   nil,   nil,
    74,   599,   968,   920,   646,   -22,    66,  1194,   -16,    36,
   203,    74,   nil,   nil,   nil,  1177,     4,    47,   565,    20,
    24,   -39,    56,   362,    97,    37,   473,    62,   nil,   623,
   nil,   nil,   -24,   nil,   991,    85,   nil,   125,   692,   128,
   669,    95,   139,   519,   nil,    43,   nil,   427,   122,   nil,
    20,   316,   156,   226,   158,  1142,   nil,    89,  1091,   144,
   173,   147,   180,   nil,   188,   nil,   nil ]

racc_action_default = [
   -55,   -55,   -55,   -55,   -55,   -55,   -55,    -3,   -55,   -10,
   -55,   -34,   -55,   -55,   -55,   -55,   -55,   -55,   -28,   -31,
   -32,   -33,   -35,   -36,   -55,   -55,   -55,   -55,   167,   -55,
   -55,   -23,   -55,   -30,   -55,   -55,   -55,   -55,   -34,   -55,
   -55,   -55,   -55,   -22,   -55,   -55,   -55,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -37,   -45,
   -55,   -55,   -55,    -2,   -55,   -55,   -29,   -55,   -55,   -55,
   -24,   -34,   -55,   -55,   -55,   -55,   -55,   -38,   -39,   -40,
   -41,   -55,   -42,   -43,   -44,   -46,   -47,   -48,   -49,   -50,
   -51,   -52,   -54,   -55,   -55,   -55,    -1,   -55,   -12,   -20,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -53,   -55,   -55,
   -55,   -55,    -8,   -11,   -21,   -26,   -34,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -13,   -55,
   -15,   -16,   -55,   -19,   -55,   -55,    -9,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,    -5,   -55,   -14,   -55,   -55,    -4,
   -55,   -55,   -55,   -55,   -55,   -55,   -17,   -55,   -55,   -55,
   -55,   -55,   -55,   -18,   -55,    -7,    -6 ]

racc_goto_table = [
     8,    27,    93,    29,     1,     2,    32,    34,    69,    38,
    38,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    38,    38,   nil,   nil,   nil,   nil,   nil,    64,
    32,   nil,    38,    71,   nil,    33,   nil,    32,   nil,   nil,
    40,    38,    38,    38,    38,    38,    38,    38,    38,    38,
    38,    38,    38,    38,    38,   nil,   nil,   nil,    95,    33,
   nil,   nil,    38,   nil,   nil,   nil,    33,   nil,   nil,   102,
   103,   104,   nil,   106,   nil,   nil,   nil,   nil,    38,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   112,   nil,   nil,   nil,   nil,   nil,   116,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   125,   126,   127,   nil,
   nil,   nil,   nil,   nil,   nil,   129,   nil,   nil,   nil,   nil,
   134,   135,   136,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    39,   nil,   nil,   nil,   nil,   145,   nil,   147,   nil,   nil,
   150,    58,    59,    60,   nil,   nil,   nil,   nil,    38,   nil,
   157,    38,    67,    70,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    77,    78,    79,    80,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    97,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   107,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   115,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   155,   nil,
   nil,   158 ]

racc_goto_check = [
     3,     4,     5,     3,     1,     2,     6,     4,     9,     4,
     4,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,     4,     4,   nil,   nil,   nil,   nil,   nil,     4,
     6,   nil,     4,     4,   nil,     8,   nil,     6,   nil,   nil,
     8,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,   nil,   nil,   nil,     6,     8,
   nil,   nil,     4,   nil,   nil,   nil,     8,   nil,   nil,     3,
     3,     3,   nil,     3,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     6,     3,     6,   nil,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,
     3,     6,     4,   nil,   nil,   nil,   nil,   nil,   nil,     7,
     7,   nil,   nil,   nil,   nil,     3,   nil,     3,   nil,   nil,
     3,     7,     7,     7,   nil,   nil,   nil,   nil,     4,   nil,
     3,     4,     7,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     7,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     7,     7,     7,     7,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,
   nil,     7 ]

racc_goto_pointer = [
   nil,     4,     5,    -3,    -3,   -59,    -3,   117,    26,   -28 ]

racc_goto_default = [
   nil,   nil,     7,    31,    11,   nil,    10,    17,     9,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 49, :_reduce_1,
  4, 49, :_reduce_2,
  2, 50, :_reduce_3,
  9, 50, :_reduce_4,
  8, 50, :_reduce_5,
  14, 50, :_reduce_6,
  13, 50, :_reduce_7,
  2, 53, :_reduce_8,
  4, 53, :_reduce_9,
  1, 51, :_reduce_none,
  5, 51, :_reduce_11,
  4, 51, :_reduce_12,
  6, 51, :_reduce_13,
  8, 51, :_reduce_14,
  6, 51, :_reduce_15,
  6, 51, :_reduce_16,
  10, 51, :_reduce_17,
  12, 51, :_reduce_18,
  6, 51, :_reduce_19,
  4, 51, :_reduce_none,
  5, 51, :_reduce_none,
  2, 51, :_reduce_none,
  2, 51, :_reduce_23,
  1, 57, :_reduce_none,
  1, 57, :_reduce_none,
  3, 57, :_reduce_none,
  3, 57, :_reduce_none,
  1, 52, :_reduce_28,
  3, 56, :_reduce_29,
  2, 56, :_reduce_30,
  1, 54, :_reduce_31,
  1, 54, :_reduce_32,
  1, 55, :_reduce_33,
  1, 55, :_reduce_34,
  1, 55, :_reduce_35,
  1, 55, :_reduce_36,
  2, 55, :_reduce_37,
  3, 55, :_reduce_38,
  3, 55, :_reduce_39,
  3, 55, :_reduce_40,
  3, 55, :_reduce_41,
  3, 55, :_reduce_42,
  3, 55, :_reduce_43,
  3, 55, :_reduce_44,
  2, 55, :_reduce_45,
  3, 55, :_reduce_46,
  3, 55, :_reduce_47,
  3, 55, :_reduce_48,
  3, 55, :_reduce_49,
  3, 55, :_reduce_50,
  3, 55, :_reduce_51,
  3, 55, :_reduce_52,
  4, 55, :_reduce_53,
  3, 55, :_reduce_none ]

racc_reduce_n = 55

racc_shift_n = 167

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  Abre_Parentesis => 4,
  Cierra_Parentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  Signo_Coma => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  :UMENOS => 23,
  Flecha => 24,
  Pr_Number => 25,
  Pr_Boolean => 26,
  Program => 27,
  Cond_With => 28,
  Cond_Do => 29,
  End => 30,
  Cond_Times => 31,
  Cond_If => 32,
  Cond_Then => 33,
  Cond_Else => 34,
  Cond_While => 35,
  Cond_For => 36,
  Cond_From => 37,
  Cond_To => 38,
  Cond_By => 39,
  Cond_Repeat => 40,
  Pr_Begin => 41,
  Func => 42,
  Bool_True => 43,
  Bool_False => 44,
  Idtf => 45,
  Digit => 46,
  Pr_Return => 47 }

racc_nt_base = 48

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "UMENOS",
  "\"->\"",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Id",
  "Arg",
  "TipoVar",
  "Exp",
  "Decl",
  "Attr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 74)
  def _reduce_1(val, _values, result)
     result = Multiple_Prog.new(val[0],Inicio.new(val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 78)
  def _reduce_3(val, _values, result)
     result = Multiple_Func.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 79)
  def _reduce_4(val, _values, result)
     result = Funcion.new(val[1],val[3],val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 80)
  def _reduce_5(val, _values, result)
     result = Funcion.new(val[1],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 81)
  def _reduce_6(val, _values, result)
     result = Funcion.new(val[1],val[3],val[8],val[6],val[10]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 82)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[1],nil,val[7],val[5],val[9]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_8(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_9(val, _values, result)
     result = Multiple_Arg.new(val[0],Declaracion.new(val[2],val[3]))
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_11(val, _values, result)
     result = Declaracion.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_12(val, _values, result)
     result = Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_13(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 93)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_15(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_16(val, _values, result)
     result = With.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_17(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_18(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7],val[11]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_19(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_23(val, _values, result)
     result = Bloque_Cod.new(val[0],val[1]) 
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_28(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_29(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_30(val, _values, result)
     result = Multiple.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_31(val, _values, result)
     result = Number.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_32(val, _values, result)
     result = Boolean.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_33(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_34(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_35(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_36(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_37(val, _values, result)
     result = MenosUnario.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_38(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_39(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_40(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_41(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_42(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_43(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_44(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_45(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_46(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_47(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_48(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_49(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_50(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_51(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_52(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_53(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 54 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
