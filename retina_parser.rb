#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Error de sintaxis en: #{@token}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 164)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    82,    96,    27,   113,   141,    65,    25,    27,   125,     3,
    93,    25,    70,    26,   142,    27,    98,     6,    26,    25,
   112,    20,    21,   103,     4,   124,    26,   129,    20,    21,
    77,    14,     4,    20,    21,    12,   131,    75,    13,    15,
   132,    23,    24,    16,    19,    22,    23,    24,    18,    19,
    22,   155,    27,    72,    23,    24,    25,    19,    22,    36,
   110,    37,    52,    26,    53,    54,    55,    58,   111,    56,
    57,   102,   133,    20,    21,   134,    14,    76,    27,   103,
    12,    68,    25,    13,    15,    20,    21,    19,    16,    26,
   101,    23,    24,    18,    19,    22,   152,    20,    21,    20,
    21,    27,    14,    20,    21,    25,    12,    20,    21,    13,
    15,   139,    26,   122,    16,    67,    68,    23,    24,    18,
    19,    22,    20,    21,    27,    14,    19,   161,    25,    12,
    20,    21,    13,    15,    72,    26,   144,    16,    20,    21,
    23,    24,    18,    19,    22,    20,    21,    27,    14,   145,
    63,    25,    12,   147,    19,    13,    15,   149,    26,   150,
    16,    43,    42,    23,    24,    18,    19,    22,   107,   154,
    27,    19,    19,   157,    25,    52,   116,    53,    54,    55,
    58,    26,    56,    57,     4,    29,    23,    24,    19,    19,
    22,    20,    21,    27,    14,     5,    31,    25,    12,   163,
   164,    13,    15,   165,    26,   166,    16,   167,   nil,    23,
    24,    18,    19,    22,    20,    21,    27,    14,   nil,   nil,
    25,    12,   nil,   nil,    13,    15,   nil,    26,   nil,    16,
   nil,   nil,    23,    24,    18,    19,    22,   nil,   nil,    27,
   nil,   nil,   nil,    25,    52,   nil,    53,    54,    55,    58,
    26,    56,    57,    27,   nil,    23,    24,    25,    19,    22,
    20,    21,    27,    14,    26,   121,    25,    12,   nil,   nil,
    13,    15,   nil,    26,   nil,    16,   nil,   nil,    23,    24,
    18,    19,    22,   -54,   -54,   -54,    27,   -54,   -54,   nil,
    25,   nil,    23,    24,   nil,    19,    22,    26,   nil,   nil,
   nil,    23,    24,   nil,    19,    22,   nil,    20,    21,    27,
    14,   nil,   153,    25,    12,   nil,   nil,    13,    15,   nil,
    26,   nil,    16,   nil,   nil,    23,    24,    18,    19,    22,
    20,    21,    27,    14,   nil,   120,    25,    12,   nil,   nil,
    13,    15,   nil,    26,   nil,    16,   nil,   nil,    23,    24,
    18,    19,    22,    20,    21,    27,    14,   nil,   nil,    25,
    12,   nil,   nil,    13,    15,   nil,    26,   nil,    16,   nil,
   nil,    23,    24,    18,    19,    22,    20,    21,    27,    14,
   nil,   nil,    25,    12,   nil,   nil,    13,    15,   nil,    26,
   nil,    16,   nil,   nil,    23,    24,    18,    19,    22,    20,
    21,    27,    14,   nil,   nil,    25,    12,   nil,   nil,    13,
    15,    27,    26,   nil,    16,    25,   nil,    23,    24,    18,
    19,    22,    26,    27,   nil,   nil,   nil,    25,    52,   nil,
    53,    54,    55,    58,    26,    56,    57,   nil,   nil,   nil,
    23,    24,   nil,    19,    22,   nil,   nil,   nil,    27,   nil,
    23,    24,    25,    19,    22,   nil,   -54,   -54,   -54,    26,
   -54,   -54,    23,    24,   nil,    19,    22,   nil,   nil,    20,
    21,    27,    14,   nil,   nil,    25,    12,   nil,   nil,    13,
    15,   nil,    26,   nil,    16,   nil,   nil,    23,    24,    18,
    19,    22,    20,    21,    27,    14,   nil,    64,    25,    12,
   nil,   nil,    13,    15,   nil,    26,   nil,    16,   nil,   nil,
    23,    24,    18,    19,    22,    20,    21,    27,    14,   nil,
   143,    25,    12,   nil,   nil,    13,    15,   nil,    26,   nil,
    16,   nil,   nil,    23,    24,    18,    19,    22,    20,    21,
    27,    14,   nil,   nil,    25,    12,   nil,   nil,    13,    15,
   nil,    26,   nil,    16,   nil,   nil,    23,    24,    18,    19,
    22,    52,   nil,    27,    54,    55,    58,    25,    56,    57,
   nil,   -54,   -54,   -54,    26,   -54,   -54,   nil,   nil,    23,
    24,   nil,    19,    22,    20,    21,    27,    14,   nil,   140,
    25,    12,   nil,   nil,    13,    15,   nil,    26,   nil,    16,
   nil,   nil,    23,    24,    18,    19,    22,    20,    21,    27,
    14,   nil,   138,    25,    12,   nil,   nil,    13,    15,   nil,
    26,   nil,    16,   nil,   nil,    23,    24,    18,    19,    22,
    20,    21,    27,    14,   nil,   nil,    25,    12,   nil,   nil,
    13,    15,   nil,    26,   nil,    16,   nil,   nil,    23,    24,
    18,    19,    22,    20,    21,    27,    14,   nil,   nil,    25,
    12,   nil,   nil,    13,    15,   nil,    26,   nil,    16,   nil,
   nil,    23,    24,    18,    19,    22,    20,    21,    27,    14,
   nil,   nil,    25,    12,   nil,   nil,    13,    15,   nil,    26,
   nil,    16,   nil,   nil,    23,    24,    18,    19,    22,    20,
    21,    27,    14,   nil,   nil,    25,    12,   nil,   nil,    13,
    15,   nil,    26,   nil,    16,   nil,   nil,    23,    24,    18,
    19,    22,    20,    21,    27,    14,   nil,   118,    25,    12,
   nil,   119,    13,    15,   nil,    26,   nil,    16,   nil,   nil,
    23,    24,    18,    19,    22,    20,    21,    27,    14,   nil,
   nil,    25,    12,   nil,   nil,    13,    15,   nil,    26,   nil,
    16,   nil,   nil,    23,    24,    18,    19,    22,    20,    21,
    27,    14,   nil,   nil,    25,    12,   nil,   nil,    13,    15,
    27,    26,   nil,    16,    25,   nil,    23,    24,    18,    19,
    22,    26,    27,   nil,   nil,   nil,    25,    52,   nil,    53,
    54,    55,    58,    26,    56,    57,   nil,   nil,   nil,    23,
    24,   nil,    19,    22,   nil,   nil,   nil,    27,   nil,    23,
    24,    25,    19,    22,   nil,    27,   nil,   nil,    26,    25,
   nil,    23,    24,    27,    19,    22,    26,    25,    20,    21,
   nil,    14,   nil,   123,    26,    12,   nil,   nil,    13,    15,
    27,   nil,   nil,    16,    25,   nil,    23,    24,    18,    19,
    22,    26,   nil,   nil,    23,    24,    27,    19,    22,   nil,
    25,   nil,    23,    24,    27,    19,    22,    26,    25,   nil,
    27,   nil,   nil,   nil,    25,    26,   nil,   nil,   nil,    23,
    24,    26,    19,    22,   nil,   nil,    27,   -54,   -54,   -54,
    25,   -54,   -54,   nil,   nil,    23,    24,    26,    19,    22,
   nil,   nil,   nil,    23,    24,   nil,    19,    22,   nil,    23,
    24,    27,    19,    22,   nil,    25,    27,   nil,   nil,   nil,
    25,   nil,    26,   nil,   nil,    23,    24,    26,    19,    22,
    27,   nil,   nil,   nil,    25,    27,   nil,   nil,   nil,    25,
   nil,    26,   nil,    54,    55,    58,    26,    56,    57,   nil,
    23,    24,   nil,    19,    22,    23,    24,   nil,    19,    22,
   -54,   -54,   -54,   nil,   -54,   -54,   nil,   nil,   nil,    23,
    24,   nil,    19,    22,    23,    24,   nil,    19,    22,    50,
    51,    46,    49,    45,    47,    48,   nil,    52,   nil,    53,
    54,    55,    58,   nil,    56,    57,   nil,    50,    51,    46,
    49,    45,    47,    48,   nil,    52,    73,    53,    54,    55,
    58,   nil,    56,    57,   nil,   nil,   nil,   nil,    44,   nil,
    74,    50,    51,    46,    49,    45,    47,    48,   nil,    52,
   nil,    53,    54,    55,    58,   160,    56,    57,    50,    51,
    46,    49,    45,    47,    48,   nil,    52,   nil,    53,    54,
    55,    58,   100,    56,    57,    50,    51,    46,    49,    45,
    47,    48,   nil,    52,   nil,    53,    54,    55,    58,   162,
    56,    57,    50,    51,    46,    49,    45,    47,    48,   nil,
    52,   nil,    53,    54,    55,    58,   115,    56,    57,    50,
    51,    46,    49,    45,    47,    48,   nil,    52,   nil,    53,
    54,    55,    58,   nil,    56,    57,    94,    50,    51,    46,
    49,    45,    47,    48,   nil,    52,   nil,    53,    54,    55,
    58,   nil,    56,    57,    50,    51,   nil,    49,   nil,    47,
    48,   nil,    52,   nil,    53,    54,    55,    58,   nil,    56,
    57,    50,    51,    46,    49,    45,    47,    48,   nil,    52,
   nil,    53,    54,    55,    58,   nil,    56,    57,    50,    51,
    46,    49,    45,    47,    48,   nil,    52,   nil,    53,    54,
    55,    58,   nil,    56,    57,    50,    51,   nil,    49,   nil,
    47,    48,   nil,    52,   nil,    53,    54,    55,    58,   nil,
    56,    57 ]

racc_action_check = [
    48,    63,    48,    96,   133,    31,    48,   151,   110,     0,
    59,   151,    37,    48,   133,    67,    64,     2,   151,    67,
    96,    63,    63,   117,     0,   110,    67,   118,   151,   151,
    43,   151,     2,    41,    41,   151,   120,    41,   151,   151,
   121,    48,    48,   151,    48,    48,   151,   151,   151,   151,
   151,   151,   146,    37,    67,    67,   146,    67,    67,    11,
    95,    11,    85,   146,    85,    85,    85,    85,    95,    85,
    85,    71,   122,   146,   146,   123,   146,    42,    32,    71,
   146,    66,    32,   146,   146,    34,    34,   126,   146,    32,
    70,   146,   146,   146,   146,   146,   146,   111,   111,    32,
    32,   158,    32,    14,    14,   158,    32,     9,     9,    32,
    32,   128,   158,   107,    32,    35,    35,    32,    32,    32,
    32,    32,   158,   158,     6,   158,    33,   158,     6,   158,
   125,   125,   158,   158,   103,     6,   136,   158,   113,   113,
   158,   158,   158,   158,   158,     6,     6,   155,     6,   138,
    28,   155,     6,   140,    18,     6,     6,   142,   155,   143,
     6,    16,    15,     6,     6,     6,     6,     6,    76,   149,
     8,    97,    10,   153,     8,    84,   102,    84,    84,    84,
    84,     8,    84,    84,     7,     5,   155,   155,     4,   155,
   155,     8,     8,   154,     8,     1,     8,   154,     8,   160,
   161,     8,     8,   162,   154,   163,     8,   165,   nil,     8,
     8,     8,     8,     8,   154,   154,   152,   154,   nil,   nil,
   152,   154,   nil,   nil,   154,   154,   nil,   152,   nil,   154,
   nil,   nil,   154,   154,   154,   154,   154,   nil,   nil,   106,
   nil,   nil,   nil,   106,    83,   nil,    83,    83,    83,    83,
   106,    83,    83,    12,   nil,   152,   152,    12,   152,   152,
   106,   106,    13,   106,    12,   106,    13,   106,   nil,   nil,
   106,   106,   nil,    13,   nil,   106,   nil,   nil,   106,   106,
   106,   106,   106,    91,    91,    91,   148,    91,    91,   nil,
   148,   nil,    12,    12,   nil,    12,    12,   148,   nil,   nil,
   nil,    13,    13,   nil,    13,    13,   nil,   148,   148,   105,
   148,   nil,   148,   105,   148,   nil,   nil,   148,   148,   nil,
   105,   nil,   148,   nil,   nil,   148,   148,   148,   148,   148,
   105,   105,   144,   105,   nil,   105,   144,   105,   nil,   nil,
   105,   105,   nil,   144,   nil,   105,   nil,   nil,   105,   105,
   105,   105,   105,   144,   144,    74,   144,   nil,   nil,    74,
   144,   nil,   nil,   144,   144,   nil,    74,   nil,   144,   nil,
   nil,   144,   144,   144,   144,   144,    74,    74,   141,    74,
   nil,   nil,   141,    74,   nil,   nil,    74,    74,   nil,   141,
   nil,    74,   nil,   nil,    74,    74,    74,    74,    74,   141,
   141,    25,   141,   nil,   nil,    25,   141,   nil,   nil,   141,
   141,    26,    25,   nil,   141,    26,   nil,   141,   141,   141,
   141,   141,    26,    27,   nil,   nil,   nil,    27,    80,   nil,
    80,    80,    80,    80,    27,    80,    80,   nil,   nil,   nil,
    25,    25,   nil,    25,    25,   nil,   nil,   nil,   139,   nil,
    26,    26,   139,    26,    26,   nil,    92,    92,    92,   139,
    92,    92,    27,    27,   nil,    27,    27,   nil,   nil,   139,
   139,    30,   139,   nil,   nil,    30,   139,   nil,   nil,   139,
   139,   nil,    30,   nil,   139,   nil,   nil,   139,   139,   139,
   139,   139,    30,    30,   135,    30,   nil,    30,   135,    30,
   nil,   nil,    30,    30,   nil,   135,   nil,    30,   nil,   nil,
    30,    30,    30,    30,    30,   135,   135,     3,   135,   nil,
   135,     3,   135,   nil,   nil,   135,   135,   nil,     3,   nil,
   135,   nil,   nil,   135,   135,   135,   135,   135,     3,     3,
    82,     3,   nil,   nil,    82,     3,   nil,   nil,     3,     3,
   nil,    82,   nil,     3,   nil,   nil,     3,     3,     3,     3,
     3,    87,   nil,   130,    87,    87,    87,   130,    87,    87,
   nil,    89,    89,    89,   130,    89,    89,   nil,   nil,    82,
    82,   nil,    82,    82,   130,   130,   127,   130,   nil,   130,
   127,   130,   nil,   nil,   130,   130,   nil,   127,   nil,   130,
   nil,   nil,   130,   130,   130,   130,   130,   127,   127,   112,
   127,   nil,   127,   112,   127,   nil,   nil,   127,   127,   nil,
   112,   nil,   127,   nil,   nil,   127,   127,   127,   127,   127,
   112,   112,    75,   112,   nil,   nil,    75,   112,   nil,   nil,
   112,   112,   nil,    75,   nil,   112,   nil,   nil,   112,   112,
   112,   112,   112,    75,    75,    73,    75,   nil,   nil,    73,
    75,   nil,   nil,    75,    75,   nil,    73,   nil,    75,   nil,
   nil,    75,    75,    75,    75,    75,    73,    73,    77,    73,
   nil,   nil,    77,    73,   nil,   nil,    73,    73,   nil,    77,
   nil,    73,   nil,   nil,    73,    73,    73,    73,    73,    77,
    77,   104,    77,   nil,   nil,   104,    77,   nil,   nil,    77,
    77,   nil,   104,   nil,    77,   nil,   nil,    77,    77,    77,
    77,    77,   104,   104,   124,   104,   nil,   104,   124,   104,
   nil,   104,   104,   104,   nil,   124,   nil,   104,   nil,   nil,
   104,   104,   104,   104,   104,   124,   124,   119,   124,   nil,
   nil,   119,   124,   nil,   nil,   124,   124,   nil,   119,   nil,
   124,   nil,   nil,   124,   124,   124,   124,   124,   119,   119,
    45,   119,   nil,   nil,    45,   119,   nil,   nil,   119,   119,
    46,    45,   nil,   119,    46,   nil,   119,   119,   119,   119,
   119,    46,    47,   nil,   nil,   nil,    47,    81,   nil,    81,
    81,    81,    81,    47,    81,    81,   nil,   nil,   nil,    45,
    45,   nil,    45,    45,   nil,   nil,   nil,   108,   nil,    46,
    46,   108,    46,    46,   nil,    49,   nil,   nil,   108,    49,
   nil,    47,    47,    50,    47,    47,    49,    50,   108,   108,
   nil,   108,   nil,   108,    50,   108,   nil,   nil,   108,   108,
    51,   nil,   nil,   108,    51,   nil,   108,   108,   108,   108,
   108,    51,   nil,   nil,    49,    49,    52,    49,    49,   nil,
    52,   nil,    50,    50,    53,    50,    50,    52,    53,   nil,
    54,   nil,   nil,   nil,    54,    53,   nil,   nil,   nil,    51,
    51,    54,    51,    51,   nil,   nil,    55,    88,    88,    88,
    55,    88,    88,   nil,   nil,    52,    52,    55,    52,    52,
   nil,   nil,   nil,    53,    53,   nil,    53,    53,   nil,    54,
    54,    56,    54,    54,   nil,    56,    57,   nil,   nil,   nil,
    57,   nil,    56,   nil,   nil,    55,    55,    57,    55,    55,
    58,   nil,   nil,   nil,    58,    36,   nil,   nil,   nil,    36,
   nil,    58,   nil,    86,    86,    86,    36,    86,    86,   nil,
    56,    56,   nil,    56,    56,    57,    57,   nil,    57,    57,
    90,    90,    90,   nil,    90,    90,   nil,   nil,   nil,    58,
    58,   nil,    58,    58,    36,    36,   nil,    36,    36,    38,
    38,    38,    38,    38,    38,    38,   nil,    38,   nil,    38,
    38,    38,    38,   nil,    38,    38,   nil,    40,    40,    40,
    40,    40,    40,    40,   nil,    40,    38,    40,    40,    40,
    40,   nil,    40,    40,   nil,   nil,   nil,   nil,    17,   nil,
    40,    17,    17,    17,    17,    17,    17,    17,   nil,    17,
   nil,    17,    17,    17,    17,   156,    17,    17,   156,   156,
   156,   156,   156,   156,   156,   nil,   156,   nil,   156,   156,
   156,   156,    69,   156,   156,    69,    69,    69,    69,    69,
    69,    69,   nil,    69,   nil,    69,    69,    69,    69,   159,
    69,    69,   159,   159,   159,   159,   159,   159,   159,   nil,
   159,   nil,   159,   159,   159,   159,    99,   159,   159,    99,
    99,    99,    99,    99,    99,    99,   nil,    99,   nil,    99,
    99,    99,    99,   nil,    99,    99,    62,    62,    62,    62,
    62,    62,    62,    62,   nil,    62,   nil,    62,    62,    62,
    62,   nil,    62,    62,    78,    78,   nil,    78,   nil,    78,
    78,   nil,    78,   nil,    78,    78,    78,    78,   nil,    78,
    78,    60,    60,    60,    60,    60,    60,    60,   nil,    60,
   nil,    60,    60,    60,    60,   nil,    60,    60,   109,   109,
   109,   109,   109,   109,   109,   nil,   109,   nil,   109,   109,
   109,   109,   nil,   109,   109,    79,    79,   nil,    79,   nil,
    79,    79,   nil,    79,   nil,    79,    79,    79,    79,   nil,
    79,    79 ]

racc_action_pointer = [
   -18,   195,   -10,   513,   142,   185,   120,   142,   166,    82,
   126,    57,   249,   258,    78,   116,   114,  1025,   108,   nil,
   nil,   nil,   nil,   nil,   nil,   397,   407,   419,   146,   nil,
   467,     2,    74,    80,    60,   113,   941,     7,   983,   nil,
  1001,     8,    40,    -1,   nil,   766,   776,   788,    -2,   821,
   829,   846,   862,   870,   876,   892,   917,   922,   936,     7,
  1145,   nil,  1111,    -4,    13,   nil,    78,    11,   nil,  1059,
    87,    66,   nil,   651,   351,   628,   121,   674,  1128,  1179,
   414,   783,   536,   230,   161,    48,   936,   547,   880,   554,
   953,   266,   439,   nil,   nil,    55,   -21,   125,   nil,  1093,
   nil,   nil,   173,    88,   697,   305,   235,    75,   813,  1162,
   -16,    72,   605,   113,   nil,   nil,   nil,    10,    24,   743,
    33,    37,    25,    72,   720,   105,    41,   582,    70,   nil,
   559,   nil,   nil,   -25,   nil,   490,    95,   nil,   146,   444,
   150,   374,   110,   156,   328,   nil,    48,   nil,   282,   140,
   nil,     3,   212,   170,   189,   143,  1042,   nil,    97,  1076,
   169,   197,   173,   202,   nil,   204,   nil,   nil ]

racc_action_default = [
   -54,   -54,   -54,   -54,   -54,   -54,   -54,    -3,   -54,   -10,
   -54,   -33,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -27,
   -30,   -31,   -32,   -34,   -35,   -54,   -54,   -54,   -54,   168,
   -54,   -54,   -24,   -54,   -29,   -54,   -54,   -54,   -54,   -33,
   -54,   -54,   -54,   -54,   -22,   -54,   -54,   -54,   -54,   -54,
   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,
   -36,   -44,   -54,   -54,   -54,    -2,   -54,   -54,   -28,   -54,
   -54,   -54,   -25,   -54,   -54,   -54,   -54,   -54,   -37,   -38,
   -39,   -40,   -54,   -41,   -42,   -43,   -45,   -46,   -47,   -48,
   -49,   -50,   -51,   -23,   -53,   -54,   -54,   -54,    -1,   -54,
   -12,   -20,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -52,
   -54,   -54,   -54,   -54,    -8,   -11,   -21,   -26,   -54,   -54,
   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -13,
   -54,   -15,   -16,   -54,   -19,   -54,   -54,    -9,   -54,   -54,
   -54,   -54,   -54,   -54,   -54,    -5,   -54,   -14,   -54,   -54,
    -4,   -54,   -54,   -54,   -54,   -54,   -54,   -17,   -54,   -54,
   -54,   -54,   -54,   -54,   -18,   -54,    -7,    -6 ]

racc_goto_table = [
    28,    71,     8,    95,     2,    30,    35,     1,    39,    39,
   nil,   nil,   nil,   nil,    59,   nil,   nil,   nil,   nil,   nil,
   nil,    39,    39,    39,   nil,   nil,   nil,   nil,   nil,    66,
   nil,   nil,    39,    34,   nil,   nil,   nil,   nil,    41,   nil,
   nil,    39,    39,    39,    39,    39,    39,    39,    39,    39,
    39,    39,    39,    39,    39,    33,   nil,   nil,    34,   nil,
    33,   nil,   nil,    39,   nil,    34,   nil,   117,   nil,   nil,
   nil,   nil,   104,   105,   106,   nil,   108,   nil,    39,   nil,
    33,   nil,   nil,   nil,   nil,   nil,   nil,    33,   nil,   nil,
   nil,    38,    40,   114,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    60,    61,    62,   nil,   nil,    97,
   nil,   127,   nil,   nil,   nil,    69,   nil,   nil,   130,   nil,
   nil,   nil,   137,   135,    78,    79,    80,    81,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,   146,   nil,
   148,   nil,   nil,   151,   nil,   nil,    99,   nil,    39,   nil,
   nil,    39,   nil,   158,   nil,   nil,   nil,   126,   nil,   128,
   nil,   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   136,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   156,   nil,   nil,   159 ]

racc_goto_check = [
     4,     9,     3,     5,     2,     3,     4,     1,     4,     4,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,     4,     4,     4,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,     4,     8,   nil,   nil,   nil,   nil,     8,   nil,
   nil,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     6,   nil,   nil,     8,   nil,
     6,   nil,   nil,     4,   nil,     8,   nil,     9,   nil,   nil,
   nil,   nil,     3,     3,     3,   nil,     3,   nil,     4,   nil,
     6,   nil,   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,
   nil,     7,     7,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,     7,     7,   nil,   nil,     6,
   nil,     3,   nil,   nil,   nil,     7,   nil,   nil,     3,   nil,
   nil,   nil,     4,     3,     7,     7,     7,     7,     7,     7,
     7,     7,     7,     7,     7,     7,     7,     7,     3,   nil,
     3,   nil,   nil,     3,   nil,   nil,     7,   nil,     4,   nil,
   nil,     4,   nil,     3,   nil,   nil,   nil,     6,   nil,     6,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     7,   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,     7,     4,    -1,    -4,   -60,    46,    79,    24,   -36 ]

racc_goto_default = [
   nil,   nil,     7,    32,    11,   nil,    10,    17,     9,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 50, :_reduce_1,
  4, 50, :_reduce_2,
  2, 51, :_reduce_3,
  9, 51, :_reduce_4,
  8, 51, :_reduce_5,
  14, 51, :_reduce_6,
  13, 51, :_reduce_7,
  2, 54, :_reduce_8,
  4, 54, :_reduce_9,
  1, 52, :_reduce_none,
  5, 52, :_reduce_11,
  4, 52, :_reduce_12,
  6, 52, :_reduce_13,
  8, 52, :_reduce_14,
  6, 52, :_reduce_15,
  6, 52, :_reduce_16,
  10, 52, :_reduce_17,
  12, 52, :_reduce_18,
  6, 52, :_reduce_19,
  4, 52, :_reduce_20,
  5, 52, :_reduce_21,
  2, 52, :_reduce_none,
  3, 52, :_reduce_23,
  2, 52, :_reduce_24,
  1, 58, :_reduce_25,
  3, 58, :_reduce_26,
  1, 53, :_reduce_27,
  3, 57, :_reduce_28,
  2, 57, :_reduce_29,
  1, 55, :_reduce_30,
  1, 55, :_reduce_31,
  1, 56, :_reduce_32,
  1, 56, :_reduce_33,
  1, 56, :_reduce_34,
  1, 56, :_reduce_35,
  2, 56, :_reduce_36,
  3, 56, :_reduce_37,
  3, 56, :_reduce_38,
  3, 56, :_reduce_39,
  3, 56, :_reduce_40,
  3, 56, :_reduce_41,
  3, 56, :_reduce_42,
  3, 56, :_reduce_43,
  2, 56, :_reduce_44,
  3, 56, :_reduce_45,
  3, 56, :_reduce_46,
  3, 56, :_reduce_47,
  3, 56, :_reduce_48,
  3, 56, :_reduce_49,
  3, 56, :_reduce_50,
  3, 56, :_reduce_51,
  4, 56, :_reduce_52,
  3, 56, :_reduce_none ]

racc_reduce_n = 54

racc_shift_n = 168

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  Abre_Parentesis => 4,
  Cierra_Parentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  Signo_Coma => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  :UMENOS => 23,
  Flecha => 24,
  Pr_Number => 25,
  Pr_Boolean => 26,
  Program => 27,
  Cond_With => 28,
  Cond_Do => 29,
  End => 30,
  Cond_Times => 31,
  Cond_If => 32,
  Cond_Then => 33,
  Cond_Else => 34,
  Cond_While => 35,
  Cond_For => 36,
  Cond_From => 37,
  Cond_To => 38,
  Cond_By => 39,
  Cond_Repeat => 40,
  Pr_Begin => 41,
  Func => 42,
  Bool_True => 43,
  Bool_False => 44,
  Pr_Read => 45,
  Idtf => 46,
  Digit => 47,
  Pr_Return => 48 }

racc_nt_base = 49

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "UMENOS",
  "\"->\"",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"read\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Id",
  "Arg",
  "TipoVar",
  "Exp",
  "Decl",
  "Par" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_1(val, _values, result)
     result = Multiple_Prog.new(val[0],Inicio.new(val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 76)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 79)
  def _reduce_3(val, _values, result)
     result = Multiple_Func.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 80)
  def _reduce_4(val, _values, result)
     result = Funcion.new(val[1],val[3],val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 81)
  def _reduce_5(val, _values, result)
     result = Funcion.new(val[1],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 82)
  def _reduce_6(val, _values, result)
     result = Funcion.new(val[1],val[3],val[8],val[6],val[10]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 83)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[1],nil,val[7],val[5],val[9]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_8(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 87)
  def _reduce_9(val, _values, result)
     result = Multiple_Arg.new(val[0],Declaracion.new(val[2],val[3]))
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_11(val, _values, result)
     result = Declaracion.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_12(val, _values, result)
     result = Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 93)
  def _reduce_13(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_15(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_16(val, _values, result)
     result = With.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_17(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_18(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7],val[11]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 99)
  def _reduce_19(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 100)
  def _reduce_20(val, _values, result)
     result = Llamada.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_21(val, _values, result)
     result = Llamada.new(val[0],val[2])
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_23(val, _values, result)
     result = Read.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_24(val, _values, result)
     result = Bloque_Cod.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_25(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_26(val, _values, result)
     result = Multiple_Par.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_27(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_28(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_29(val, _values, result)
     result = Multiple.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_30(val, _values, result)
     result = Number.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_31(val, _values, result)
     result = Boolean.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_32(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_33(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_34(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_35(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_36(val, _values, result)
     result = MenosUnario.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_37(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_38(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_39(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_40(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_41(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_42(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_43(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_44(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_45(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_46(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_47(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_48(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_49(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_50(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_51(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_52(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 53 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
