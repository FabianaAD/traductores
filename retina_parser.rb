#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "linea #{@token.lin}, columna #{@token.col}: token inesperado: #{@token.class}: #{@token.t}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 175)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    30,   125,   137,     3,    28,   153,   103,    79,    39,     6,
    40,    29,   162,   108,   134,   154,   104,    85,     4,   124,
   136,    21,    23,    24,     4,    14,   105,    30,    86,    12,
   102,    28,    13,    15,    23,    24,   104,    16,    29,   115,
    26,    27,    18,    19,    20,    22,    25,   167,    21,    23,
    24,    81,    14,   114,    30,   122,    12,   141,    28,    13,
    15,   115,   119,   123,    16,    29,   143,    26,    27,    18,
    19,    20,    22,    25,   164,    21,    23,    24,   144,    14,
   145,    73,   146,    12,    23,    24,    13,    15,    84,    23,
    24,    16,    23,    24,    26,    27,    18,    19,    20,    22,
    25,    30,    22,    53,    54,    28,    52,    81,    50,    51,
    22,    55,    29,    56,    57,    58,    61,    62,    59,    60,
    23,    24,    21,    23,    24,    74,    14,   151,    30,    72,
    12,   128,    28,    13,    15,    23,    24,    68,    16,    29,
   156,    26,    27,    18,    19,    20,    22,    25,    30,    21,
    23,    24,    28,    14,    23,    24,   157,    12,    22,    29,
    13,    15,    76,    77,   159,    16,    23,    24,    26,    27,
    18,    19,    20,    22,    25,    30,    46,    55,   161,    28,
    57,    58,    61,    62,    59,    60,    29,   104,    26,    27,
    45,    22,   110,    22,    25,   166,    21,    23,    24,    22,
    14,    77,    30,   169,    12,     4,    28,    13,    15,    32,
    22,   113,    16,    29,     5,    26,    27,    18,    19,    20,
    22,    25,   175,    21,    23,    24,   176,    14,   177,    30,
   178,    12,   179,    28,    13,    15,   nil,   nil,   nil,    16,
    29,   nil,    26,    27,    18,    19,    20,    22,    25,    30,
    21,    23,    24,    28,    14,   nil,    34,   nil,    12,   nil,
    29,    13,    15,   nil,   nil,   nil,    16,   nil,   nil,    26,
    27,    18,    19,    20,    22,    25,    30,   nil,   nil,   nil,
    28,   -60,   -60,   -60,   -60,   -60,   -60,    29,   nil,    26,
    27,   nil,   nil,   nil,    22,    25,   nil,    21,    23,    24,
   nil,    14,   nil,    30,   nil,    12,   nil,    28,    13,    15,
   nil,   nil,   nil,    16,    29,   nil,    26,    27,    18,    19,
    20,    22,    25,    30,    21,    23,    24,    28,    14,   nil,
   165,   nil,    12,   nil,    29,    13,    15,   nil,   nil,   nil,
    16,   nil,   nil,    26,    27,    18,    19,    20,    22,    25,
    30,   nil,   nil,   nil,    28,   -60,   -60,   -60,   -60,   -60,
   -60,    29,   nil,    26,    27,   nil,   nil,   nil,    22,    25,
   -60,   -60,   -60,   -60,   -60,   -60,    30,   nil,   nil,   nil,
    28,   -60,   -60,   -60,   -60,   -60,   -60,    29,   nil,   nil,
    26,    27,   nil,   nil,   nil,    22,    25,    21,    23,    24,
   nil,    14,   nil,    30,   nil,    12,   nil,    28,    13,    15,
   nil,   nil,   nil,    16,    29,   nil,    26,    27,    18,    19,
    20,    22,    25,   nil,    21,    23,    24,   nil,    14,   nil,
    30,   nil,    12,   nil,    28,    13,    15,   nil,   nil,   nil,
    16,    29,   nil,    26,    27,    18,    19,    20,    22,    25,
   nil,    21,    23,    24,   nil,    14,   nil,    30,   nil,    12,
   nil,    28,    13,    15,   nil,   nil,   nil,    16,    29,   nil,
    26,    27,    18,    19,    20,    22,    25,   nil,    21,    23,
    24,   nil,    14,   nil,    30,   nil,    12,   nil,    28,    13,
    15,   nil,   nil,   nil,    16,    29,   nil,    26,    27,    18,
    19,    20,    22,    25,   nil,    21,    23,    24,   nil,    14,
   nil,    30,   nil,    12,   nil,    28,    13,    15,   nil,   nil,
   nil,    16,    29,   nil,    26,    27,    18,    19,    20,    22,
    25,    30,    66,    30,   nil,    28,   nil,    28,   nil,   nil,
   nil,   nil,    29,   nil,    29,   nil,   nil,   nil,   nil,    30,
   nil,    26,    27,    28,    66,   nil,    22,    25,   nil,    30,
    29,   nil,   nil,    28,    57,    58,    61,    62,    59,    60,
    29,    26,    27,    26,    27,   nil,    22,    25,    22,    25,
    21,    23,    24,   nil,    14,   nil,   155,   nil,    12,    26,
    27,    13,    15,   nil,    22,    25,    16,   nil,   nil,    26,
    27,    18,    19,    20,    22,    25,    30,   nil,   nil,   nil,
    28,   nil,   nil,   nil,   nil,   nil,    30,    29,   nil,   nil,
    28,   nil,   nil,   nil,    30,   nil,   nil,    29,    28,   -60,
   -60,   -60,   -60,   -60,   -60,    29,   nil,    21,    23,    24,
   nil,    14,   nil,   152,   nil,    12,    26,    27,    13,    15,
   nil,    22,    25,    16,   nil,   nil,    26,    27,    18,    19,
    20,    22,    25,    30,    26,    27,   nil,    28,   nil,    22,
    25,    30,   nil,   nil,    29,    28,   -60,   -60,   -60,   -60,
   -60,   -60,    29,   nil,    21,    23,    24,   nil,    14,   nil,
   173,   nil,    12,   nil,   nil,    13,    15,   nil,   nil,   nil,
    16,   nil,   nil,    26,    27,    18,    19,    20,    22,    25,
    30,    26,    27,   nil,    28,   nil,    22,    25,   nil,    30,
   nil,    29,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,
    29,    21,    23,    24,   nil,    14,   nil,   150,   nil,    12,
    66,   nil,    13,    15,   nil,   nil,   nil,    16,   nil,   nil,
    26,    27,    18,    19,    20,    22,    25,    30,   nil,    26,
    27,    28,   nil,   nil,    22,    25,   nil,    55,    29,    56,
    57,    58,    61,    62,    59,    60,   nil,   nil,    21,    23,
    24,   nil,    14,   nil,    30,   nil,    12,   nil,    28,    13,
    15,   nil,   nil,   nil,    16,    29,   nil,    26,    27,    18,
    19,    20,    22,    25,   nil,    21,    23,    24,   nil,    14,
   nil,    30,   nil,    12,   nil,    28,    13,    15,   nil,   nil,
   nil,    16,    29,   nil,    26,    27,    18,    19,    20,    22,
    25,   nil,    21,    23,    24,   nil,    14,   nil,    30,   nil,
    12,   nil,    28,    13,    15,   nil,   nil,   nil,    16,    29,
   nil,    26,    27,    18,    19,    20,    22,    25,   nil,    21,
    23,    24,    30,    14,   nil,   130,    28,    12,   nil,   131,
    13,    15,   nil,    29,   nil,    16,   nil,   nil,    26,    27,
    18,    19,    20,    22,    25,   nil,   nil,   nil,    30,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,    29,
   nil,   nil,    26,    27,   nil,   nil,   nil,    22,    25,    21,
    23,    24,   nil,    14,   nil,   135,   nil,    12,   nil,   nil,
    13,    15,   nil,   nil,   nil,    16,   nil,   nil,    26,    27,
    18,    19,    20,    22,    25,    30,   nil,   nil,   nil,    28,
   nil,   nil,   nil,    30,   nil,   nil,    29,    28,   nil,   nil,
   nil,   nil,   nil,   nil,    29,    30,    21,    23,    24,    28,
    14,   nil,   133,   nil,    12,   nil,    29,    13,    15,   nil,
   nil,   nil,    16,   nil,   nil,    26,    27,    18,    19,    20,
    22,    25,    30,    26,    27,   nil,    28,   nil,    22,    25,
   nil,   nil,   nil,    29,   nil,    26,    27,   nil,   nil,   nil,
    22,    25,    30,    21,    23,    24,    28,    14,   nil,   132,
   nil,    12,   nil,    29,    13,    15,   nil,   nil,   nil,    16,
   nil,   nil,    26,    27,    18,    19,    20,    22,    25,    30,
   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,
    29,    30,    26,    27,   nil,    28,   nil,    22,    25,    30,
   nil,    30,    29,    28,   nil,    28,   nil,   nil,   nil,   nil,
    29,    30,    29,   nil,   nil,    28,   nil,   nil,   nil,    26,
    27,   nil,    29,    30,    22,    25,   nil,    28,   nil,   nil,
   nil,    26,    27,   nil,    29,   nil,    22,    25,   nil,    26,
    27,    26,    27,   nil,    22,    25,    22,    25,   nil,    30,
   nil,    26,    27,    28,   nil,   nil,    22,    25,   nil,   nil,
    29,    30,   nil,    26,    27,    28,   nil,   nil,    22,    25,
    30,   nil,    29,    30,    28,   nil,   nil,    28,   nil,   nil,
   nil,    29,    30,   nil,    29,   nil,    28,   nil,   nil,    26,
    27,   nil,   nil,    29,    22,    25,   nil,   nil,   nil,   nil,
   nil,    26,    27,   nil,   nil,   nil,    22,    25,   nil,   nil,
    26,    27,   nil,    26,    27,    22,    25,   nil,    22,    25,
    30,   nil,    26,    27,    28,   nil,   nil,    22,    25,   nil,
    55,    29,    56,    57,    58,    61,    62,    59,    60,   nil,
   nil,    21,    23,    24,   nil,    14,   nil,   nil,   nil,    12,
   nil,   nil,    13,    15,   nil,   nil,   nil,    16,   nil,   nil,
    26,    27,    18,    19,    20,    22,    25,    53,    54,    49,
    52,    48,    50,    51,   nil,    55,   nil,    56,    57,    58,
    61,    62,    59,    60,   nil,   nil,    53,    54,    49,    52,
    48,    50,    51,   nil,    55,    82,    56,    57,    58,    61,
    62,    59,    60,   nil,   nil,   nil,   nil,   nil,   174,   nil,
    83,    53,    54,    49,    52,    48,    50,    51,   nil,    55,
   nil,    56,    57,    58,    61,    62,    59,    60,   172,   nil,
   nil,    53,    54,    49,    52,    48,    50,    51,   nil,    55,
   nil,    56,    57,    58,    61,    62,    59,    60,   127,   nil,
   nil,    53,    54,    49,    52,    48,    50,    51,   nil,    55,
   nil,    56,    57,    58,    61,    62,    59,    60,    47,   nil,
   nil,    53,    54,    49,    52,    48,    50,    51,   nil,    55,
   nil,    56,    57,    58,    61,    62,    59,    60,   112,   nil,
   nil,    53,    54,    49,    52,    48,    50,    51,   nil,    55,
   nil,    56,    57,    58,    61,    62,    59,    60,   106,    53,
    54,    49,    52,    48,    50,    51,   nil,    55,   nil,    56,
    57,    58,    61,    62,    59,    60,    53,    54,    49,    52,
    48,    50,    51,   nil,    55,   nil,    56,    57,    58,    61,
    62,    59,    60,    53,    54,    49,    52,    48,    50,    51,
   nil,    55,   nil,    56,    57,    58,    61,    62,    59,    60,
    53,    54,   nil,    52,   nil,    50,    51,   nil,    55,   nil,
    56,    57,    58,    61,    62,    59,    60,    55,   nil,    56,
    57,    58,    61,    62,    59,    60,    55,   nil,    56,    57,
    58,    61,    62,    59,    60,    55,   nil,    56,    57,    58,
    61,    62,    59,    60 ]

racc_action_check = [
   163,   108,   122,     0,   163,   145,    64,    40,    11,     2,
    11,   163,   155,    72,   119,   145,    64,    45,     0,   108,
   122,   163,   163,   163,     2,   163,    67,   158,    46,   163,
    63,   158,   163,   163,    72,    72,    67,   163,   158,   129,
   163,   163,   163,   163,   163,   163,   163,   163,   158,   158,
   158,    40,   158,    80,    33,   107,   158,   130,    33,   158,
   158,    80,    85,   107,   158,    33,   132,   158,   158,   158,
   158,   158,   158,   158,   158,    33,    33,    33,   133,    33,
   134,    33,   135,    33,    44,    44,    33,    33,    44,   125,
   125,    33,   137,   137,    33,    33,    33,    33,    33,    33,
    33,     3,    36,    87,    87,     3,    87,   115,    87,    87,
   138,    87,     3,    87,    87,    87,    87,    87,    87,    87,
     9,     9,     3,     3,     3,    34,     3,   140,    82,    31,
     3,   114,    82,     3,     3,    37,    37,    21,     3,    82,
   148,     3,     3,     3,     3,     3,     3,     3,   167,    82,
    82,    82,   167,    82,   123,   123,   150,    82,    18,   167,
    82,    82,    38,    38,   152,    82,    14,    14,    82,    82,
    82,    82,    82,    82,    82,     6,    16,    95,   154,     6,
    95,    95,    95,    95,    95,    95,     6,   121,   167,   167,
    15,   109,    73,   167,   167,   161,     6,     6,     6,    10,
     6,    75,   166,   165,     6,     7,   166,     6,     6,     5,
     4,    79,     6,   166,     1,     6,     6,     6,     6,     6,
     6,     6,   172,   166,   166,   166,   173,   166,   174,     8,
   175,   166,   177,     8,   166,   166,   nil,   nil,   nil,   166,
     8,   nil,   166,   166,   166,   166,   166,   166,   166,   164,
     8,     8,     8,   164,     8,   nil,     8,   nil,     8,   nil,
   164,     8,     8,   nil,   nil,   nil,     8,   nil,   nil,     8,
     8,     8,     8,     8,     8,     8,   131,   nil,   nil,   nil,
   131,    98,    98,    98,    98,    98,    98,   131,   nil,   164,
   164,   nil,   nil,   nil,   164,   164,   nil,   131,   131,   131,
   nil,   131,   nil,   160,   nil,   131,   nil,   160,   131,   131,
   nil,   nil,   nil,   131,   160,   nil,   131,   131,   131,   131,
   131,   131,   131,    12,   160,   160,   160,    12,   160,   nil,
   160,   nil,   160,   nil,    12,   160,   160,   nil,   nil,   nil,
   160,   nil,   nil,   160,   160,   160,   160,   160,   160,   160,
    13,   nil,   nil,   nil,    13,    99,    99,    99,    99,    99,
    99,    13,   nil,    12,    12,   nil,   nil,   nil,    12,    12,
    96,    96,    96,    96,    96,    96,    83,   nil,   nil,   nil,
    83,   101,   101,   101,   101,   101,   101,    83,   nil,   nil,
    13,    13,   nil,   nil,   nil,    13,    13,    83,    83,    83,
   nil,    83,   nil,   156,   nil,    83,   nil,   156,    83,    83,
   nil,   nil,   nil,    83,   156,   nil,    83,    83,    83,    83,
    83,    83,    83,   nil,   156,   156,   156,   nil,   156,   nil,
   153,   nil,   156,   nil,   153,   156,   156,   nil,   nil,   nil,
   156,   153,   nil,   156,   156,   156,   156,   156,   156,   156,
   nil,   153,   153,   153,   nil,   153,   nil,    86,   nil,   153,
   nil,    86,   153,   153,   nil,   nil,   nil,   153,    86,   nil,
   153,   153,   153,   153,   153,   153,   153,   nil,    86,    86,
    86,   nil,    86,   nil,   151,   nil,    86,   nil,   151,    86,
    86,   nil,   nil,   nil,    86,   151,   nil,    86,    86,    86,
    86,    86,    86,    86,   nil,   151,   151,   151,   nil,   151,
   nil,    19,   nil,   151,   nil,    19,   151,   151,   nil,   nil,
   nil,   151,    19,   nil,   151,   151,   151,   151,   151,   151,
   151,    28,    19,    20,   nil,    28,   nil,    20,   nil,   nil,
   nil,   nil,    28,   nil,    20,   nil,   nil,   nil,   nil,    29,
   nil,    19,    19,    29,    20,   nil,    19,    19,   nil,   147,
    29,   nil,   nil,   147,    94,    94,    94,    94,    94,    94,
   147,    28,    28,    20,    20,   nil,    28,    28,    20,    20,
   147,   147,   147,   nil,   147,   nil,   147,   nil,   147,    29,
    29,   147,   147,   nil,    29,    29,   147,   nil,   nil,   147,
   147,   147,   147,   147,   147,   147,    30,   nil,   nil,   nil,
    30,   nil,   nil,   nil,   nil,   nil,   142,    30,   nil,   nil,
   142,   nil,   nil,   nil,    76,   nil,   nil,   142,    76,    97,
    97,    97,    97,    97,    97,    76,   nil,   142,   142,   142,
   nil,   142,   nil,   142,   nil,   142,    30,    30,   142,   142,
   nil,    30,    30,   142,   nil,   nil,   142,   142,   142,   142,
   142,   142,   142,   170,    76,    76,   nil,   170,   nil,    76,
    76,    39,   nil,   nil,   170,    39,   100,   100,   100,   100,
   100,   100,    39,   nil,   170,   170,   170,   nil,   170,   nil,
   170,   nil,   170,   nil,   nil,   170,   170,   nil,   nil,   nil,
   170,   nil,   nil,   170,   170,   170,   170,   170,   170,   170,
   139,    39,    39,   nil,   139,   nil,    39,    39,   nil,   104,
   nil,   139,   nil,   104,   nil,   nil,   nil,   nil,   nil,   nil,
   104,   139,   139,   139,   nil,   139,   nil,   139,   nil,   139,
   104,   nil,   139,   139,   nil,   nil,   nil,   139,   nil,   nil,
   139,   139,   139,   139,   139,   139,   139,    35,   nil,   104,
   104,    35,   nil,   nil,   104,   104,   nil,    91,    35,    91,
    91,    91,    91,    91,    91,    91,   nil,   nil,    35,    35,
    35,   nil,    35,   nil,   136,   nil,    35,   nil,   136,    35,
    35,   nil,   nil,   nil,    35,   136,   nil,    35,    35,    35,
    35,    35,    35,    35,   nil,   136,   136,   136,   nil,   136,
   nil,   124,   nil,   136,   nil,   124,   136,   136,   nil,   nil,
   nil,   136,   124,   nil,   136,   136,   136,   136,   136,   136,
   136,   nil,   124,   124,   124,   nil,   124,   nil,   116,   nil,
   124,   nil,   116,   124,   124,   nil,   nil,   nil,   124,   116,
   nil,   124,   124,   124,   124,   124,   124,   124,   nil,   116,
   116,   116,    62,   116,   nil,   116,    62,   116,   nil,   116,
   116,   116,   nil,    62,   nil,   116,   nil,   nil,   116,   116,
   116,   116,   116,   116,   116,   nil,   nil,   nil,   120,   nil,
   nil,   nil,   120,   nil,   nil,   nil,   nil,   nil,   nil,   120,
   nil,   nil,    62,    62,   nil,   nil,   nil,    62,    62,   120,
   120,   120,   nil,   120,   nil,   120,   nil,   120,   nil,   nil,
   120,   120,   nil,   nil,   nil,   120,   nil,   nil,   120,   120,
   120,   120,   120,   120,   120,   118,   nil,   nil,   nil,   118,
   nil,   nil,   nil,    48,   nil,   nil,   118,    48,   nil,   nil,
   nil,   nil,   nil,   nil,    48,    49,   118,   118,   118,    49,
   118,   nil,   118,   nil,   118,   nil,    49,   118,   118,   nil,
   nil,   nil,   118,   nil,   nil,   118,   118,   118,   118,   118,
   118,   118,   117,    48,    48,   nil,   117,   nil,    48,    48,
   nil,   nil,   nil,   117,   nil,    49,    49,   nil,   nil,   nil,
    49,    49,    50,   117,   117,   117,    50,   117,   nil,   117,
   nil,   117,   nil,    50,   117,   117,   nil,   nil,   nil,   117,
   nil,   nil,   117,   117,   117,   117,   117,   117,   117,    51,
   nil,   nil,   nil,    51,   nil,   nil,   nil,   nil,   nil,   nil,
    51,    52,    50,    50,   nil,    52,   nil,    50,    50,    53,
   nil,    54,    52,    53,   nil,    54,   nil,   nil,   nil,   nil,
    53,    55,    54,   nil,   nil,    55,   nil,   nil,   nil,    51,
    51,   nil,    55,    56,    51,    51,   nil,    56,   nil,   nil,
   nil,    52,    52,   nil,    56,   nil,    52,    52,   nil,    53,
    53,    54,    54,   nil,    53,    53,    54,    54,   nil,    57,
   nil,    55,    55,    57,   nil,   nil,    55,    55,   nil,   nil,
    57,    58,   nil,    56,    56,    58,   nil,   nil,    56,    56,
    59,   nil,    58,    60,    59,   nil,   nil,    60,   nil,   nil,
   nil,    59,    61,   nil,    60,   nil,    61,   nil,   nil,    57,
    57,   nil,   nil,    61,    57,    57,   nil,   nil,   nil,   nil,
   nil,    58,    58,   nil,   nil,   nil,    58,    58,   nil,   nil,
    59,    59,   nil,    60,    60,    59,    59,   nil,    60,    60,
    84,   nil,    61,    61,    84,   nil,   nil,    61,    61,   nil,
    92,    84,    92,    92,    92,    92,    92,    92,    92,   nil,
   nil,    84,    84,    84,   nil,    84,   nil,   nil,   nil,    84,
   nil,   nil,    84,    84,   nil,   nil,   nil,    84,   nil,   nil,
    84,    84,    84,    84,    84,    84,    84,    41,    41,    41,
    41,    41,    41,    41,   nil,    41,   nil,    41,    41,    41,
    41,    41,    41,    41,   nil,   nil,    43,    43,    43,    43,
    43,    43,    43,   nil,    43,    41,    43,    43,    43,    43,
    43,    43,    43,   nil,   nil,   nil,   nil,   nil,   171,   nil,
    43,   171,   171,   171,   171,   171,   171,   171,   nil,   171,
   nil,   171,   171,   171,   171,   171,   171,   171,   168,   nil,
   nil,   168,   168,   168,   168,   168,   168,   168,   nil,   168,
   nil,   168,   168,   168,   168,   168,   168,   168,   111,   nil,
   nil,   111,   111,   111,   111,   111,   111,   111,   nil,   111,
   nil,   111,   111,   111,   111,   111,   111,   111,    17,   nil,
   nil,    17,    17,    17,    17,    17,    17,    17,   nil,    17,
   nil,    17,    17,    17,    17,    17,    17,    17,    78,   nil,
   nil,    78,    78,    78,    78,    78,    78,    78,   nil,    78,
   nil,    78,    78,    78,    78,    78,    78,    78,    71,    71,
    71,    71,    71,    71,    71,    71,   nil,    71,   nil,    71,
    71,    71,    71,    71,    71,    71,    65,    65,    65,    65,
    65,    65,    65,   nil,    65,   nil,    65,    65,    65,    65,
    65,    65,    65,    69,    69,    69,    69,    69,    69,    69,
   nil,    69,   nil,    69,    69,    69,    69,    69,    69,    69,
    88,    88,   nil,    88,   nil,    88,    88,   nil,    88,   nil,
    88,    88,    88,    88,    88,    88,    88,    93,   nil,    93,
    93,    93,    93,    93,    93,    93,    90,   nil,    90,    90,
    90,    90,    90,    90,    90,    89,   nil,    89,    89,    89,
    89,    89,    89,    89 ]

racc_action_pointer = [
   -25,   214,   -19,    97,   161,   209,   171,   162,   225,    94,
   150,     6,   319,   346,   140,   141,   126,  1315,   109,   507,
   529,   134,   nil,   nil,   nil,   nil,   nil,   nil,   527,   545,
   602,   125,   nil,    50,   122,   753,    53,   109,   160,   667,
     2,  1211,   nil,  1230,    58,   -21,    -4,   nil,   939,   951,
   998,  1025,  1037,  1045,  1047,  1057,  1069,  1095,  1107,  1116,
  1119,  1128,   858,    27,     3,  1370,   nil,    23,   nil,  1387,
   nil,  1353,     8,   189,   nil,   198,   620,   nil,  1335,   208,
    48,   nil,   124,   372,  1166,    12,   453,    97,  1404,  1431,
  1422,   753,  1166,  1413,   547,   163,   353,   612,   264,   338,
   659,   364,   nil,   nil,   715,   nil,   nil,    50,   -23,   142,
   nil,  1295,   nil,   nil,   128,    58,   834,   978,   931,   -25,
   884,   174,   -22,   128,   807,    63,   nil,   nil,   nil,    26,
    54,   272,    63,    75,    30,    79,   780,    66,    61,   706,
    85,   nil,   612,   nil,   nil,   -25,   nil,   555,    98,   nil,
   153,   480,   161,   426,   128,     9,   399,   nil,    23,   nil,
   299,   165,   nil,    -4,   245,   200,   198,   144,  1275,   nil,
   659,  1255,   191,   223,   197,   227,   nil,   229,   nil,   nil ]

racc_action_default = [
   -60,   -60,   -60,   -60,   -60,   -60,   -60,    -3,   -60,   -10,
   -60,   -39,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,
   -60,   -60,   -33,   -36,   -37,   -38,   -40,   -41,   -60,   -60,
   -60,   -60,   180,   -60,   -60,   -27,   -60,   -35,   -60,   -60,
   -60,   -60,   -39,   -60,   -60,   -60,   -60,   -22,   -60,   -60,
   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,
   -60,   -60,   -60,   -60,   -60,   -28,   -29,   -60,   -26,   -42,
   -50,   -60,   -60,   -60,    -2,   -60,   -60,   -34,   -60,   -60,
   -60,   -31,   -60,   -60,   -60,   -60,   -60,   -43,   -44,   -45,
   -46,   -47,   -48,   -49,   -51,   -52,   -53,   -54,   -55,   -56,
   -57,   -58,   -23,   -24,   -60,   -25,   -59,   -60,   -60,   -60,
    -1,   -60,   -12,   -20,   -60,   -60,   -60,   -60,   -60,   -60,
   -60,   -30,   -60,   -60,   -60,   -60,    -8,   -11,   -21,   -32,
   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,
   -60,   -13,   -60,   -15,   -16,   -60,   -19,   -60,   -60,    -9,
   -60,   -60,   -60,   -60,   -60,   -60,   -60,    -5,   -60,   -14,
   -60,   -60,    -4,   -60,   -60,   -60,   -60,   -60,   -60,   -17,
   -60,   -60,   -60,   -60,   -60,   -60,   -18,   -60,    -7,    -6 ]

racc_goto_table = [
    31,    80,     8,    64,    67,    33,    38,   107,    42,    42,
     2,     1,   nil,   nil,    63,    42,    42,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    42,    42,    42,   nil,   nil,   nil,
   nil,    37,    75,   nil,   nil,    42,    44,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    42,    42,    42,    42,    42,    42,
    42,    42,    42,    42,    42,    42,    42,    42,    42,    37,
   nil,   nil,   nil,   nil,   nil,   nil,    37,   nil,   nil,   nil,
   nil,   nil,    42,    36,   nil,   nil,   129,   nil,    36,   nil,
   nil,   116,   117,   118,   nil,   120,   nil,   nil,   121,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    42,    36,   nil,   nil,   nil,   126,   nil,   nil,    36,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   139,   nil,   nil,   nil,   nil,   nil,   nil,
   142,    41,    43,   nil,   149,   147,   109,   nil,    65,    65,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    69,    70,    71,
   158,   nil,   160,   nil,   nil,   163,   nil,   nil,    78,   nil,
    42,   nil,   nil,    42,   nil,   170,   nil,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,   nil,   nil,   nil,   nil,   nil,   138,   nil,   140,
   nil,   nil,   nil,   nil,   nil,   111,   nil,   nil,   nil,   nil,
   nil,   148,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   168,   nil,   nil,   171 ]

racc_goto_check = [
     4,     9,     3,    10,    10,     3,     4,     5,     4,     4,
     2,     1,   nil,   nil,     4,     4,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,     4,     4,   nil,   nil,   nil,
   nil,     8,     4,   nil,   nil,     4,     8,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     8,
   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,   nil,   nil,
   nil,   nil,     4,     6,   nil,   nil,     9,   nil,     6,   nil,
   nil,     3,     3,     3,   nil,     3,   nil,   nil,    10,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     4,     6,   nil,   nil,   nil,     4,   nil,   nil,     6,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
     3,     7,     7,   nil,     4,     3,     6,   nil,     7,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,     7,     7,
     3,   nil,     3,   nil,   nil,     3,   nil,   nil,     7,   nil,
     4,   nil,   nil,     4,   nil,     3,   nil,     7,     7,     7,
     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     7,   nil,   nil,   nil,   nil,   nil,     6,   nil,     6,
   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,    11,    10,    -1,    -4,   -65,    64,   119,    22,   -39,
   -16 ]

racc_goto_default = [
   nil,   nil,     7,    35,    11,   nil,    10,    17,     9,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 53, :_reduce_1,
  4, 53, :_reduce_2,
  2, 54, :_reduce_3,
  9, 54, :_reduce_4,
  8, 54, :_reduce_5,
  14, 54, :_reduce_6,
  13, 54, :_reduce_7,
  2, 57, :_reduce_8,
  4, 57, :_reduce_9,
  1, 55, :_reduce_none,
  5, 55, :_reduce_11,
  4, 55, :_reduce_12,
  6, 55, :_reduce_13,
  8, 55, :_reduce_14,
  6, 55, :_reduce_15,
  6, 55, :_reduce_16,
  10, 55, :_reduce_17,
  12, 55, :_reduce_18,
  6, 55, :_reduce_19,
  4, 55, :_reduce_20,
  5, 55, :_reduce_21,
  2, 55, :_reduce_none,
  3, 55, :_reduce_23,
  3, 55, :_reduce_24,
  3, 55, :_reduce_25,
  2, 55, :_reduce_26,
  2, 55, :_reduce_27,
  1, 62, :_reduce_none,
  1, 62, :_reduce_29,
  3, 62, :_reduce_30,
  1, 61, :_reduce_31,
  3, 61, :_reduce_32,
  1, 56, :_reduce_33,
  3, 60, :_reduce_34,
  2, 60, :_reduce_35,
  1, 58, :_reduce_36,
  1, 58, :_reduce_37,
  1, 59, :_reduce_38,
  1, 59, :_reduce_39,
  1, 59, :_reduce_40,
  1, 59, :_reduce_41,
  2, 59, :_reduce_42,
  3, 59, :_reduce_43,
  3, 59, :_reduce_44,
  3, 59, :_reduce_45,
  3, 59, :_reduce_46,
  3, 59, :_reduce_47,
  3, 59, :_reduce_48,
  3, 59, :_reduce_49,
  2, 59, :_reduce_50,
  3, 59, :_reduce_51,
  3, 59, :_reduce_52,
  3, 59, :_reduce_53,
  3, 59, :_reduce_54,
  3, 59, :_reduce_55,
  3, 59, :_reduce_56,
  3, 59, :_reduce_57,
  3, 59, :_reduce_58,
  3, 59, :_reduce_none ]

racc_reduce_n = 60

racc_shift_n = 180

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  Abre_Parentesis => 4,
  Cierra_Parentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  Signo_Coma => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  :UMENOS => 23,
  Flecha => 24,
  Str => 25,
  Pr_Number => 26,
  Pr_Boolean => 27,
  Program => 28,
  Cond_With => 29,
  Cond_Do => 30,
  End => 31,
  Cond_Times => 32,
  Cond_If => 33,
  Cond_Then => 34,
  Cond_Else => 35,
  Cond_While => 36,
  Cond_For => 37,
  Cond_From => 38,
  Cond_To => 39,
  Cond_By => 40,
  Cond_Repeat => 41,
  Pr_Begin => 42,
  Func => 43,
  Bool_True => 44,
  Bool_False => 45,
  Pr_Read => 46,
  Pr_Write => 47,
  Pr_Writeln => 48,
  Idtf => 49,
  Digit => 50,
  Pr_Return => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "UMENOS",
  "\"->\"",
  "\"str\"",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Id",
  "Arg",
  "TipoVar",
  "Exp",
  "Decl",
  "Par",
  "Imp" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 78)
  def _reduce_1(val, _values, result)
     result = Multiple_Prog.new(val[0],Inicio.new(val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 79)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 82)
  def _reduce_3(val, _values, result)
     result = Multiple_Func.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 83)
  def _reduce_4(val, _values, result)
     result = Funcion.new(val[1],val[3],val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 84)
  def _reduce_5(val, _values, result)
     result = Funcion.new(val[1],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_6(val, _values, result)
     result = Funcion.new(val[1],val[3],val[8],val[6],val[10]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_7(val, _values, result)
     result = Funcion.new(val[1],nil,val[7],val[5],val[9]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_8(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_9(val, _values, result)
     result = Multiple_Arg.new(val[0],Declaracion.new(val[2],val[3]))
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_11(val, _values, result)
     result = Declaracion.new(val[0],val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_12(val, _values, result)
     result = Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_13(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_15(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 99)
  def _reduce_16(val, _values, result)
     result = With.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 100)
  def _reduce_17(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_18(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7],val[11]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_19(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_20(val, _values, result)
     result = Llamada.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_21(val, _values, result)
     result = Llamada.new(val[0],val[2])
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_23(val, _values, result)
     result = Read.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_24(val, _values, result)
     result = Write.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_25(val, _values, result)
     result = Writeln.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_26(val, _values, result)
     result = Cadena.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 110)
  def _reduce_27(val, _values, result)
     result = Bloque_Cod.new(val[0],val[1]) 
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_29(val, _values, result)
     result = Cadena.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_30(val, _values, result)
     result = Multiple_Imp.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_31(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_32(val, _values, result)
     result = Multiple_Par.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_33(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_34(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_35(val, _values, result)
     result = Multiple.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_36(val, _values, result)
     result = Number.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_37(val, _values, result)
     result = Boolean.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_38(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_39(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_40(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_41(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_42(val, _values, result)
     result = MenosUnario.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_43(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_44(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_45(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_46(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_47(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_48(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_49(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_50(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_51(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_52(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_53(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_54(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_55(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_56(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_57(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 153)
  def _reduce_58(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 59 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
