#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Error de sintaxis en: #{@token}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 164)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    81,   125,    25,    94,   112,     6,    23,   143,   -27,   137,
     3,   109,    33,    24,    34,    99,   -27,   144,   100,   110,
     4,   -29,    18,    19,    25,     4,   101,   121,    23,   -29,
    18,    19,   122,   124,    96,    24,   111,    18,    19,    76,
    21,    22,    37,    38,    18,    19,    25,    14,    75,    62,
    23,    12,   106,   127,    13,    15,   128,    24,   129,    16,
    74,    65,    21,    22,    10,    11,   130,    64,    25,   132,
    63,   134,    23,    51,   135,    52,    53,    54,    57,    24,
    55,    56,   136,   105,    21,    22,    37,    38,    18,    19,
    25,    14,   138,   139,    23,    12,   140,    61,    13,    15,
    42,    24,    41,    16,   145,   146,    21,    22,    10,    11,
    18,    19,    25,    14,   147,   148,    23,    12,   149,   115,
    13,    15,   152,    24,   153,    16,    35,   113,    21,    22,
    10,    11,    18,    19,    25,    14,   156,    32,    23,    12,
     4,   159,    13,    15,    27,    24,    26,    16,   162,     5,
    21,    22,    10,    11,    18,    19,    25,    14,   164,   165,
    23,    12,   166,   167,    13,    15,   nil,    24,   nil,    16,
   nil,   nil,    21,    22,    10,    11,   nil,   nil,    25,   nil,
   nil,   nil,    23,    51,   nil,    52,    53,    54,    57,    24,
    55,    56,   nil,   nil,    21,    22,    37,    38,    18,    19,
    25,    14,   nil,    29,    23,    12,   nil,   nil,    13,    15,
   nil,    24,   nil,    16,   nil,   nil,    21,    22,    10,    11,
   nil,   nil,    25,   nil,   nil,   nil,    23,    51,   nil,    52,
    53,    54,    57,    24,    55,    56,   nil,   nil,    21,    22,
    37,    38,    18,    19,    25,    14,   nil,   155,    23,    12,
   nil,   nil,    13,    15,    25,    24,   nil,    16,    23,   nil,
    21,    22,    10,    11,    25,    24,   nil,   nil,    23,    51,
   nil,    52,    53,    54,    57,    24,    55,    56,   nil,   nil,
   nil,   nil,    21,    22,    37,    38,    25,   nil,   nil,   nil,
    23,   nil,    21,    22,    37,    38,   nil,    24,   nil,   nil,
   nil,   nil,    21,    22,    37,    38,    18,    19,    25,    14,
   nil,   nil,    23,    12,   nil,   nil,    13,    15,   nil,    24,
   nil,    16,   nil,   nil,    21,    22,    10,    11,    18,    19,
    25,    14,   nil,   118,    23,    12,   nil,   119,    13,    15,
   nil,    24,   nil,    16,   nil,   nil,    21,    22,    10,    11,
    18,    19,    25,    14,   nil,   142,    23,    12,   nil,   nil,
    13,    15,   nil,    24,   nil,    16,   nil,   nil,    21,    22,
    10,    11,    18,    19,    25,    14,   nil,   nil,    23,    12,
   nil,   nil,    13,    15,    25,    24,   nil,    16,    23,   nil,
    21,    22,    10,    11,    25,    24,    51,   nil,    23,    53,
    54,    57,   nil,    55,    56,    24,   -55,   -55,   -55,   nil,
   -55,   -55,    21,    22,    37,    38,    25,   nil,   nil,   nil,
    23,   nil,    21,    22,    37,    38,   nil,    24,   nil,   nil,
   nil,   nil,    21,    22,    37,    38,    18,    19,    25,    14,
   nil,   141,    23,    12,   nil,   nil,    13,    15,   nil,    24,
   nil,    16,   nil,   nil,    21,    22,    10,    11,    18,    19,
    25,    14,   nil,   163,    23,    12,   nil,   nil,    13,    15,
   nil,    24,   nil,    16,   nil,   nil,    21,    22,    10,    11,
   nil,   nil,    25,   nil,   nil,   nil,    23,    51,   nil,    52,
    53,    54,    57,    24,    55,    56,   nil,   nil,    21,    22,
    37,    38,    18,    19,    25,    14,   nil,   nil,    23,    12,
   nil,   nil,    13,    15,   nil,    24,   nil,    16,   nil,   nil,
    21,    22,    10,    11,    18,    19,    25,    14,   nil,   nil,
    23,    12,   nil,   nil,    13,    15,   nil,    24,   nil,    16,
   nil,   nil,    21,    22,    10,    11,    18,    19,    25,    14,
   nil,   nil,    23,    12,   nil,   nil,    13,    15,   nil,    24,
   nil,    16,   nil,   nil,    21,    22,    10,    11,    25,    67,
   nil,   nil,    23,    25,   nil,   nil,   nil,    23,   nil,    24,
   nil,   nil,   nil,   nil,    24,   nil,    21,    22,    37,    38,
   -55,   -55,   -55,   nil,   -55,   -55,   -55,   -55,   -55,    25,
   -55,   -55,   nil,    23,   nil,   nil,    21,    22,    37,    38,
    24,    21,    22,    37,    38,   nil,   nil,    25,   nil,    18,
    19,    23,    14,   nil,   120,   nil,    12,   nil,    24,    13,
    15,   -55,   -55,   -55,    16,   -55,   -55,    21,    22,    10,
    11,    25,    53,    54,    57,    23,    55,    56,   nil,    25,
   nil,   nil,    24,    23,   nil,    21,    22,    37,    38,    25,
    24,    18,    19,    23,    14,   nil,   123,   nil,    12,   nil,
    24,    13,    15,    25,   nil,   nil,    16,    23,   nil,    21,
    22,    10,    11,   nil,    24,   nil,   nil,    21,    22,    37,
    38,    25,   nil,   nil,   nil,    23,   nil,    21,    22,    37,
    38,   nil,    24,   nil,    25,   -55,   -55,   -55,    23,   -55,
   -55,    21,    22,    37,    38,    24,    25,   nil,   nil,   nil,
    23,   nil,    25,   nil,   nil,   nil,    23,    24,   nil,    21,
    22,    37,    38,    24,   nil,    25,   nil,   nil,   nil,    23,
   nil,   nil,    21,    22,    37,    38,    24,    25,   nil,   nil,
   nil,    23,   nil,   nil,    21,    22,    37,    38,    24,   nil,
    21,    22,    37,    38,   nil,   nil,    25,   nil,   nil,   nil,
    23,   nil,   nil,    21,    22,    37,    38,    24,    25,   nil,
   nil,   nil,    23,   nil,   nil,    21,    22,    37,    38,    24,
    25,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,
   nil,    24,   nil,   nil,    21,    22,    37,    38,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,    22,    37,    38,
   nil,    25,   nil,   nil,   nil,    23,   nil,   nil,    21,    22,
    37,    38,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    18,    19,   nil,    14,   nil,   nil,   nil,    12,   nil,
   nil,    13,    15,   nil,   nil,   nil,    16,   nil,   nil,    21,
    22,    10,    11,    49,    50,    45,    48,    44,    46,    47,
   nil,    51,   nil,    52,    53,    54,    57,   nil,    55,    56,
    49,    50,    45,    48,    44,    46,    47,   nil,    51,    72,
    52,    53,    54,    57,   nil,    55,    56,   nil,   nil,   nil,
   102,   nil,    73,    49,    50,    45,    48,    44,    46,    47,
   nil,    51,   nil,    52,    53,    54,    57,    43,    55,    56,
    49,    50,    45,    48,    44,    46,    47,   nil,    51,   nil,
    52,    53,    54,    57,   158,    55,    56,    49,    50,    45,
    48,    44,    46,    47,   nil,    51,   nil,    52,    53,    54,
    57,    98,    55,    56,    49,    50,    45,    48,    44,    46,
    47,   nil,    51,   nil,    52,    53,    54,    57,   161,    55,
    56,    49,    50,    45,    48,    44,    46,    47,   nil,    51,
   nil,    52,    53,    54,    57,   114,    55,    56,    49,    50,
    45,    48,    44,    46,    47,   nil,    51,   nil,    52,    53,
    54,    57,   nil,    55,    56,    92,    49,    50,    45,    48,
    44,    46,    47,   nil,    51,   nil,    52,    53,    54,    57,
   nil,    55,    56,    49,    50,    45,    48,    44,    46,    47,
   nil,    51,   nil,    52,    53,    54,    57,   nil,    55,    56,
    49,    50,    45,    48,    44,    46,    47,   nil,    51,   nil,
    52,    53,    54,    57,   nil,    55,    56,    49,    50,   nil,
    48,   nil,    46,    47,   nil,    51,   nil,    52,    53,    54,
    57,   nil,    55,    56,    49,    50,    45,    48,    44,    46,
    47,   nil,    51,   nil,    52,    53,    54,    57,   nil,    55,
    56,    49,    50,    45,    48,    44,    46,    47,   nil,    51,
   nil,    52,    53,    54,    57,   nil,    55,    56,    49,    50,
   nil,    48,   nil,    46,    47,   nil,    51,   nil,    52,    53,
    54,    57,   nil,    55,    56 ]

racc_action_check = [
    47,   109,    47,    61,    94,     2,    47,   134,    70,   125,
     0,    93,    10,    47,    10,    67,    70,   134,    68,    93,
     2,   117,    61,    61,    28,     0,    68,   105,    28,   117,
    14,    14,   106,   109,    62,    28,    94,   110,   110,    42,
    47,    47,    47,    47,    28,    28,    81,    28,    41,    28,
    81,    28,    75,   111,    28,    28,   112,    81,   113,    28,
    40,    32,    28,    28,    28,    28,   118,    31,     3,   120,
    29,   122,     3,    83,   123,    83,    83,    83,    83,     3,
    83,    83,   124,    74,    81,    81,    81,    81,     3,     3,
    76,     3,   126,   127,    76,     3,   128,    26,     3,     3,
    16,    76,    15,     3,   136,   137,     3,     3,     3,     3,
    76,    76,   156,    76,   140,   141,   156,    76,   142,   100,
    76,    76,   144,   156,   146,    76,    11,    95,    76,    76,
    76,    76,   156,   156,     6,   156,   151,     9,     6,   156,
     7,   155,   156,   156,     5,     6,     4,   156,   158,     1,
   156,   156,   156,   156,     6,     6,   101,     6,   161,   162,
   101,     6,   163,   164,     6,     6,   nil,   101,   nil,     6,
   nil,   nil,     6,     6,     6,     6,   nil,   nil,     8,   nil,
   nil,   nil,     8,    80,   nil,    80,    80,    80,    80,     8,
    80,    80,   nil,   nil,   101,   101,   101,   101,     8,     8,
   153,     8,   nil,     8,   153,     8,   nil,   nil,     8,     8,
   nil,   153,   nil,     8,   nil,   nil,     8,     8,     8,     8,
   nil,   nil,   150,   nil,   nil,   nil,   150,    82,   nil,    82,
    82,    82,    82,   150,    82,    82,   nil,   nil,   153,   153,
   153,   153,   150,   150,   147,   150,   nil,   150,   147,   150,
   nil,   nil,   150,   150,    12,   147,   nil,   150,    12,   nil,
   150,   150,   150,   150,    13,    12,   nil,   nil,    13,    84,
   nil,    84,    84,    84,    84,    13,    84,    84,   nil,   nil,
   nil,   nil,   147,   147,   147,   147,   143,   nil,   nil,   nil,
   143,   nil,    12,    12,    12,    12,   nil,   143,   nil,   nil,
   nil,   nil,    13,    13,    13,    13,   143,   143,   103,   143,
   nil,   nil,   103,   143,   nil,   nil,   143,   143,   nil,   103,
   nil,   143,   nil,   nil,   143,   143,   143,   143,   103,   103,
   133,   103,   nil,   103,   133,   103,   nil,   103,   103,   103,
   nil,   133,   nil,   103,   nil,   nil,   103,   103,   103,   103,
   133,   133,    73,   133,   nil,   133,    73,   133,   nil,   nil,
   133,   133,   nil,    73,   nil,   133,   nil,   nil,   133,   133,
   133,   133,    73,    73,    23,    73,   nil,   nil,    23,    73,
   nil,   nil,    73,    73,    56,    23,   nil,    73,    56,   nil,
    73,    73,    73,    73,    25,    56,    86,   nil,    25,    86,
    86,    86,   nil,    86,    86,    25,    89,    89,    89,   nil,
    89,    89,    23,    23,    23,    23,   131,   nil,   nil,   nil,
   131,   nil,    56,    56,    56,    56,   nil,   131,   nil,   nil,
   nil,   nil,    25,    25,    25,    25,   131,   131,   160,   131,
   nil,   131,   160,   131,   nil,   nil,   131,   131,   nil,   160,
   nil,   131,   nil,   nil,   131,   131,   131,   131,   160,   160,
    54,   160,   nil,   160,    54,   160,   nil,   nil,   160,   160,
   nil,    54,   nil,   160,   nil,   nil,   160,   160,   160,   160,
   nil,   nil,    30,   nil,   nil,   nil,    30,    79,   nil,    79,
    79,    79,    79,    30,    79,    79,   nil,   nil,    54,    54,
    54,    54,    30,    30,   119,    30,   nil,   nil,   119,    30,
   nil,   nil,    30,    30,   nil,   119,   nil,    30,   nil,   nil,
    30,    30,    30,    30,   119,   119,    72,   119,   nil,   nil,
    72,   119,   nil,   nil,   119,   119,   nil,    72,   nil,   119,
   nil,   nil,   119,   119,   119,   119,    72,    72,    33,    72,
   nil,   nil,    33,    72,   nil,   nil,    72,    72,   nil,    33,
   nil,    72,   nil,   nil,    72,    72,    72,    72,    34,    34,
   nil,   nil,    34,    35,   nil,   nil,   nil,    35,   nil,    34,
   nil,   nil,   nil,   nil,    35,   nil,    33,    33,    33,    33,
    90,    90,    90,   nil,    90,    90,    91,    91,    91,   104,
    91,    91,   nil,   104,   nil,   nil,    34,    34,    34,    34,
   104,    35,    35,    35,    35,   nil,   nil,    65,   nil,   104,
   104,    65,   104,   nil,   104,   nil,   104,   nil,    65,   104,
   104,    88,    88,    88,   104,    88,    88,   104,   104,   104,
   104,   107,    85,    85,    85,   107,    85,    85,   nil,    55,
   nil,   nil,   107,    55,   nil,    65,    65,    65,    65,    57,
    55,   107,   107,    57,   107,   nil,   107,   nil,   107,   nil,
    57,   107,   107,    44,   nil,   nil,   107,    44,   nil,   107,
   107,   107,   107,   nil,    44,   nil,   nil,    55,    55,    55,
    55,    45,   nil,   nil,   nil,    45,   nil,    57,    57,    57,
    57,   nil,    45,   nil,    46,    87,    87,    87,    46,    87,
    87,    44,    44,    44,    44,    46,    24,   nil,   nil,   nil,
    24,   nil,    48,   nil,   nil,   nil,    48,    24,   nil,    45,
    45,    45,    45,    48,   nil,    49,   nil,   nil,   nil,    49,
   nil,   nil,    46,    46,    46,    46,    49,    50,   nil,   nil,
   nil,    50,   nil,   nil,    24,    24,    24,    24,    50,   nil,
    48,    48,    48,    48,   nil,   nil,    51,   nil,   nil,   nil,
    51,   nil,   nil,    49,    49,    49,    49,    51,    52,   nil,
   nil,   nil,    52,   nil,   nil,    50,    50,    50,    50,    52,
    53,   nil,   nil,   nil,    53,   nil,   nil,   nil,   nil,   nil,
   nil,    53,   nil,   nil,    51,    51,    51,    51,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    52,    52,    52,    52,
   nil,   121,   nil,   nil,   nil,   121,   nil,   nil,    53,    53,
    53,    53,   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   121,   121,   nil,   121,   nil,   nil,   nil,   121,   nil,
   nil,   121,   121,   nil,   nil,   nil,   121,   nil,   nil,   121,
   121,   121,   121,    36,    36,    36,    36,    36,    36,    36,
   nil,    36,   nil,    36,    36,    36,    36,   nil,    36,    36,
    39,    39,    39,    39,    39,    39,    39,   nil,    39,    36,
    39,    39,    39,    39,   nil,    39,    39,   nil,   nil,   nil,
    71,   nil,    39,    71,    71,    71,    71,    71,    71,    71,
   nil,    71,   nil,    71,    71,    71,    71,    17,    71,    71,
    17,    17,    17,    17,    17,    17,    17,   nil,    17,   nil,
    17,    17,    17,    17,   154,    17,    17,   154,   154,   154,
   154,   154,   154,   154,   nil,   154,   nil,   154,   154,   154,
   154,    66,   154,   154,    66,    66,    66,    66,    66,    66,
    66,   nil,    66,   nil,    66,    66,    66,    66,   157,    66,
    66,   157,   157,   157,   157,   157,   157,   157,   nil,   157,
   nil,   157,   157,   157,   157,    97,   157,   157,    97,    97,
    97,    97,    97,    97,    97,   nil,    97,   nil,    97,    97,
    97,    97,   nil,    97,    97,    60,    60,    60,    60,    60,
    60,    60,    60,   nil,    60,   nil,    60,    60,    60,    60,
   nil,    60,    60,    69,    69,    69,    69,    69,    69,    69,
   nil,    69,   nil,    69,    69,    69,    69,   nil,    69,    69,
   116,   116,   116,   116,   116,   116,   116,   nil,   116,   nil,
   116,   116,   116,   116,   nil,   116,   116,    78,    78,   nil,
    78,   nil,    78,    78,   nil,    78,   nil,    78,    78,    78,
    78,   nil,    78,    78,   108,   108,   108,   108,   108,   108,
   108,   nil,   108,   nil,   108,   108,   108,   108,   nil,   108,
   108,    58,    58,    58,    58,    58,    58,    58,   nil,    58,
   nil,    58,    58,    58,    58,   nil,    58,    58,    77,    77,
   nil,    77,   nil,    77,    77,   nil,    77,   nil,    77,    77,
    77,    77,   nil,    77,    77 ]

racc_action_pointer = [
   -16,   149,   -21,    64,   102,   144,   130,    99,   174,    93,
    10,   124,   250,   260,     6,    58,    55,   914,   nil,   nil,
   nil,   nil,   nil,   370,   712,   390,    93,   nil,    20,    67,
   478,    64,    59,   544,   564,   569,   857,   nil,   nil,   874,
    16,    12,     9,   nil,   669,   687,   700,    -2,   718,   731,
   743,   762,   774,   786,   456,   645,   380,   655,  1085,   nil,
  1000,    -2,    31,   nil,   nil,   613,   948,    12,    13,  1017,
     3,   897,   522,   348,    80,     7,    86,  1102,  1051,   473,
   169,    42,   213,    59,   255,   625,   382,   688,   614,   389,
   573,   579,   nil,     6,    -4,   114,   nil,   982,   nil,   nil,
   116,   152,   nil,   304,   595,    -1,    -5,   637,  1068,    -7,
    13,    24,    39,    14,   nil,   nil,  1034,    16,    63,   500,
    66,   817,    26,    71,    53,    -8,    48,    90,    56,   nil,
   nil,   412,   nil,   326,   -21,   nil,   101,    65,   nil,   nil,
    68,   112,   115,   282,    77,   nil,    78,   240,   nil,   nil,
   218,   108,   nil,   196,   931,   138,   108,   965,   119,   nil,
   434,   129,   156,   159,   160,   nil,   nil,   nil ]

racc_action_default = [
   -55,   -55,   -55,   -55,   -55,   -55,   -55,    -3,   -55,   -55,
   -30,   -33,   -55,   -55,   -55,   -55,   -55,   -55,   -31,   -32,
   -34,   -35,   -36,   -55,   -55,   -55,   -55,   168,   -55,   -55,
   -24,   -55,   -30,   -55,   -55,   -55,   -55,   -30,   -33,   -55,
   -55,   -55,   -55,   -23,   -55,   -55,   -55,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -37,   -45,
   -55,   -55,   -55,    -2,   -10,   -55,   -55,   -55,   -55,   -26,
   -34,   -55,   -55,   -55,   -55,   -55,   -55,   -38,   -39,   -40,
   -41,   -55,   -42,   -43,   -44,   -46,   -47,   -48,   -49,   -50,
   -51,   -52,   -54,   -55,   -55,   -55,    -1,   -55,   -12,   -21,
   -55,   -55,   -13,   -55,   -55,   -55,   -55,   -55,   -53,   -55,
   -55,   -55,   -55,   -55,   -11,   -22,   -28,   -34,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,    -8,
   -14,   -55,   -16,   -55,   -55,   -20,   -55,   -55,    -9,    -5,
   -55,   -55,   -55,   -55,   -55,    -4,   -55,   -55,   -15,   -17,
   -55,   -55,   -25,   -55,   -55,   -55,   -55,   -55,   -55,   -18,
   -55,   -55,   -55,   -55,   -55,    -7,   -19,    -6 ]

racc_goto_table = [
     8,    31,     1,    28,    93,    40,    36,    39,     2,   151,
    68,   nil,   nil,   nil,   nil,   nil,   nil,    58,    59,    60,
   nil,   nil,   nil,   nil,   nil,   nil,    70,    66,    69,    71,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    77,    78,
    79,    80,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    95,   nil,   nil,   nil,   nil,   nil,   nil,    97,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   103,
   104,   nil,   nil,   107,   nil,   108,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   117,   nil,   116,   nil,   nil,   nil,   nil,
   nil,   126,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   131,   nil,   133,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   150,   154,   nil,   nil,   nil,   nil,   nil,   157,   nil,   nil,
   nil,   nil,   nil,   160 ]

racc_goto_check = [
     3,     7,     1,     3,     4,     6,     5,     5,     2,     8,
     9,   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,     5,
   nil,   nil,   nil,   nil,   nil,   nil,     7,     5,     5,     5,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     6,   nil,   nil,   nil,   nil,   nil,   nil,     5,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
     3,   nil,   nil,     3,   nil,     5,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,   nil,     5,   nil,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,     5,   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,
   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     2,     8,    -3,   -57,    -6,    -9,    -8,  -135,   -24 ]

racc_goto_default = [
   nil,   nil,     7,    30,   nil,    17,     9,    20,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 48, :_reduce_none,
  4, 48, :_reduce_2,
  2, 49, :_reduce_none,
  8, 49, :_reduce_none,
  7, 49, :_reduce_none,
  13, 49, :_reduce_none,
  12, 49, :_reduce_none,
  3, 51, :_reduce_none,
  4, 51, :_reduce_none,
  3, 50, :_reduce_10,
  5, 50, :_reduce_11,
  4, 50, :_reduce_none,
  4, 50, :_reduce_none,
  6, 50, :_reduce_14,
  8, 50, :_reduce_15,
  6, 50, :_reduce_16,
  8, 50, :_reduce_none,
  10, 50, :_reduce_18,
  12, 50, :_reduce_19,
  6, 50, :_reduce_20,
  4, 50, :_reduce_none,
  5, 50, :_reduce_none,
  2, 50, :_reduce_none,
  2, 50, :_reduce_24,
  1, 55, :_reduce_25,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  3, 56, :_reduce_none,
  3, 56, :_reduce_none,
  1, 54, :_reduce_30,
  1, 53, :_reduce_31,
  1, 53, :_reduce_32,
  1, 52, :_reduce_33,
  1, 52, :_reduce_34,
  1, 52, :_reduce_35,
  1, 52, :_reduce_36,
  2, 52, :_reduce_37,
  3, 52, :_reduce_38,
  3, 52, :_reduce_39,
  3, 52, :_reduce_40,
  3, 52, :_reduce_41,
  3, 52, :_reduce_42,
  3, 52, :_reduce_43,
  3, 52, :_reduce_44,
  2, 52, :_reduce_45,
  3, 52, :_reduce_46,
  3, 52, :_reduce_47,
  3, 52, :_reduce_48,
  3, 52, :_reduce_49,
  3, 52, :_reduce_50,
  3, 52, :_reduce_51,
  3, 52, :_reduce_52,
  4, 52, :_reduce_53,
  3, 52, :_reduce_none ]

racc_reduce_n = 55

racc_shift_n = 168

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  Abre_Parentesis => 4,
  Cierra_Parentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  Signo_Coma => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  :UMENOS => 23,
  Pr_Number => 24,
  Pr_Boolean => 25,
  Program => 26,
  TkWith => 27,
  Cond_Do => 28,
  End => 29,
  Cond_Times => 30,
  Cond_If => 31,
  Cond_Then => 32,
  Cond_Else => 33,
  Cond_While => 34,
  Cond_For => 35,
  Cond_From => 36,
  Cond_To => 37,
  Cond_By => 38,
  Cond_Repeat => 39,
  TkBegin => 40,
  TkFunc => 41,
  Bool_True => 42,
  Bool_False => 43,
  Idtf => 44,
  Digit => 45,
  "return" => 46 }

racc_nt_base = 47

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "UMENOS",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Arg",
  "Exp",
  "TipoVar",
  "Id",
  "Num",
  "Attr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_10(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_11(val, _values, result)
     result = Declaracion.new(val[0],val[1],val[3]) 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'retina_parser.y', 93)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_15(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_16(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_18(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_19(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7],val[11]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 99)
  def _reduce_20(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_24(val, _values, result)
     result = Bloque_Cod.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_25(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_30(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_31(val, _values, result)
     result = Number.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_32(val, _values, result)
     result = Boolean.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_33(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_34(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_35(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_36(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_37(val, _values, result)
     result = MenosUnario.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_38(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_39(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_40(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_41(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_42(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_43(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_44(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_45(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_46(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_47(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_48(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_49(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_50(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_51(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_52(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_53(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 54 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
