#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Error de sintaxis en: #{@token}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 164)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end
   
def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end
   
def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    81,   125,    24,   112,    94,     6,    22,   143,   100,   132,
     3,   109,    32,    23,    33,   113,   101,   144,   -30,   110,
     4,   106,    18,    19,    24,     4,   -30,   121,    22,    18,
    19,   122,   124,   105,   111,    23,    18,    19,    99,    20,
    21,    37,    36,    18,    19,    96,    14,    76,    61,   127,
    12,   128,   129,    13,    15,    24,    75,   130,    16,    22,
    74,    20,    21,    10,    11,    50,    23,    51,    52,    53,
    56,   115,    54,    55,    18,    19,    64,    14,   134,   118,
   135,    12,   136,   119,    13,    15,    24,   137,   138,    16,
    22,   139,    20,    21,    10,    11,    24,    23,   140,    63,
    22,    62,    60,   145,   146,    18,    19,    23,    14,   -55,
   -55,   -55,    12,   -55,   -55,    13,    15,   147,    24,   148,
    16,   149,    22,    20,    21,    10,    11,    41,   152,    23,
   153,    40,    34,    20,    21,    37,    36,    18,    19,   156,
    14,    31,    24,     4,    12,   159,    22,    13,    15,    26,
    25,   162,    16,    23,     5,    20,    21,    10,    11,   164,
   165,    18,    19,   166,    14,   167,    24,   nil,    12,   nil,
    22,    13,    15,   nil,   nil,   nil,    16,    23,   nil,    20,
    21,    10,    11,   nil,   nil,    18,    19,   nil,    14,   nil,
    24,   nil,    12,   nil,    22,    13,    15,   nil,   nil,   nil,
    16,    23,   nil,    20,    21,    10,    11,    24,   nil,    18,
    19,    22,    14,   nil,    28,   nil,    12,   nil,    23,    13,
    15,    24,   nil,   nil,    16,    22,   nil,    20,    21,    10,
    11,    50,    23,    51,    52,    53,    56,   nil,    54,    55,
   nil,   nil,   nil,   nil,    20,    21,    37,    36,   nil,    50,
   nil,    24,    52,    53,    56,    22,    54,    55,    20,    21,
    37,    36,    23,    24,   nil,   nil,   nil,    22,    24,   nil,
    18,    19,    22,    14,    23,   155,   nil,    12,   nil,    23,
    13,    15,   -55,   -55,   -55,    16,   -55,   -55,    20,    21,
    10,    11,   nil,    24,   -55,   -55,   -55,    22,   -55,   -55,
    20,    21,    37,    36,    23,    20,    21,    37,    36,   nil,
    24,   nil,    18,    19,    22,    14,   nil,   123,   nil,    12,
   nil,    23,    13,    15,   -55,   -55,   -55,    16,   -55,   -55,
    20,    21,    10,    11,    24,    52,    53,    56,    22,    54,
    55,   nil,   nil,   nil,   nil,    23,   nil,    20,    21,    37,
    36,   nil,   nil,    18,    19,   nil,    14,   nil,    24,   nil,
    12,   nil,    22,    13,    15,   nil,   nil,   nil,    16,    23,
   nil,    20,    21,    10,    11,    24,   nil,    18,    19,    22,
    14,   nil,   nil,   nil,    12,   nil,    23,    13,    15,    24,
   nil,   nil,    16,    22,   nil,    20,    21,    10,    11,    24,
    23,   nil,   nil,    22,   -55,   -55,   -55,   nil,   -55,   -55,
    23,   nil,    20,    21,    37,    36,   nil,   nil,   nil,   nil,
   nil,    24,   nil,   nil,   nil,    22,    20,    21,    37,    36,
   nil,   nil,    23,   nil,   nil,   nil,    20,    21,    37,    36,
    18,    19,   nil,    14,   nil,    24,   nil,    12,   nil,    22,
    13,    15,   nil,   nil,   nil,    16,    23,   nil,    20,    21,
    10,    11,   nil,   nil,    18,    19,   nil,    14,   nil,   163,
   nil,    12,   nil,   nil,    13,    15,    24,   nil,   nil,    16,
    22,   nil,    20,    21,    10,    11,    50,    23,    51,    52,
    53,    56,   nil,    54,    55,    18,    19,   nil,    14,   nil,
   142,   nil,    12,   nil,   nil,    13,    15,    24,   nil,   nil,
    16,    22,   nil,    20,    21,    10,    11,    50,    23,    51,
    52,    53,    56,   nil,    54,    55,    18,    19,   nil,    14,
   nil,    24,   nil,    12,   nil,    22,    13,    15,   nil,   nil,
   nil,    16,    23,   nil,    20,    21,    10,    11,   nil,   nil,
    18,    19,   nil,    14,   nil,   141,   nil,    12,   nil,   nil,
    13,    15,    24,   nil,   nil,    16,    22,   nil,    20,    21,
    10,    11,    24,    23,   nil,   nil,    22,   nil,   nil,   nil,
   nil,    18,    19,    23,    14,   nil,    24,    66,    12,   nil,
    22,    13,    15,   nil,    24,   nil,    16,    23,    22,    20,
    21,    10,    11,    24,   nil,    23,   nil,    22,   nil,    20,
    21,    37,    36,   nil,    23,   nil,    24,   nil,   nil,   nil,
    22,   nil,   nil,    20,    21,    70,    36,    23,   nil,   nil,
   nil,    20,    21,    37,    36,   nil,   nil,   nil,   nil,   nil,
    20,    21,    37,    36,   nil,   nil,    24,   nil,   nil,   nil,
    22,   nil,   nil,    20,    21,    37,    36,    23,    24,   nil,
   nil,   nil,    22,    24,   nil,    18,    19,    22,    14,    23,
   nil,   nil,    12,   nil,    23,    13,    15,    24,   nil,   nil,
    16,    22,   nil,    20,    21,    10,    11,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,    20,    21,    37,    36,   nil,
    20,    21,    37,    36,   nil,   nil,   nil,    24,   nil,   nil,
   nil,    22,   nil,   nil,    20,    21,    37,    36,    23,    24,
   nil,   nil,   nil,    22,    24,   nil,   nil,   nil,    22,    24,
    23,   nil,   nil,    22,   nil,    23,   nil,    24,   nil,   nil,
    23,    22,   nil,   nil,    20,    21,    37,    36,    23,    24,
   nil,   nil,   nil,    22,   nil,   nil,    20,    21,    37,    36,
    23,    20,    21,    70,    36,   nil,    20,    21,    37,    36,
   nil,   nil,   nil,   nil,    20,    21,    37,    36,   nil,    24,
   nil,   nil,   nil,    22,   nil,   nil,    20,    21,    37,    36,
    23,    24,   nil,   nil,   nil,    22,    24,   nil,    48,    49,
    22,    47,    23,    45,    46,   nil,    50,    23,    51,    52,
    53,    56,   nil,    54,    55,   nil,    20,    21,    37,    36,
   nil,    24,   nil,   nil,   nil,    22,   nil,   nil,    20,    21,
    37,    36,    23,    20,    21,    37,    36,   nil,   nil,   nil,
    18,    19,   nil,    14,   nil,   120,   nil,    12,   nil,   nil,
    13,    15,   nil,   nil,   nil,    16,   nil,   nil,    20,    21,
    10,    11,    48,    49,    44,    47,    43,    45,    46,   nil,
    50,   nil,    51,    52,    53,    56,   nil,    54,    55,   nil,
    48,    49,    44,    47,    43,    45,    46,    72,    50,   nil,
    51,    52,    53,    56,   nil,    54,    55,   nil,   nil,   158,
   nil,    73,    48,    49,    44,    47,    43,    45,    46,   nil,
    50,   nil,    51,    52,    53,    56,   102,    54,    55,    48,
    49,    44,    47,    43,    45,    46,   nil,    50,   nil,    51,
    52,    53,    56,    42,    54,    55,    48,    49,    44,    47,
    43,    45,    46,   nil,    50,   nil,    51,    52,    53,    56,
   114,    54,    55,    48,    49,    44,    47,    43,    45,    46,
   nil,    50,   nil,    51,    52,    53,    56,   161,    54,    55,
    48,    49,    44,    47,    43,    45,    46,   nil,    50,   nil,
    51,    52,    53,    56,    98,    54,    55,    48,    49,    44,
    47,    43,    45,    46,   nil,    50,   nil,    51,    52,    53,
    56,   nil,    54,    55,    92,    48,    49,    44,    47,    43,
    45,    46,   nil,    50,   nil,    51,    52,    53,    56,   nil,
    54,    55,    48,    49,    44,    47,    43,    45,    46,   nil,
    50,   nil,    51,    52,    53,    56,   nil,    54,    55,    48,
    49,    44,    47,    43,    45,    46,   nil,    50,   nil,    51,
    52,    53,    56,   nil,    54,    55,    48,    49,   nil,    47,
   nil,    45,    46,   nil,    50,   nil,    51,    52,    53,    56,
   nil,    54,    55,    48,    49,   nil,    47,   nil,    45,    46,
   nil,    50,   nil,    51,    52,    53,    56,   nil,    54,    55,
    48,    49,    44,    47,    43,    45,    46,   nil,    50,   nil,
    51,    52,    53,    56,   nil,    54,    55,    50,   nil,    51,
    52,    53,    56,   nil,    54,    55 ]

racc_action_check = [
    46,   109,    46,    94,    60,     2,    46,   134,    67,   120,
     0,    93,    10,    46,    10,    95,    67,   134,    70,    93,
     2,    75,    60,    60,    27,     0,    70,   105,    27,    14,
    14,   106,   109,    74,    94,    27,   110,   110,    66,    46,
    46,    46,    46,    27,    27,    61,    27,    41,    27,   111,
    27,   112,   113,    27,    27,   103,    40,   118,    27,   103,
    39,    27,    27,    27,    27,    79,   103,    79,    79,    79,
    79,   100,    79,    79,   103,   103,    31,   103,   122,   103,
   123,   103,   124,   103,   103,   103,     3,   125,   126,   103,
     3,   127,   103,   103,   103,   103,    81,     3,   128,    30,
    81,    28,    25,   136,   137,     3,     3,    81,     3,    88,
    88,    88,     3,    88,    88,     3,     3,   140,   156,   141,
     3,   142,   156,     3,     3,     3,     3,    16,   144,   156,
   146,    15,    11,    81,    81,    81,    81,   156,   156,   151,
   156,     9,     6,     7,   156,   155,     6,   156,   156,     5,
     4,   158,   156,     6,     1,   156,   156,   156,   156,   161,
   162,     6,     6,   163,     6,   164,    76,   nil,     6,   nil,
    76,     6,     6,   nil,   nil,   nil,     6,    76,   nil,     6,
     6,     6,     6,   nil,   nil,    76,    76,   nil,    76,   nil,
     8,   nil,    76,   nil,     8,    76,    76,   nil,   nil,   nil,
    76,     8,   nil,    76,    76,    76,    76,   153,   nil,     8,
     8,   153,     8,   nil,     8,   nil,     8,   nil,   153,     8,
     8,    53,   nil,   nil,     8,    53,   nil,     8,     8,     8,
     8,    80,    53,    80,    80,    80,    80,   nil,    80,    80,
   nil,   nil,   nil,   nil,   153,   153,   153,   153,   nil,    86,
   nil,   150,    86,    86,    86,   150,    86,    86,    53,    53,
    53,    53,   150,    12,   nil,   nil,   nil,    12,    13,   nil,
   150,   150,    13,   150,    12,   150,   nil,   150,   nil,    13,
   150,   150,    89,    89,    89,   150,    89,    89,   150,   150,
   150,   150,   nil,   107,    90,    90,    90,   107,    90,    90,
    12,    12,    12,    12,   107,    13,    13,    13,    13,   nil,
   147,   nil,   107,   107,   147,   107,   nil,   107,   nil,   107,
   nil,   147,   107,   107,    91,    91,    91,   107,    91,    91,
   107,   107,   107,   107,   143,    85,    85,    85,   143,    85,
    85,   nil,   nil,   nil,   nil,   143,   nil,   147,   147,   147,
   147,   nil,   nil,   143,   143,   nil,   143,   nil,    73,   nil,
   143,   nil,    73,   143,   143,   nil,   nil,   nil,   143,    73,
   nil,   143,   143,   143,   143,    22,   nil,    73,    73,    22,
    73,   nil,   nil,   nil,    73,   nil,    22,    73,    73,    23,
   nil,   nil,    73,    23,   nil,    73,    73,    73,    73,    24,
    23,   nil,   nil,    24,    87,    87,    87,   nil,    87,    87,
    24,   nil,    22,    22,    22,    22,   nil,   nil,   nil,   nil,
   nil,    72,   nil,   nil,   nil,    72,    23,    23,    23,    23,
   nil,   nil,    72,   nil,   nil,   nil,    24,    24,    24,    24,
    72,    72,   nil,    72,   nil,   160,   nil,    72,   nil,   160,
    72,    72,   nil,   nil,   nil,    72,   160,   nil,    72,    72,
    72,    72,   nil,   nil,   160,   160,   nil,   160,   nil,   160,
   nil,   160,   nil,   nil,   160,   160,   133,   nil,   nil,   160,
   133,   nil,   160,   160,   160,   160,    82,   133,    82,    82,
    82,    82,   nil,    82,    82,   133,   133,   nil,   133,   nil,
   133,   nil,   133,   nil,   nil,   133,   133,    29,   nil,   nil,
   133,    29,   nil,   133,   133,   133,   133,    83,    29,    83,
    83,    83,    83,   nil,    83,    83,    29,    29,   nil,    29,
   nil,   131,   nil,    29,   nil,   131,    29,    29,   nil,   nil,
   nil,    29,   131,   nil,    29,    29,    29,    29,   nil,   nil,
   131,   131,   nil,   131,   nil,   131,   nil,   131,   nil,   nil,
   131,   131,   121,   nil,   nil,   131,   121,   nil,   131,   131,
   131,   131,    32,   121,   nil,   nil,    32,   nil,   nil,   nil,
   nil,   121,   121,    32,   121,   nil,    33,    33,   121,   nil,
    33,   121,   121,   nil,    34,   nil,   121,    33,    34,   121,
   121,   121,   121,    64,   nil,    34,   nil,    64,   nil,    32,
    32,    32,    32,   nil,    64,   nil,    56,   nil,   nil,   nil,
    56,   nil,   nil,    33,    33,    33,    33,    56,   nil,   nil,
   nil,    34,    34,    34,    34,   nil,   nil,   nil,   nil,   nil,
    64,    64,    64,    64,   nil,   nil,   119,   nil,   nil,   nil,
   119,   nil,   nil,    56,    56,    56,    56,   119,    55,   nil,
   nil,   nil,    55,    54,   nil,   119,   119,    54,   119,    55,
   nil,   nil,   119,   nil,    54,   119,   119,    43,   nil,   nil,
   119,    43,   nil,   119,   119,   119,   119,   nil,    43,   nil,
   nil,   nil,   nil,   nil,   nil,    55,    55,    55,    55,   nil,
    54,    54,    54,    54,   nil,   nil,   nil,    44,   nil,   nil,
   nil,    44,   nil,   nil,    43,    43,    43,    43,    44,    45,
   nil,   nil,   nil,    45,   101,   nil,   nil,   nil,   101,    47,
    45,   nil,   nil,    47,   nil,   101,   nil,    48,   nil,   nil,
    47,    48,   nil,   nil,    44,    44,    44,    44,    48,    49,
   nil,   nil,   nil,    49,   nil,   nil,    45,    45,    45,    45,
    49,   101,   101,   101,   101,   nil,    47,    47,    47,    47,
   nil,   nil,   nil,   nil,    48,    48,    48,    48,   nil,    50,
   nil,   nil,   nil,    50,   nil,   nil,    49,    49,    49,    49,
    50,    51,   nil,   nil,   nil,    51,    52,   nil,    77,    77,
    52,    77,    51,    77,    77,   nil,    77,    52,    77,    77,
    77,    77,   nil,    77,    77,   nil,    50,    50,    50,    50,
   nil,   104,   nil,   nil,   nil,   104,   nil,   nil,    51,    51,
    51,    51,   104,    52,    52,    52,    52,   nil,   nil,   nil,
   104,   104,   nil,   104,   nil,   104,   nil,   104,   nil,   nil,
   104,   104,   nil,   nil,   nil,   104,   nil,   nil,   104,   104,
   104,   104,    35,    35,    35,    35,    35,    35,    35,   nil,
    35,   nil,    35,    35,    35,    35,   nil,    35,    35,   nil,
    38,    38,    38,    38,    38,    38,    38,    35,    38,   nil,
    38,    38,    38,    38,   nil,    38,    38,   nil,   nil,   154,
   nil,    38,   154,   154,   154,   154,   154,   154,   154,   nil,
   154,   nil,   154,   154,   154,   154,    71,   154,   154,    71,
    71,    71,    71,    71,    71,    71,   nil,    71,   nil,    71,
    71,    71,    71,    17,    71,    71,    17,    17,    17,    17,
    17,    17,    17,   nil,    17,   nil,    17,    17,    17,    17,
    97,    17,    17,    97,    97,    97,    97,    97,    97,    97,
   nil,    97,   nil,    97,    97,    97,    97,   157,    97,    97,
   157,   157,   157,   157,   157,   157,   157,   nil,   157,   nil,
   157,   157,   157,   157,    65,   157,   157,    65,    65,    65,
    65,    65,    65,    65,   nil,    65,   nil,    65,    65,    65,
    65,   nil,    65,    65,    59,    59,    59,    59,    59,    59,
    59,    59,   nil,    59,   nil,    59,    59,    59,    59,   nil,
    59,    59,   108,   108,   108,   108,   108,   108,   108,   nil,
   108,   nil,   108,   108,   108,   108,   nil,   108,   108,    68,
    68,    68,    68,    68,    68,    68,   nil,    68,   nil,    68,
    68,    68,    68,   nil,    68,    68,    57,    57,   nil,    57,
   nil,    57,    57,   nil,    57,   nil,    57,    57,    57,    57,
   nil,    57,    57,    78,    78,   nil,    78,   nil,    78,    78,
   nil,    78,   nil,    78,    78,    78,    78,   nil,    78,    78,
   116,   116,   116,   116,   116,   116,   116,   nil,   116,   nil,
   116,   116,   116,   116,   nil,   116,   116,    84,   nil,    84,
    84,    84,    84,   nil,    84,    84 ]

racc_action_pointer = [
   -15,   154,   -20,    82,   107,   149,   138,   103,   186,    98,
    10,   130,   259,   264,     6,    88,    83,   930,   nil,   nil,
   nil,   nil,   371,   385,   395,    98,   nil,    20,    98,   503,
    96,    74,   568,   582,   590,   856,   nil,   nil,   874,    17,
    21,    18,   nil,   673,   703,   715,    -2,   725,   733,   745,
   775,   787,   792,   217,   659,   654,   612,  1050,   nil,   999,
    -1,    42,   nil,   nil,   599,   981,    35,     3,  1033,   nil,
    13,   913,   417,   354,    30,   -23,   162,   792,  1067,    51,
   217,    92,   472,   503,  1093,   318,   235,   387,    92,   265,
   277,   307,   nil,     6,    -5,     2,   nil,   947,   nil,   nil,
    68,   720,   nil,    51,   817,     0,    -5,   289,  1016,    -7,
    13,    21,    34,     9,   nil,   nil,  1084,   nil,    54,   642,
     6,   558,    34,    77,    54,    70,    45,    88,    59,   nil,
   nil,   527,   nil,   472,   -20,   nil,   100,    65,   nil,   nil,
    72,   116,   118,   330,    84,   nil,    85,   306,   nil,   nil,
   247,   112,   nil,   203,   896,   142,   114,   964,   123,   nil,
   441,   131,   157,   160,   162,   nil,   nil,   nil ]

racc_action_default = [
   -55,   -55,   -55,   -55,   -55,   -55,   -55,    -3,   -55,   -55,
   -34,   -33,   -55,   -55,   -55,   -55,   -55,   -55,   -31,   -32,
   -35,   -36,   -55,   -55,   -55,   -55,   168,   -55,   -55,   -24,
   -55,   -30,   -55,   -55,   -55,   -55,   -33,   -34,   -55,   -55,
   -55,   -55,   -23,   -55,   -55,   -55,   -55,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -37,   -45,   -55,
   -55,   -55,    -2,   -10,   -55,   -55,   -55,   -55,   -26,   -27,
   -34,   -55,   -55,   -55,   -55,   -55,   -55,   -38,   -39,   -40,
   -41,   -55,   -42,   -43,   -44,   -46,   -47,   -48,   -49,   -50,
   -51,   -52,   -54,   -55,   -55,   -55,    -1,   -55,   -12,   -21,
   -55,   -55,   -13,   -55,   -55,   -55,   -55,   -55,   -53,   -55,
   -55,   -55,   -55,   -55,   -11,   -22,   -28,   -29,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -55,    -8,
   -14,   -55,   -16,   -55,   -55,   -20,   -55,   -55,    -9,    -5,
   -55,   -55,   -55,   -55,   -55,    -4,   -55,   -55,   -15,   -17,
   -55,   -55,   -25,   -55,   -55,   -55,   -55,   -55,   -55,   -18,
   -55,   -55,   -55,   -55,   -55,    -7,   -19,    -6 ]

racc_goto_table = [
     8,    30,     1,    27,    93,    39,    35,    38,     2,   151,
    67,   nil,   nil,   nil,   nil,   nil,    57,    58,    59,   nil,
   nil,   nil,   nil,   nil,   nil,    69,    65,    68,    71,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    77,    78,    79,
    80,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    95,   nil,   nil,   nil,   nil,   nil,   nil,    97,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   103,
   104,   nil,   nil,   107,   nil,   108,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   117,   nil,   116,   nil,   nil,   nil,   nil,
   nil,   126,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   131,   nil,   133,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   150,   154,   nil,   nil,   nil,   nil,   nil,   157,   nil,   nil,
   nil,   nil,   nil,   160 ]

racc_goto_check = [
     3,     7,     1,     3,     4,     6,     5,     5,     2,     8,
     9,   nil,   nil,   nil,   nil,   nil,     5,     5,     5,   nil,
   nil,   nil,   nil,   nil,   nil,     7,     5,     5,     5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,     5,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     6,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
     3,   nil,   nil,     3,   nil,     5,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,   nil,     5,   nil,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,     5,   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,
   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     2,     8,    -3,   -56,    -6,    -9,    -8,  -135,   -23 ]

racc_goto_default = [
   nil,   nil,     7,    29,   nil,    17,     9,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 47, :_reduce_none,
  4, 47, :_reduce_2,
  2, 48, :_reduce_none,
  8, 48, :_reduce_none,
  7, 48, :_reduce_none,
  13, 48, :_reduce_none,
  12, 48, :_reduce_none,
  3, 50, :_reduce_none,
  4, 50, :_reduce_none,
  3, 49, :_reduce_10,
  5, 49, :_reduce_11,
  4, 49, :_reduce_none,
  4, 49, :_reduce_none,
  6, 49, :_reduce_14,
  8, 49, :_reduce_15,
  6, 49, :_reduce_16,
  8, 49, :_reduce_none,
  10, 49, :_reduce_18,
  12, 49, :_reduce_19,
  6, 49, :_reduce_20,
  4, 49, :_reduce_none,
  5, 49, :_reduce_none,
  2, 49, :_reduce_none,
  2, 49, :_reduce_24,
  1, 54, :_reduce_25,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  3, 55, :_reduce_none,
  3, 55, :_reduce_none,
  1, 53, :_reduce_30,
  1, 52, :_reduce_31,
  1, 52, :_reduce_32,
  1, 51, :_reduce_33,
  1, 51, :_reduce_34,
  1, 51, :_reduce_35,
  1, 51, :_reduce_36,
  2, 51, :_reduce_none,
  3, 51, :_reduce_38,
  3, 51, :_reduce_39,
  3, 51, :_reduce_40,
  3, 51, :_reduce_41,
  3, 51, :_reduce_42,
  3, 51, :_reduce_43,
  3, 51, :_reduce_44,
  2, 51, :_reduce_45,
  3, 51, :_reduce_46,
  3, 51, :_reduce_47,
  3, 51, :_reduce_48,
  3, 51, :_reduce_49,
  3, 51, :_reduce_50,
  3, 51, :_reduce_51,
  3, 51, :_reduce_52,
  4, 51, :_reduce_53,
  3, 51, :_reduce_none ]

racc_reduce_n = 55

racc_shift_n = 168

racc_token_table = {
  false => 0,
  :error => 1,
  Asignacion => 2,
  PuntoComa => 3,
  Abre_Parentesis => 4,
  Cierra_Parentesis => 5,
  Fraccion_Entera => 6,
  Residuo_Entero => 7,
  Sustraccion => 8,
  Residuo_Exacto => 9,
  Adicion => 10,
  Repeticion => 11,
  Fraccion_Exacta => 12,
  Signo_Coma => 13,
  And => 14,
  Not => 15,
  Or => 16,
  MayorEstricto => 17,
  MenorEstricto => 18,
  Equivale => 19,
  Inequivale => 20,
  MayorIgual => 21,
  MenorIgual => 22,
  Pr_Number => 23,
  Pr_Boolean => 24,
  Program => 25,
  TkWith => 26,
  Cond_Do => 27,
  End => 28,
  Cond_Times => 29,
  Cond_If => 30,
  Cond_Then => 31,
  Cond_Else => 32,
  Cond_While => 33,
  Cond_For => 34,
  Cond_From => 35,
  Cond_To => 36,
  Cond_By => 37,
  Cond_Repeat => 38,
  TkBegin => 39,
  TkFunc => 40,
  Bool_True => 41,
  Bool_False => 42,
  Idtf => 43,
  Digit => 44,
  "return" => 45 }

racc_nt_base = 46

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"=\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "\"div\"",
  "\"mod\"",
  "\"-\"",
  "\"%\"",
  "\"+\"",
  "\"*\"",
  "\"/\"",
  "\",\"",
  "\"and\"",
  "\"not\"",
  "\"or\"",
  "\">\"",
  "\"<\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\"number\"",
  "\"boolean\"",
  "\"program\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"times\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"begin\"",
  "\"func\"",
  "\"true\"",
  "\"false\"",
  "\"id\"",
  "\"num\"",
  "\"return\"",
  "$start",
  "Inicio",
  "Funcion",
  "Bloque",
  "Arg",
  "Exp",
  "TipoVar",
  "Id",
  "Num",
  "Attr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_2(val, _values, result)
     result = Inicio.new(val[1]) 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_10(val, _values, result)
     result = Declaracion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_11(val, _values, result)
     result = Declaracion.new(val[0],val[1],val[3]) 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'retina_parser.y', 93)
  def _reduce_14(val, _values, result)
     result = If.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_15(val, _values, result)
     result = If.new(val[1],val[3],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_16(val, _values, result)
     result = While.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_18(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_19(val, _values, result)
     result = For.new(val[1],val[3],val[5],val[7],val[11]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 99)
  def _reduce_20(val, _values, result)
     result = Repeat.new(val[1],val[3]) 
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_24(val, _values, result)
     result = Bloque_Cod.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_25(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_30(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_31(val, _values, result)
     result = Number.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_32(val, _values, result)
     result = Boolean.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_33(val, _values, result)
     result = Numero.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_34(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_35(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_36(val, _values, result)
     result = Booleano.new(val[0]) 
    result
  end
.,.,

# reduce 37 omitted

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_38(val, _values, result)
     result = Suma.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_39(val, _values, result)
     result = Resta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_40(val, _values, result)
     result = Multiplicacion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_41(val, _values, result)
     result = Division_Exacta.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_42(val, _values, result)
     result = Resto_Exacto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_43(val, _values, result)
     result = Division_Entera.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_44(val, _values, result)
     result = Resto_Entero.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_45(val, _values, result)
     result = Negado.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_46(val, _values, result)
     result = Conjuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_47(val, _values, result)
     result = Disyuncion.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_48(val, _values, result)
     result = Mayor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_49(val, _values, result)
     result = Menor_Estricto.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_50(val, _values, result)
     result = Mayor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_51(val, _values, result)
     result = Menor_Igual.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_52(val, _values, result)
     result = Equivalencia.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_53(val, _values, result)
     result = Inequivalencia.new(val[0],val[2]) 
    result
  end
.,.,

# reduce 54 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
